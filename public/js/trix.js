/*
Trix 1.3.0
Copyright Â© 2020 Basecamp, LLC
http://trix-editor.org/
 */
(function () {}).call(this), (function () { let t; window.Set == null && (window.Set = t = (function () { function t () { this.clear() } return t.prototype.clear = function () { return this.values = [] }, t.prototype.has = function (t) { return this.values.indexOf(t) !== -1 }, t.prototype.add = function (t) { return this.has(t) || this.values.push(t), this }, t.prototype.delete = function (t) { let e; return (e = this.values.indexOf(t)) === -1 ? !1 : (this.values.splice(e, 1), !0) }, t.prototype.forEach = function () { let t; return (t = this.values).forEach.apply(t, arguments) }, t }())) }.call(this)), (function (t) { function e () {} function n (t, e) { return function () { t.apply(e, arguments) } } function i (t) { if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new'); if (typeof t !== 'function') throw new TypeError('not a function'); this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], c(t, this) } function o (t, e) { for (;t._state === 3;)t = t._value; return t._state === 0 ? void t._deferreds.push(e) : (t._handled = !0, void h(function () { const n = t._state === 1 ? e.onFulfilled : e.onRejected; if (n === null) return void (t._state === 1 ? r : s)(e.promise, t._value); let i; try { i = n(t._value) } catch (o) { return void s(e.promise, o) }r(e.promise, i) })) } function r (t, e) { try { if (e === t) throw new TypeError('A promise cannot be resolved with itself.'); if (e && (typeof e === 'object' || typeof e === 'function')) { const o = e.then; if (e instanceof i) return t._state = 3, t._value = e, void a(t); if (typeof o === 'function') return void c(n(o, e), t) }t._state = 1, t._value = e, a(t) } catch (r) { s(t, r) } } function s (t, e) { t._state = 2, t._value = e, a(t) } function a (t) { t._state === 2 && t._deferreds.length === 0 && setTimeout(function () { t._handled || p(t._value) }, 1); for (let e = 0, n = t._deferreds.length; n > e; e++)o(t, t._deferreds[e]); t._deferreds = null } function u (t, e, n) { this.onFulfilled = typeof t === 'function' ? t : null, this.onRejected = typeof e === 'function' ? e : null, this.promise = n } function c (t, e) { let n = !1; try { t(function (t) { n || (n = !0, r(e, t)) }, function (t) { n || (n = !0, s(e, t)) }) } catch (i) { if (n) return; n = !0, s(e, i) } } const l = setTimeout; var h = typeof setImmediate === 'function' && setImmediate || function (t) { l(t, 1) }; var p = function (t) { typeof console !== 'undefined' && console && console.warn('Possible Unhandled Promise Rejection:', t) }; i.prototype.catch = function (t) { return this.then(null, t) }, i.prototype.then = function (t, n) { const r = new i(e); return o(this, new u(t, n, r)), r }, i.all = function (t) { const e = Array.prototype.slice.call(t); return new i(function (t, n) { function i (r, s) { try { if (s && (typeof s === 'object' || typeof s === 'function')) { const a = s.then; if (typeof a === 'function') return void a.call(s, function (t) { i(r, t) }, n) }e[r] = s, --o === 0 && t(e) } catch (u) { n(u) } } if (e.length === 0) return t([]); for (var o = e.length, r = 0; r < e.length; r++)i(r, e[r]) }) }, i.resolve = function (t) { return t && typeof t === 'object' && t.constructor === i ? t : new i(function (e) { e(t) }) }, i.reject = function (t) { return new i(function (e, n) { n(t) }) }, i.race = function (t) { return new i(function (e, n) { for (let i = 0, o = t.length; o > i; i++)t[i].then(e, n) }) }, i._setImmediateFn = function (t) { h = t }, i._setUnhandledRejectionFn = function (t) { p = t }, typeof module !== 'undefined' && module.exports ? module.exports = i : t.Promise || (t.Promise = i) }(this)), (function () {
  const t = typeof window.customElements === 'object'; const e = typeof document.registerElement === 'function'; const n = t || e; n || (/**
 * @license
 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
    typeof WeakMap === 'undefined' && !(function () { const t = Object.defineProperty; let e = Date.now() % 1e9; const n = function () { this.name = '__st' + (1e9 * Math.random() >>> 0) + (e++ + '__') }; n.prototype = { set: function (e, n) { const i = e[this.name]; return i && i[0] === e ? i[1] = n : t(e, this.name, { value: [e, n], writable: !0 }), this }, get: function (t) { let e; return (e = t[this.name]) && e[0] === t ? e[1] : void 0 }, delete: function (t) { const e = t[this.name]; return e && e[0] === t ? (e[0] = e[1] = void 0, !0) : !1 }, has: function (t) { const e = t[this.name]; return e ? e[0] === t : !1 } }, window.WeakMap = n }()), (function (t) { function e (t) { A.push(t), b || (b = !0, g(i)) } function n (t) { return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(t) || t } function i () { b = !1; const t = A; A = [], t.sort(function (t, e) { return t.uid_ - e.uid_ }); let e = !1; t.forEach(function (t) { const n = t.takeRecords(); o(t), n.length && (t.callback_(n, t), e = !0) }), e && i() } function o (t) { t.nodes_.forEach(function (e) { const n = m.get(e); n && n.forEach(function (e) { e.observer === t && e.removeTransientObservers() }) }) } function r (t, e) { for (let n = t; n; n = n.parentNode) { const i = m.get(n); if (i) for (let o = 0; o < i.length; o++) { const r = i[o]; const s = r.options; if (n === t || s.subtree) { const a = e(s); a && r.enqueue(a) } } } } function s (t) { this.callback_ = t, this.nodes_ = [], this.records_ = [], this.uid_ = ++C } function a (t, e) { this.type = t, this.target = e, this.addedNodes = [], this.removedNodes = [], this.previousSibling = null, this.nextSibling = null, this.attributeName = null, this.attributeNamespace = null, this.oldValue = null } function u (t) { const e = new a(t.type, t.target); return e.addedNodes = t.addedNodes.slice(), e.removedNodes = t.removedNodes.slice(), e.previousSibling = t.previousSibling, e.nextSibling = t.nextSibling, e.attributeName = t.attributeName, e.attributeNamespace = t.attributeNamespace, e.oldValue = t.oldValue, e } function c (t, e) { return x = new a(t, e) } function l (t) { return w || (w = u(x), w.oldValue = t, w) } function h () { x = w = void 0 } function p (t) { return t === w || t === x } function d (t, e) { return t === e ? t : w && p(t) ? w : null } function f (t, e, n) { this.observer = t, this.target = e, this.options = n, this.transientObservedNodes = [] } if (!t.JsMutationObserver) { var g; var m = new WeakMap(); if (/Trident|Edge/.test(navigator.userAgent))g = setTimeout; else if (window.setImmediate)g = window.setImmediate; else { let v = []; const y = String(Math.random()); window.addEventListener('message', function (t) { if (t.data === y) { const e = v; v = [], e.forEach(function (t) { t() }) } }), g = function (t) { v.push(t), window.postMessage(y, '*') } } var b = !1; var A = []; var C = 0; s.prototype = { observe: function (t, e) { if (t = n(t), !e.childList && !e.attributes && !e.characterData || e.attributeOldValue && !e.attributes || e.attributeFilter && e.attributeFilter.length && !e.attributes || e.characterDataOldValue && !e.characterData) throw new SyntaxError(); let i = m.get(t); i || m.set(t, i = []); for (var o, r = 0; r < i.length; r++) if (i[r].observer === this) { o = i[r], o.removeListeners(), o.options = e; break }o || (o = new f(this, t, e), i.push(o), this.nodes_.push(t)), o.addListeners() }, disconnect: function () { this.nodes_.forEach(function (t) { for (let e = m.get(t), n = 0; n < e.length; n++) { const i = e[n]; if (i.observer === this) { i.removeListeners(), e.splice(n, 1); break } } }, this), this.records_ = [] }, takeRecords: function () { const t = this.records_; return this.records_ = [], t } }; var x, w; f.prototype = { enqueue: function (t) { const n = this.observer.records_; const i = n.length; if (n.length > 0) { const o = n[i - 1]; const r = d(o, t); if (r) return void (n[i - 1] = r) } else e(this.observer); n[i] = t }, addListeners: function () { this.addListeners_(this.target) }, addListeners_: function (t) { const e = this.options; e.attributes && t.addEventListener('DOMAttrModified', this, !0), e.characterData && t.addEventListener('DOMCharacterDataModified', this, !0), e.childList && t.addEventListener('DOMNodeInserted', this, !0), (e.childList || e.subtree) && t.addEventListener('DOMNodeRemoved', this, !0) }, removeListeners: function () { this.removeListeners_(this.target) }, removeListeners_: function (t) { const e = this.options; e.attributes && t.removeEventListener('DOMAttrModified', this, !0), e.characterData && t.removeEventListener('DOMCharacterDataModified', this, !0), e.childList && t.removeEventListener('DOMNodeInserted', this, !0), (e.childList || e.subtree) && t.removeEventListener('DOMNodeRemoved', this, !0) }, addTransientObserver: function (t) { if (t !== this.target) { this.addListeners_(t), this.transientObservedNodes.push(t); let e = m.get(t); e || m.set(t, e = []), e.push(this) } }, removeTransientObservers: function () { const t = this.transientObservedNodes; this.transientObservedNodes = [], t.forEach(function (t) { this.removeListeners_(t); for (let e = m.get(t), n = 0; n < e.length; n++) if (e[n] === this) { e.splice(n, 1); break } }, this) }, handleEvent: function (t) { switch (t.stopImmediatePropagation(), t.type) { case 'DOMAttrModified':var e = t.attrName; var n = t.relatedNode.namespaceURI; var i = t.target; var o = new c('attributes', i); o.attributeName = e, o.attributeNamespace = n; var s = t.attrChange === MutationEvent.ADDITION ? null : t.prevValue; r(i, function (t) { return !t.attributes || t.attributeFilter && t.attributeFilter.length && t.attributeFilter.indexOf(e) === -1 && t.attributeFilter.indexOf(n) === -1 ? void 0 : t.attributeOldValue ? l(s) : o }); break; case 'DOMCharacterDataModified':var i = t.target; var o = c('characterData', i); var s = t.prevValue; r(i, function (t) { return t.characterData ? t.characterDataOldValue ? l(s) : o : void 0 }); break; case 'DOMNodeRemoved':this.addTransientObserver(t.target); case 'DOMNodeInserted':var a; var u; var p = t.target; t.type === 'DOMNodeInserted' ? (a = [p], u = []) : (a = [], u = [p]); var d = p.previousSibling; var f = p.nextSibling; var o = c('childList', t.target.parentNode); o.addedNodes = a, o.removedNodes = u, o.previousSibling = d, o.nextSibling = f, r(t.relatedNode, function (t) { return t.childList ? o : void 0 }) }h() } }, t.JsMutationObserver = s, t.MutationObserver || (t.MutationObserver = s, s._isPolyfilled = !0) } }(self)), (function () { 'use strict'; if (!window.performance || !window.performance.now) { const t = Date.now(); window.performance = { now: function () { return Date.now() - t } } }window.requestAnimationFrame || (window.requestAnimationFrame = (function () { const t = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame; return t ? function (e) { return t(function () { e(performance.now()) }) } : function (t) { return window.setTimeout(t, 1e3 / 60) } }())), window.cancelAnimationFrame || (window.cancelAnimationFrame = (function () { return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function (t) { clearTimeout(t) } }())); const e = (function () { const t = document.createEvent('Event'); return t.initEvent('foo', !0, !0), t.preventDefault(), t.defaultPrevented }()); if (!e) { const n = Event.prototype.preventDefault; Event.prototype.preventDefault = function () { this.cancelable && (n.call(this), Object.defineProperty(this, 'defaultPrevented', { get: function () { return !0 }, configurable: !0 })) } } const i = /Trident/.test(navigator.userAgent); if ((!window.CustomEvent || i && typeof window.CustomEvent !== 'function') && (window.CustomEvent = function (t, e) { e = e || {}; const n = document.createEvent('CustomEvent'); return n.initCustomEvent(t, Boolean(e.bubbles), Boolean(e.cancelable), e.detail), n }, window.CustomEvent.prototype = window.Event.prototype), !window.Event || i && typeof window.Event !== 'function') { const o = window.Event; window.Event = function (t, e) { e = e || {}; const n = document.createEvent('Event'); return n.initEvent(t, Boolean(e.bubbles), Boolean(e.cancelable)), n }, window.Event.prototype = o.prototype } }(window.WebComponents)), window.CustomElements = window.CustomElements || { flags: {} }, (function (t) { const e = t.flags; const n = []; const i = function (t) { n.push(t) }; const o = function () { n.forEach(function (e) { e(t) }) }; t.addModule = i, t.initializeModules = o, t.hasNative = Boolean(document.registerElement), t.isIE = /Trident/.test(navigator.userAgent), t.useNative = !e.register && t.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative) }(window.CustomElements)), window.CustomElements.addModule(function (t) { function e (t, e) { n(t, function (t) { return e(t) ? !0 : void i(t, e) }), i(t, e) } function n (t, e, i) { let o = t.firstElementChild; if (!o) for (o = t.firstChild; o && o.nodeType !== Node.ELEMENT_NODE;)o = o.nextSibling; for (;o;)e(o, i) !== !0 && n(o, e, i), o = o.nextElementSibling; return null } function i (t, n) { for (let i = t.shadowRoot; i;)e(i, n), i = i.olderShadowRoot } function o (t, e) { r(t, e, []) } function r (t, e, n) { if (t = window.wrap(t), !(n.indexOf(t) >= 0)) { n.push(t); for (var i, o = t.querySelectorAll('link[rel=' + s + ']'), a = 0, u = o.length; u > a && (i = o[a]); a++)i.import && r(i.import, e, n); e(t) } } var s = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : 'none'; t.forDocumentTree = o, t.forSubtree = e }), window.CustomElements.addModule(function (t) { function e (t, e) { return n(t, e) || i(t, e) } function n (e, n) { return t.upgrade(e, n) ? !0 : void (n && s(e)) } function i (t, e) { b(t, function (t) { return n(t, e) ? !0 : void 0 }) } function o (t) { w.push(t), x || (x = !0, setTimeout(r)) } function r () { x = !1; for (var t, e = w, n = 0, i = e.length; i > n && (t = e[n]); n++)t(); w = [] } function s (t) { C ? o(function () { a(t) }) : a(t) } function a (t) { t.__upgraded__ && !t.__attached && (t.__attached = !0, t.attachedCallback && t.attachedCallback()) } function u (t) { c(t), b(t, function (t) { c(t) }) } function c (t) { C ? o(function () { l(t) }) : l(t) } function l (t) { t.__upgraded__ && t.__attached && (t.__attached = !1, t.detachedCallback && t.detachedCallback()) } function h (t) { for (let e = t, n = window.wrap(document); e;) { if (e == n) return !0; e = e.parentNode || e.nodeType === Node.DOCUMENT_FRAGMENT_NODE && e.host } } function p (t) { if (t.shadowRoot && !t.shadowRoot.__watched) { y.dom && console.log('watching shadow-root for: ', t.localName); for (let e = t.shadowRoot; e;)g(e), e = e.olderShadowRoot } } function d (t, n) { if (y.dom) { const i = n[0]; if (i && i.type === 'childList' && i.addedNodes && i.addedNodes) { for (var o = i.addedNodes[0]; o && o !== document && !o.host;)o = o.parentNode; var r = o && (o.URL || o._URL || o.host && o.host.localName) || ''; r = r.split('/?').shift().split('/').pop() }console.group('mutations (%d) [%s]', n.length, r || '') } const s = h(t); n.forEach(function (t) { t.type === 'childList' && (E(t.addedNodes, function (t) { t.localName && e(t, s) }), E(t.removedNodes, function (t) { t.localName && u(t) })) }), y.dom && console.groupEnd() } function f (t) { for (t = window.wrap(t), t || (t = window.wrap(document)); t.parentNode;)t = t.parentNode; const e = t.__observer; e && (d(t, e.takeRecords()), r()) } function g (t) { if (!t.__observer) { const e = new MutationObserver(d.bind(this, t)); e.observe(t, { childList: !0, subtree: !0 }), t.__observer = e } } function m (t) { t = window.wrap(t), y.dom && console.group('upgradeDocument: ', t.baseURI.split('/').pop()); const n = t === window.wrap(document); e(t, n), g(t), y.dom && console.groupEnd() } function v (t) { A(t, m) } var y = t.flags; var b = t.forSubtree; var A = t.forDocumentTree; var C = window.MutationObserver._isPolyfilled && y['throttle-attached']; t.hasPolyfillMutations = C, t.hasThrottledAttached = C; var x = !1; var w = []; var E = Array.prototype.forEach.call.bind(Array.prototype.forEach); const S = Element.prototype.createShadowRoot; S && (Element.prototype.createShadowRoot = function () { const t = S.call(this); return window.CustomElements.watchShadow(this), t }), t.watchShadow = p, t.upgradeDocumentTree = v, t.upgradeDocument = m, t.upgradeSubtree = i, t.upgradeAll = e, t.attached = s, t.takeRecords = f }), window.CustomElements.addModule(function (t) { function e (e, i) { if (e.localName === 'template' && window.HTMLTemplateElement && HTMLTemplateElement.decorate && HTMLTemplateElement.decorate(e), !e.__upgraded__ && e.nodeType === Node.ELEMENT_NODE) { const o = e.getAttribute('is'); const r = t.getRegisteredDefinition(e.localName) || t.getRegisteredDefinition(o); if (r && (o && r.tag == e.localName || !o && !r.extends)) return n(e, r, i) } } function n (e, n, o) { return s.upgrade && console.group('upgrade:', e.localName), n.is && e.setAttribute('is', n.is), i(e, n), e.__upgraded__ = !0, r(e), o && t.attached(e), t.upgradeSubtree(e, o), s.upgrade && console.groupEnd(), e } function i (t, e) { Object.__proto__ ? t.__proto__ = e.prototype : (o(t, e.prototype, e.native), t.__proto__ = e.prototype) } function o (t, e, n) { for (let i = {}, o = e; o !== n && o !== HTMLElement.prototype;) { for (var r, s = Object.getOwnPropertyNames(o), a = 0; r = s[a]; a++)i[r] || (Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(o, r)), i[r] = 1); o = Object.getPrototypeOf(o) } } function r (t) { t.createdCallback && t.createdCallback() } var s = t.flags; t.upgrade = e, t.upgradeWithDefinition = n, t.implementPrototype = i }), window.CustomElements.addModule(function (t) { function e (e, i) { const u = i || {}; if (!e) throw new Error('document.registerElement: first argument `name` must not be empty'); if (e.indexOf('-') < 0) throw new Error("document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '" + String(e) + "'."); if (o(e)) throw new Error("Failed to execute 'registerElement' on 'Document': Registration failed for type '" + String(e) + "'. The type name is invalid."); if (c(e)) throw new Error("DuplicateDefinitionError: a type with name '" + String(e) + "' is already registered"); return u.prototype || (u.prototype = Object.create(HTMLElement.prototype)), u.__name = e.toLowerCase(), u.extends && (u.extends = u.extends.toLowerCase()), u.lifecycle = u.lifecycle || {}, u.ancestry = r(u.extends), s(u), a(u), n(u.prototype), l(u.__name, u), u.ctor = h(u), u.ctor.prototype = u.prototype, u.prototype.constructor = u.ctor, t.ready && m(document), u.ctor } function n (t) { if (!t.setAttribute._polyfilled) { const e = t.setAttribute; t.setAttribute = function (t, n) { i.call(this, t, n, e) }; const n = t.removeAttribute; t.removeAttribute = function (t) { i.call(this, t, null, n) }, t.setAttribute._polyfilled = !0 } } function i (t, e, n) { t = t.toLowerCase(); const i = this.getAttribute(t); n.apply(this, arguments); const o = this.getAttribute(t); this.attributeChangedCallback && o !== i && this.attributeChangedCallback(t, i, o) } function o (t) { for (let e = 0; e < C.length; e++) if (t === C[e]) return !0 } function r (t) { const e = c(t); return e ? r(e.extends).concat([e]) : [] } function s (t) { for (var e, n = t.extends, i = 0; e = t.ancestry[i]; i++)n = e.is && e.tag; t.tag = n || t.__name, n && (t.is = t.__name) } function a (t) { if (!Object.__proto__) { let e = HTMLElement.prototype; if (t.is) { const n = document.createElement(t.tag); e = Object.getPrototypeOf(n) } for (var i, o = t.prototype, r = !1; o;)o == e && (r = !0), i = Object.getPrototypeOf(o), i && (o.__proto__ = i), o = i; r || console.warn(t.tag + ' prototype not found in prototype chain for ' + t.is), t.native = e } } function u (t) { return y(E(t.tag), t) } function c (t) { return t ? x[t.toLowerCase()] : void 0 } function l (t, e) { x[t] = e } function h (t) { return function () { return u(t) } } function p (t, e, n) { return t === w ? d(e, n) : S(t, e) } function d (t, e) { t && (t = t.toLowerCase()), e && (e = e.toLowerCase()); const n = c(e || t); if (n) { if (t == n.tag && e == n.is) return new n.ctor(); if (!e && !n.is) return new n.ctor() } let i; return e ? (i = d(t), i.setAttribute('is', e), i) : (i = E(t), t.indexOf('-') >= 0 && b(i, HTMLElement), i) } function f (t, e) { const n = t[e]; t[e] = function () { const t = n.apply(this, arguments); return v(t), t } } let g; var m = (t.isIE, t.upgradeDocumentTree); var v = t.upgradeAll; var y = t.upgradeWithDefinition; var b = t.implementPrototype; const A = t.useNative; var C = ['annotation-xml', 'color-profile', 'font-face', 'font-face-src', 'font-face-uri', 'font-face-format', 'font-face-name', 'missing-glyph']; var x = {}; var w = 'http://www.w3.org/1999/xhtml'; var E = document.createElement.bind(document); var S = document.createElementNS.bind(document); g = Object.__proto__ || A ? function (t, e) { return t instanceof e } : function (t, e) { if (t instanceof e) return !0; for (let n = t; n;) { if (n === e.prototype) return !0; n = n.__proto__ } return !1 }, f(Node.prototype, 'cloneNode'), f(document, 'importNode'), document.registerElement = e, document.createElement = d, document.createElementNS = p, t.registry = x, t.instanceof = g, t.reservedTagList = C, t.getRegisteredDefinition = c, document.register = document.registerElement }), (function (t) { function e () { r(window.wrap(document)), window.CustomElements.ready = !0; const t = window.requestAnimationFrame || function (t) { setTimeout(t, 16) }; t(function () { setTimeout(function () { window.CustomElements.readyTime = Date.now(), window.HTMLImports && (window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime), document.dispatchEvent(new CustomEvent('WebComponentsReady', { bubbles: !0 })) }) }) } const n = t.useNative; const i = t.initializeModules; if (t.isIE, n) { const o = function () {}; t.watchShadow = o, t.upgrade = o, t.upgradeAll = o, t.upgradeDocumentTree = o, t.upgradeSubtree = o, t.takeRecords = o, t.instanceof = function (t, e) { return t instanceof e } } else i(); var r = t.upgradeDocumentTree; const s = t.upgradeDocument; if (window.wrap || (window.ShadowDOMPolyfill ? (window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded, window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded) : window.wrap = window.unwrap = function (t) { return t }), window.HTMLImports && (window.HTMLImports.__importsParsingHook = function (t) { t.import && s(wrap(t.import)) }), document.readyState === 'complete' || t.flags.eager)e(); else if (document.readyState !== 'interactive' || window.attachEvent || window.HTMLImports && !window.HTMLImports.ready) { const a = window.HTMLImports && !window.HTMLImports.ready ? 'HTMLImportsLoaded' : 'DOMContentLoaded'; window.addEventListener(a, e) } else e() }(window.CustomElements)))
}.call(this)), (function () {}.call(this)), (function () {
  const t = this; (function () { (function () { this.Trix = { VERSION: '1.3.0', ZERO_WIDTH_SPACE: '\ufeff', NON_BREAKING_SPACE: '\xa0', OBJECT_REPLACEMENT_CHARACTER: '\ufffc', browser: { composesExistingText: /Android.*Chrome/.test(navigator.userAgent), forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent), supportsInputEvents: (function () { let t, e, n, i; if (typeof InputEvent === 'undefined') return !1; for (i = ['data', 'getTargetRanges', 'inputType'], t = 0, e = i.length; e > t; t++) if (n = i[t], !(n in InputEvent.prototype)) return !1; return !0 }()) }, config: {} } }).call(this) }).call(t); const e = t.Trix; (function () {
    (function () { e.BasicObject = (function () { function t () {} let e, n, i; return t.proxyMethod = function (t) { let i, o, r, s, a; return r = n(t), i = r.name, s = r.toMethod, a = r.toProperty, o = r.optional, this.prototype[i] = function () { let t, n; return t = s != null ? o ? typeof this[s] === 'function' ? this[s]() : void 0 : this[s]() : a != null ? this[a] : void 0, o ? (n = t != null ? t[i] : void 0, n != null ? e.call(n, t, arguments) : void 0) : (n = t[i], e.call(n, t, arguments)) } }, n = function (t) { let e, n; if (!(n = t.match(i))) throw new Error("can't parse @proxyMethod expression: " + t); return e = { name: n[4] }, n[2] != null ? e.toMethod = n[1] : e.toProperty = n[1], n[3] != null && (e.optional = !0), e }, e = Function.prototype.apply, i = /^(.+?)(\(\))?(\?)?\.(.+?)$/, t }()) }).call(this), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.Object = (function (n) { function i () { this.id = ++o } let o; return t(i, n), o = 0, i.fromJSONString = function (t) { return this.fromJSON(JSON.parse(t)) }, i.prototype.hasSameConstructorAs = function (t) { return this.constructor === (t != null ? t.constructor : void 0) }, i.prototype.isEqualTo = function (t) { return this === t }, i.prototype.inspect = function () { let t, e, n; return t = (function () { let t, i, o; i = (t = this.contentsForInspection()) != null ? t : {}, o = []; for (e in i)n = i[e], o.push(e + '=' + n); return o }.call(this)), '#<' + this.constructor.name + ':' + this.id + (t.length ? ' ' + t.join(', ') : '') + '>' }, i.prototype.contentsForInspection = function () {}, i.prototype.toJSONString = function () { return JSON.stringify(this) }, i.prototype.toUTF16String = function () { return e.UTF16String.box(this) }, i.prototype.getCacheKey = function () { return this.id.toString() }, i }(e.BasicObject)) }.call(this)), (function () { e.extend = function (t) { let e, n; for (e in t)n = t[e], this[e] = n; return this } }.call(this)), (function () { e.extend({ defer: function (t) { return setTimeout(t, 1) } }) }.call(this)), (function () { let t, n; e.extend({ normalizeSpaces: function (t) { return t.replace(RegExp('' + e.ZERO_WIDTH_SPACE, 'g'), '').replace(RegExp('' + e.NON_BREAKING_SPACE, 'g'), ' ') }, normalizeNewlines: function (t) { return t.replace(/\r\n/g, '\n') }, breakableWhitespacePattern: RegExp('[^\\S' + e.NON_BREAKING_SPACE + ']'), squishBreakableWhitespace: function (t) { return t.replace(RegExp('' + e.breakableWhitespacePattern.source, 'g'), ' ').replace(/\ {2,}/g, ' ') }, summarizeStringChange: function (t, i) { let o, r, s, a; return t = e.UTF16String.box(t), i = e.UTF16String.box(i), i.length < t.length ? (r = n(t, i), a = r[0], o = r[1]) : (s = n(i, t), o = s[0], a = s[1]), { added: o, removed: a } } }), n = function (n, i) { let o, r, s, a, u; return n.isEqualTo(i) ? ['', ''] : (r = t(n, i), a = r.utf16String.length, s = a ? (u = r.offset, r, o = n.codepoints.slice(0, u).concat(n.codepoints.slice(u + a)), t(i, e.UTF16String.fromCodepoints(o))) : t(i, n), [r.utf16String.toString(), s.utf16String.toString()]) }, t = function (t, e) { let n, i, o; for (n = 0, i = t.length, o = e.length; i > n && t.charAt(n).isEqualTo(e.charAt(n));)n++; for (;i > n + 1 && t.charAt(i - 1).isEqualTo(e.charAt(o - 1));)i--, o--; return { utf16String: t.slice(n, i), offset: n } } }.call(this)), (function () { e.extend({ copyObject: function (t) { let e, n, i; t == null && (t = {}), n = {}; for (e in t)i = t[e], n[e] = i; return n }, objectsAreEqual: function (t, e) { let n, i; if (t == null && (t = {}), e == null && (e = {}), Object.keys(t).length !== Object.keys(e).length) return !1; for (n in t) if (i = t[n], i !== e[n]) return !1; return !0 } }) }.call(this)), (function () { const t = [].slice; e.extend({ arraysAreEqual: function (t, e) { let n, i, o, r; if (t == null && (t = []), e == null && (e = []), t.length !== e.length) return !1; for (i = n = 0, o = t.length; o > n; i = ++n) if (r = t[i], r !== e[i]) return !1; return !0 }, arrayStartsWith: function (t, n) { return t == null && (t = []), n == null && (n = []), e.arraysAreEqual(t.slice(0, n.length), n) }, spliceArray: function () { let e, n, i; return n = arguments[0], e = arguments.length >= 2 ? t.call(arguments, 1) : [], i = n.slice(0), i.splice.apply(i, e), i }, summarizeArrayChange: function (t, e) { let n, i, o, r, s, a, u, c, l, h, p; for (t == null && (t = []), e == null && (e = []), n = [], h = [], o = new Set(), r = 0, u = t.length; u > r; r++)p = t[r], o.add(p); for (i = new Set(), s = 0, c = e.length; c > s; s++)p = e[s], i.add(p), o.has(p) || n.push(p); for (a = 0, l = t.length; l > a; a++)p = t[a], i.has(p) || h.push(p); return { added: n, removed: h } } }) }.call(this)), (function () { let t, n, i, o; t = null, n = null, o = null, i = null, e.extend({ getAllAttributeNames: function () { return t != null ? t : t = e.getTextAttributeNames().concat(e.getBlockAttributeNames()) }, getBlockConfig: function (t) { return e.config.blockAttributes[t] }, getBlockAttributeNames: function () { return n != null ? n : n = Object.keys(e.config.blockAttributes) }, getTextConfig: function (t) { return e.config.textAttributes[t] }, getTextAttributeNames: function () { return o != null ? o : o = Object.keys(e.config.textAttributes) }, getListAttributeNames: function () { let t, n; return i != null ? i : i = (function () { let i, o; i = e.config.blockAttributes, o = []; for (t in i)n = i[t].listAttribute, n != null && o.push(n); return o }()) } }) }.call(this)), (function () { let t; let n; let i; let o; let r; const s = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; t = document.documentElement, n = (i = (o = (r = t.matchesSelector) != null ? r : t.webkitMatchesSelector) != null ? o : t.msMatchesSelector) != null ? i : t.mozMatchesSelector, e.extend({ handleEvent: function (n, i) { let o, r, s, a, u, c, l, h, p, d, f, g; return h = i != null ? i : {}, c = h.onElement, u = h.matchingSelector, g = h.withCallback, a = h.inPhase, l = h.preventDefault, d = h.times, r = c != null ? c : t, p = u, o = g, f = a === 'capturing', s = function (t) { let n; return d != null && --d === 0 && s.destroy(), n = e.findClosestElementFromNode(t.target, { matchingSelector: p }), n != null && (g != null && g.call(n, t, n), l) ? t.preventDefault() : void 0 }, s.destroy = function () { return r.removeEventListener(n, s, f) }, r.addEventListener(n, s, f), s }, handleEventOnce: function (t, n) { return n == null && (n = {}), n.times = 1, e.handleEvent(t, n) }, triggerEvent: function (n, i) { let o, r, s, a, u, c, l; return l = i != null ? i : {}, c = l.onElement, r = l.bubbles, s = l.cancelable, o = l.attributes, a = c != null ? c : t, r = r !== !1, s = s !== !1, u = document.createEvent('Events'), u.initEvent(n, r, s), o != null && e.extend.call(u, o), a.dispatchEvent(u) }, elementMatchesSelector: function (t, e) { return (t != null ? t.nodeType : void 0) === 1 ? n.call(t, e) : void 0 }, findClosestElementFromNode: function (t, n) { let i, o, r; for (o = n != null ? n : {}, i = o.matchingSelector, r = o.untilNode; t != null && t.nodeType !== Node.ELEMENT_NODE;)t = t.parentNode; if (t != null) { if (i == null) return t; if (t.closest && r == null) return t.closest(i); for (;t && t !== r;) { if (e.elementMatchesSelector(t, i)) return t; t = t.parentNode } } }, findInnerElement: function (t) { for (;t != null ? t.firstElementChild : void 0;)t = t.firstElementChild; return t }, innerElementIsActive: function (t) { return document.activeElement !== t && e.elementContainsNode(t, document.activeElement) }, elementContainsNode: function (t, e) { if (t && e) for (;e;) { if (e === t) return !0; e = e.parentNode } }, findNodeFromContainerAndOffset: function (t, e) { let n; if (t) return t.nodeType === Node.TEXT_NODE ? t : e === 0 ? (n = t.firstChild) != null ? n : t : t.childNodes.item(e - 1) }, findElementFromContainerAndOffset: function (t, n) { let i; return i = e.findNodeFromContainerAndOffset(t, n), e.findClosestElementFromNode(i) }, findChildIndexOfNode: function (t) { let e; if (t != null ? t.parentNode : void 0) { for (e = 0; t = t.previousSibling;)e++; return e } }, removeNode: function (t) { let e; return t != null && (e = t.parentNode) != null ? e.removeChild(t) : void 0 }, walkTree: function (t, e) { let n, i, o, r, s; return o = e != null ? e : {}, i = o.onlyNodesOfType, r = o.usingFilter, n = o.expandEntityReferences, s = (function () { switch (i) { case 'element':return NodeFilter.SHOW_ELEMENT; case 'text':return NodeFilter.SHOW_TEXT; case 'comment':return NodeFilter.SHOW_COMMENT; default:return NodeFilter.SHOW_ALL } }()), document.createTreeWalker(t, s, r != null ? r : null, n === !0) }, tagName: function (t) { let e; return t != null && (e = t.tagName) != null ? e.toLowerCase() : void 0 }, makeElement: function (t, e) { let n, i, o, r, s, a, u, c, l, h, p, d, f, g; if (e == null && (e = {}), typeof t === 'object' ? (e = t, t = e.tagName) : e = { attributes: e }, o = document.createElement(t), e.editable != null && (e.attributes == null && (e.attributes = {}), e.attributes.contenteditable = e.editable), e.attributes) { l = e.attributes; for (a in l)g = l[a], o.setAttribute(a, g) } if (e.style) { h = e.style; for (a in h)g = h[a], o.style[a] = g } if (e.data) { p = e.data; for (a in p)g = p[a], o.dataset[a] = g } if (e.className) for (d = e.className.split(' '), r = 0, u = d.length; u > r; r++)i = d[r], o.classList.add(i); if (e.textContent && (o.textContent = e.textContent), e.childNodes) for (f = [].concat(e.childNodes), s = 0, c = f.length; c > s; s++)n = f[s], o.appendChild(n); return o }, getBlockTagNames: function () { let t, n; return e.blockTagNames != null ? e.blockTagNames : e.blockTagNames = (function () { let i, o; i = e.config.blockAttributes, o = []; for (t in i)n = i[t].tagName, n && o.push(n); return o }()) }, nodeIsBlockContainer: function (t) { return e.nodeIsBlockStartComment(t != null ? t.firstChild : void 0) }, nodeProbablyIsBlockContainer: function (t) { let n, i; return n = e.tagName(t), s.call(e.getBlockTagNames(), n) >= 0 && (i = e.tagName(t.firstChild), s.call(e.getBlockTagNames(), i) < 0) }, nodeIsBlockStart: function (t, n) { let i; return i = (n != null ? n : { strict: !0 }).strict, i ? e.nodeIsBlockStartComment(t) : e.nodeIsBlockStartComment(t) || !e.nodeIsBlockStartComment(t.firstChild) && e.nodeProbablyIsBlockContainer(t) }, nodeIsBlockStartComment: function (t) { return e.nodeIsCommentNode(t) && (t != null ? t.data : void 0) === 'block' }, nodeIsCommentNode: function (t) { return (t != null ? t.nodeType : void 0) === Node.COMMENT_NODE }, nodeIsCursorTarget: function (t, n) { let i; return i = (n != null ? n : {}).name, t ? e.nodeIsTextNode(t) ? t.data === e.ZERO_WIDTH_SPACE ? i ? t.parentNode.dataset.trixCursorTarget === i : !0 : void 0 : e.nodeIsCursorTarget(t.firstChild) : void 0 }, nodeIsAttachmentElement: function (t) { return e.elementMatchesSelector(t, e.AttachmentView.attachmentSelector) }, nodeIsEmptyTextNode: function (t) { return e.nodeIsTextNode(t) && (t != null ? t.data : void 0) === '' }, nodeIsTextNode: function (t) { return (t != null ? t.nodeType : void 0) === Node.TEXT_NODE } }) }.call(this)), (function () { let t, n, i, o, r; t = e.copyObject, o = e.objectsAreEqual, e.extend({ normalizeRange: i = function (t) { let e; if (t != null) return Array.isArray(t) || (t = [t, t]), [n(t[0]), n((e = t[1]) != null ? e : t[0])] }, rangeIsCollapsed: function (t) { let e, n, o; if (t != null) return n = i(t), o = n[0], e = n[1], r(o, e) }, rangesAreEqual: function (t, e) { let n, o, s, a, u, c; if (t != null && e != null) return s = i(t), o = s[0], n = s[1], a = i(e), c = a[0], u = a[1], r(o, c) && r(n, u) } }), n = function (e) { return typeof e === 'number' ? e : t(e) }, r = function (t, e) { return typeof t === 'number' ? t === e : o(t, e) } }.call(this)), (function () { let t, n, i, o, r, s, a; e.registerElement = function (t, e) { let n, i; return e == null && (e = {}), t = t.toLowerCase(), e = a(e), i = s(e), (n = i.defaultCSS) && (delete i.defaultCSS, o(n, t)), r(t, i) }, o = function (t, e) { let n; return n = i(e), n.textContent = t.replace(/%t/g, e) }, i = function (e) { let n, i; return n = document.createElement('style'), n.setAttribute('type', 'text/css'), n.setAttribute('data-tag-name', e.toLowerCase()), (i = t()) && n.setAttribute('nonce', i), document.head.insertBefore(n, document.head.firstChild), n }, t = function () { let t; return (t = n('trix-csp-nonce') || n('csp-nonce')) ? t.getAttribute('content') : void 0 }, n = function (t) { return document.head.querySelector('meta[name=' + t + ']') }, s = function (t) { let e, n, i; n = {}; for (e in t)i = t[e], n[e] = typeof i === 'function' ? { value: i } : i; return n }, a = (function () { let t; return t = function (t) { let e, n, i, o, r; for (e = {}, r = ['initialize', 'connect', 'disconnect'], n = 0, o = r.length; o > n; n++)i = r[n], e[i] = t[i], delete t[i]; return e }, window.customElements ? function (e) { let n, i, o, r, s; return s = t(e), o = s.initialize, n = s.connect, i = s.disconnect, o && (r = n, n = function () { return this.initialized || (this.initialized = !0, o.call(this)), r != null ? r.call(this) : void 0 }), n && (e.connectedCallback = n), i && (e.disconnectedCallback = i), e } : function (e) { let n, i, o, r; return r = t(e), o = r.initialize, n = r.connect, i = r.disconnect, o && (e.createdCallback = o), n && (e.attachedCallback = n), i && (e.detachedCallback = i), e } }()), r = (function () { return window.customElements ? function (t, e) { let n; return n = function () { return typeof Reflect === 'object' ? Reflect.construct(HTMLElement, [], n) : HTMLElement.apply(this) }, Object.setPrototypeOf(n.prototype, HTMLElement.prototype), Object.setPrototypeOf(n, HTMLElement), Object.defineProperties(n.prototype, e), window.customElements.define(t, n), n } : function (t, e) { let n, i; return i = Object.create(HTMLElement.prototype, e), n = document.registerElement(t, { prototype: i }), Object.defineProperty(i, 'constructor', { value: n }), n } }()) }.call(this)), (function () { let t, n; e.extend({ getDOMSelection: function () { let t; return t = window.getSelection(), t.rangeCount > 0 ? t : void 0 }, getDOMRange: function () { let n, i; return (n = (i = e.getDOMSelection()) != null ? i.getRangeAt(0) : void 0) && !t(n) ? n : void 0 }, setDOMRange: function (t) { let n; return n = window.getSelection(), n.removeAllRanges(), n.addRange(t), e.selectionChangeObserver.update() } }), t = function (t) { return n(t.startContainer) || n(t.endContainer) }, n = function (t) { return !Object.getPrototypeOf(t) } }.call(this)), (function () { let t; t = { 'application/x-trix-feature-detection': 'test' }, e.extend({ dataTransferIsPlainText: function (t) { let e, n, i; return i = t.getData('text/plain'), n = t.getData('text/html'), i && n ? (e = (new DOMParser()).parseFromString(n, 'text/html').body, e.textContent === i ? !e.querySelector('*') : void 0) : i != null ? i.length : void 0 }, dataTransferIsWritable: function (e) { let n, i; if ((e != null ? e.setData : void 0) != null) { for (n in t) if (i = t[n], !(function () { try { return e.setData(n, i), e.getData(n) === i } catch (t) {} }())) return; return !0 } }, keyEventIsKeyboardCommand: (function () { return /Mac|^iP/.test(navigator.platform) ? function (t) { return t.metaKey } : function (t) { return t.ctrlKey } }()) }) }.call(this)), (function () { e.extend({ RTL_PATTERN: /[\u05BE\u05C0\u05C3\u05D0-\u05EA\u05F0-\u05F4\u061B\u061F\u0621-\u063A\u0640-\u064A\u066D\u0671-\u06B7\u06BA-\u06BE\u06C0-\u06CE\u06D0-\u06D5\u06E5\u06E6\u200F\u202B\u202E\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE72\uFE74\uFE76-\uFEFC]/, getDirection: (function () { let t, n, i, o; return n = e.makeElement('input', { dir: 'auto', name: 'x', dirName: 'x.dir' }), t = e.makeElement('form'), t.appendChild(n), i = (function () { try { return new FormData(t).has(n.dirName) } catch (e) {} }()), o = (function () { try { return n.matches(':dir(ltr),:dir(rtl)') } catch (t) {} }()), i ? function (e) { return n.value = e, new FormData(t).get(n.dirName) } : o ? function (t) { return n.value = t, n.matches(':dir(rtl)') ? 'rtl' : 'ltr' } : function (t) { let n; return n = t.trim().charAt(0), e.RTL_PATTERN.test(n) ? 'rtl' : 'ltr' } }()) }) }.call(this)), (function () {}.call(this)), (function () {
      let t; const n = function (t, e) { function n () { this.constructor = t } for (const o in e)i.call(e, o) && (t[o] = e[o]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var i = {}.hasOwnProperty; t = e.arraysAreEqual, e.Hash = (function (i) {
        function o (t) { t == null && (t = {}), this.values = s(t), o.__super__.constructor.apply(this, arguments) } let r, s, a, u, c; return n(o, i), o.fromCommonAttributesOfObjects = function (t) { let e, n, i, o, s, a; if (t == null && (t = []), !t.length) return new this(); for (e = r(t[0]), i = e.getKeys(), a = t.slice(1), n = 0, o = a.length; o > n; n++)s = a[n], i = e.getKeysCommonToHash(r(s)), e = e.slice(i); return e }, o.box = function (t) { return r(t) }, o.prototype.add = function (t, e) { return this.merge(u(t, e)) }, o.prototype.remove = function (t) { return new e.Hash(s(this.values, t)) }, o.prototype.get = function (t) { return this.values[t] }, o.prototype.has = function (t) { return t in this.values }, o.prototype.merge = function (t) { return new e.Hash(a(this.values, c(t))) }, o.prototype.slice = function (t) { let n, i, o, r; for (r = {}, n = 0, o = t.length; o > n; n++)i = t[n], this.has(i) && (r[i] = this.values[i]); return new e.Hash(r) }, o.prototype.getKeys = function () { return Object.keys(this.values) }, o.prototype.getKeysCommonToHash = function (t) { let e, n, i, o, s; for (t = r(t), o = this.getKeys(), s = [], e = 0, i = o.length; i > e; e++)n = o[e], this.values[n] === t.values[n] && s.push(n); return s }, o.prototype.isEqualTo = function (e) { return t(this.toArray(), r(e).toArray()) }, o.prototype.isEmpty = function () { return this.getKeys().length === 0 }, o.prototype.toArray = function () { let t, e, n; return (this.array != null ? this.array : this.array = (function () { let i; e = [], i = this.values; for (t in i)n = i[t], e.push(t, n); return e }.call(this))).slice(0) }, o.prototype.toObject = function () { return s(this.values) }, o.prototype.toJSON = function () { return this.toObject() }, o.prototype.contentsForInspection = function () { return { values: JSON.stringify(this.values) } }, u = function (t, e) { let n; return n = {}, n[t] = e, n }, a = function (t, e) { let n, i, o; i = s(t); for (n in e)o = e[n], i[n] = o; return i }, s = function (t, e) { let n, i, o, r, s; for (r = {}, s = Object.keys(t).sort(), n = 0, o = s.length; o > n; n++)i = s[n], i !== e && (r[i] = t[i]); return r }, r = function (t) { return t instanceof e.Hash ? t : new e.Hash(t) }, c = function (t) {
          return t instanceof e.Hash ? t.values : t
        }, o
      }(e.Object))
    }.call(this)), (function () { e.ObjectGroup = (function () { function t (t, e) { let n, i; this.objects = t != null ? t : [], i = e.depth, n = e.asTree, n && (this.depth = i, this.objects = this.constructor.groupObjects(this.objects, { asTree: n, depth: this.depth + 1 })) } return t.groupObjects = function (t, e) { let n, i, o, r, s, a, u, c, l; for (t == null && (t = []), l = e != null ? e : {}, o = l.depth, n = l.asTree, n && o == null && (o = 0), c = [], s = 0, a = t.length; a > s; s++) { if (u = t[s], r) { if ((typeof u.canBeGrouped === 'function' ? u.canBeGrouped(o) : void 0) && (typeof (i = r[r.length - 1]).canBeGroupedWith === 'function' ? i.canBeGroupedWith(u, o) : void 0)) { r.push(u); continue }c.push(new this(r, { depth: o, asTree: n })), r = null }(typeof u.canBeGrouped === 'function' ? u.canBeGrouped(o) : void 0) ? r = [u] : c.push(u) } return r && c.push(new this(r, { depth: o, asTree: n })), c }, t.prototype.getObjects = function () { return this.objects }, t.prototype.getDepth = function () { return this.depth }, t.prototype.getCacheKey = function () { let t, e, n, i, o; for (e = ['objectGroup'], o = this.getObjects(), t = 0, n = o.length; n > t; t++)i = o[t], e.push(i.getCacheKey()); return e.join('/') }, t }()) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.ObjectMap = (function (e) { function n (t) { let e, n, i, o, r; for (t == null && (t = []), this.objects = {}, i = 0, o = t.length; o > i; i++)r = t[i], n = JSON.stringify(r), (e = this.objects)[n] == null && (e[n] = r) } return t(n, e), n.prototype.find = function (t) { let e; return e = JSON.stringify(t), this.objects[e] }, n }(e.BasicObject)) }.call(this)), (function () { e.ElementStore = (function () { function t (t) { this.reset(t) } let e; return t.prototype.add = function (t) { let n; return n = e(t), this.elements[n] = t }, t.prototype.remove = function (t) { let n, i; return n = e(t), (i = this.elements[n]) ? (delete this.elements[n], i) : void 0 }, t.prototype.reset = function (t) { let e, n, i; for (t == null && (t = []), this.elements = {}, n = 0, i = t.length; i > n; n++)e = t[n], this.add(e); return t }, e = function (t) { return t.dataset.trixStoreKey }, t }()) }.call(this)), (function () {}.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.Operation = (function (e) { function n () { return n.__super__.constructor.apply(this, arguments) } return t(n, e), n.prototype.isPerforming = function () { return this.performing === !0 }, n.prototype.hasPerformed = function () { return this.performed === !0 }, n.prototype.hasSucceeded = function () { return this.performed && this.succeeded }, n.prototype.hasFailed = function () { return this.performed && !this.succeeded }, n.prototype.getPromise = function () { return this.promise != null ? this.promise : this.promise = new Promise(function (t) { return function (e, n) { return t.performing = !0, t.perform(function (i, o) { return t.succeeded = i, t.performing = !1, t.performed = !0, t.succeeded ? e(o) : n(o) }) } }(this)) }, n.prototype.perform = function (t) { return t(!1) }, n.prototype.release = function () { let t; return (t = this.promise) != null && typeof t.cancel === 'function' && t.cancel(), this.promise = null, this.performing = null, this.performed = null, this.succeeded = null }, n.proxyMethod('getPromise().then'), n.proxyMethod('getPromise().catch'), n }(e.BasicObject)) }.call(this)), (function () { let t; let n; let i; let o; let r; const s = function (t, e) { function n () { this.constructor = t } for (const i in e)a.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var a = {}.hasOwnProperty; e.UTF16String = (function (t) { function e (t, e) { this.ucs2String = t, this.codepoints = e, this.length = this.codepoints.length, this.ucs2Length = this.ucs2String.length } return s(e, t), e.box = function (t) { return t == null && (t = ''), t instanceof this ? t : this.fromUCS2String(t != null ? t.toString() : void 0) }, e.fromUCS2String = function (t) { return new this(t, o(t)) }, e.fromCodepoints = function (t) { return new this(r(t), t) }, e.prototype.offsetToUCS2Offset = function (t) { return r(this.codepoints.slice(0, Math.max(0, t))).length }, e.prototype.offsetFromUCS2Offset = function (t) { return o(this.ucs2String.slice(0, Math.max(0, t))).length }, e.prototype.slice = function () { let t; return this.constructor.fromCodepoints((t = this.codepoints).slice.apply(t, arguments)) }, e.prototype.charAt = function (t) { return this.slice(t, t + 1) }, e.prototype.isEqualTo = function (t) { return this.constructor.box(t).ucs2String === this.ucs2String }, e.prototype.toJSON = function () { return this.ucs2String }, e.prototype.getCacheKey = function () { return this.ucs2String }, e.prototype.toString = function () { return this.ucs2String }, e }(e.BasicObject)), t = (typeof Array.from === 'function' ? Array.from('\ud83d\udc7c').length : void 0) === 1, n = (typeof ' '.codePointAt === 'function' ? ' '.codePointAt(0) : void 0) != null, i = (typeof String.fromCodePoint === 'function' ? String.fromCodePoint(32, 128124) : void 0) === ' \ud83d\udc7c', o = t && n ? function (t) { return Array.from(t).map(function (t) { return t.codePointAt(0) }) } : function (t) { let e, n, i, o, r; for (o = [], e = 0, i = t.length; i > e;)r = t.charCodeAt(e++), r >= 55296 && r <= 56319 && i > e && (n = t.charCodeAt(e++), (64512 & n) === 56320 ? r = ((1023 & r) << 10) + (1023 & n) + 65536 : e--), o.push(r); return o }, r = i ? function (t) { return String.fromCodePoint.apply(String, t) } : function (t) { let e, n, i; return e = (function () { let e, o, r; for (r = [], e = 0, o = t.length; o > e; e++)i = t[e], n = '', i > 65535 && (i -= 65536, n += String.fromCharCode(i >>> 10 & 1023 | 55296), i = 56320 | 1023 & i), r.push(n + String.fromCharCode(i)); return r }()), e.join('') } }.call(this)), (function () {}.call(this)), (function () {}.call(this)), (function () { e.config.lang = { attachFiles: 'Attach Files', bold: 'Bold', bullets: 'Bullets', byte: 'Byte', bytes: 'Bytes', captionPlaceholder: 'Add a caption\u2026', code: 'Code', heading1: 'Heading 1', heading2: 'Heading 2', heading3: 'Heading 3', heading4: 'Heading 4', heading5: 'Heading 5', heading6: 'Heading 6', indent: 'Increase Level', italic: 'Italic', link: 'Link', numbers: 'Numbers', outdent: 'Decrease Level', quote: 'Quote', redo: 'Redo', remove: 'Remove', strike: 'Strikethrough', undo: 'Undo', unlink: 'Unlink', url: 'URL', urlPlaceholder: 'Enter a URL\u2026', GB: 'GB', KB: 'KB', MB: 'MB', PB: 'PB', TB: 'TB' } }.call(this)), (function () { e.config.css = { attachment: 'attachment', attachmentCaption: 'attachment__caption', attachmentCaptionEditor: 'attachment__caption-editor', attachmentMetadata: 'attachment__metadata', attachmentMetadataContainer: 'attachment__metadata-container', attachmentName: 'attachment__name', attachmentProgress: 'attachment__progress', attachmentSize: 'attachment__size', attachmentToolbar: 'attachment__toolbar', attachmentGallery: 'attachment-gallery' } }.call(this)), (function () { let t; e.config.blockAttributes = t = { default: { tagName: 'div', parse: !1 }, quote: { tagName: 'blockquote', nestable: !0 }, heading1: { tagName: 'h1', terminal: !0, breakOnReturn: !0, group: !1 }, heading1: { tagName: 'h1', terminal: !0, breakOnReturn: !0, group: !1 }, heading2: { tagName: 'h2', terminal: !0, breakOnReturn: !0, group: !1 }, heading3: { tagName: 'h3', terminal: !0, breakOnReturn: !0, group: !1 }, heading4: { tagName: 'h4', terminal: !0, breakOnReturn: !0, group: !1 }, heading5: { tagName: 'h5', terminal: !0, breakOnReturn: !0, group: !1 }, heading6: { tagName: 'h6', terminal: !0, breakOnReturn: !0, group: !1 }, code: { tagName: 'pre', terminal: !0, text: { plaintext: !0 } }, bulletList: { tagName: 'ul', parse: !1 }, bullet: { tagName: 'li', listAttribute: 'bulletList', group: !1, nestable: !0, test: function (n) { return e.tagName(n.parentNode) === t[this.listAttribute].tagName } }, numberList: { tagName: 'ol', parse: !1 }, number: { tagName: 'li', listAttribute: 'numberList', group: !1, nestable: !0, test: function (n) { return e.tagName(n.parentNode) === t[this.listAttribute].tagName } }, attachmentGallery: { tagName: 'div', exclusive: !0, terminal: !0, parse: !1, group: !1 } } }.call(this)), (function () { let t, n; t = e.config.lang, n = [t.bytes, t.KB, t.MB, t.GB, t.TB, t.PB], e.config.fileSize = { prefix: 'IEC', precision: 2, formatter: function (e) { let i, o, r, s, a; switch (e) { case 0:return '0 ' + t.bytes; case 1:return '1 ' + t.byte; default:return i = (function () { switch (this.prefix) { case 'SI':return 1e3; case 'IEC':return 1024 } }.call(this)), o = Math.floor(Math.log(e) / Math.log(i)), r = e / Math.pow(i, o), s = r.toFixed(this.precision), a = s.replace(/0*$/, '').replace(/\.$/, ''), a + ' ' + n[o] } } } }.call(this)), (function () { e.config.textAttributes = { bold: { tagName: 'strong', inheritable: !0, parser: function (t) { let e; return e = window.getComputedStyle(t), e.fontWeight === 'bold' || e.fontWeight >= 600 } }, italic: { tagName: 'em', inheritable: !0, parser: function (t) { let e; return e = window.getComputedStyle(t), e.fontStyle === 'italic' } }, href: { groupTagName: 'a', parser: function (t) { let n, i, o; return n = e.AttachmentView.attachmentSelector, o = 'a:not(' + n + ')', (i = e.findClosestElementFromNode(t, { matchingSelector: o })) ? i.getAttribute('href') : void 0 } }, strike: { tagName: 'del', inheritable: !0 }, frozen: { style: { backgroundColor: 'highlight' } } } }.call(this)), (function () { let t, n, i, o, r; r = '[data-trix-serialize=false]', o = ['contenteditable', 'data-trix-id', 'data-trix-store-key', 'data-trix-mutable', 'data-trix-placeholder', 'tabindex'], n = 'data-trix-serialized-attributes', i = '[' + n + ']', t = new RegExp('<!--block-->', 'g'), e.extend({ serializers: { 'application/json': function (t) { let n; if (t instanceof e.Document)n = t; else { if (!(t instanceof HTMLElement)) throw new Error('unserializable object'); n = e.Document.fromHTML(t.innerHTML) } return n.toSerializableDocument().toJSONString() }, 'text/html': function (s) { let a, u, c, l, h, p, d, f, g, m, v, y, b, A, C, x, w; if (s instanceof e.Document)l = e.DocumentView.render(s); else { if (!(s instanceof HTMLElement)) throw new Error('unserializable object'); l = s.cloneNode(!0) } for (A = l.querySelectorAll(r), h = 0, g = A.length; g > h; h++)c = A[h], e.removeNode(c); for (p = 0, m = o.length; m > p; p++) for (a = o[p], C = l.querySelectorAll('[' + a + ']'), d = 0, v = C.length; v > d; d++)c = C[d], c.removeAttribute(a); for (x = l.querySelectorAll(i), f = 0, y = x.length; y > f; f++) { c = x[f]; try { u = JSON.parse(c.getAttribute(n)), c.removeAttribute(n); for (b in u)w = u[b], c.setAttribute(b, w) } catch (E) {} } return l.innerHTML.replace(t, '') } }, deserializers: { 'application/json': function (t) { return e.Document.fromJSONString(t) }, 'text/html': function (t) { return e.Document.fromHTML(t) } }, serializeToContentType: function (t, n) { let i; if (i = e.serializers[n]) return i(t); throw new Error('unknown content type: ' + n) }, deserializeFromContentType: function (t, n) { let i; if (i = e.deserializers[n]) return i(t); throw new Error('unknown content type: ' + n) } }) }.call(this)), (function () { let t; t = e.config.lang, e.config.toolbar = { getDefaultHTML: function () { return '<div class="trix-button-row">\n  <span class="trix-button-group trix-button-group--text-tools" data-trix-button-group="text-tools">\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-bold" data-trix-attribute="bold" data-trix-key="b" title="' + t.bold + '" tabindex="-1">' + t.bold + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-italic" data-trix-attribute="italic" data-trix-key="i" title="' + t.italic + '" tabindex="-1">' + t.italic + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-strike" data-trix-attribute="strike" title="' + t.strike + '" tabindex="-1">' + t.strike + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-link" data-trix-attribute="href" data-trix-action="link" data-trix-key="k" title="' + t.link + '" tabindex="-1">' + t.link + '</button>\n  </span>\n\n  <span class="trix-button-group trix-button-group--headings" data-trix-button-group="headings">\n    <button type="button" class="trix-button trix-button--heading" data-trix-attribute="heading1" title="Heading 1" tabindex="-1">H1</button>\n    <button type="button" class="trix-button trix-button--heading" data-trix-attribute="heading2" title="Heading 2" tabindex="-1">H2</button>\n    <button type="button" class="trix-button trix-button--heading" data-trix-attribute="heading3" title="Heading 3" tabindex="-1">H3</button>\n    <button type="button" class="trix-button trix-button--heading" data-trix-attribute="heading4" title="Heading 4" tabindex="-1">H4</button>\n    <button type="button" class="trix-button trix-button--heading" data-trix-attribute="heading5" title="Heading 5" tabindex="-1">H5</button>\n    <button type="button" class="trix-button trix-button--heading" data-trix-attribute="heading6" title="Heading 6" tabindex="-1">H6</button>\n  </span>\n\n  <span class="trix-button-group trix-button-group--block-tools" data-trix-button-group="block-tools">\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-quote" data-trix-attribute="quote" title="' + t.quote + '" tabindex="-1">' + t.quote + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-code" data-trix-attribute="code" title="' + t.code + '" tabindex="-1">' + t.code + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-bullet-list" data-trix-attribute="bullet" title="' + t.bullets + '" tabindex="-1">' + t.bullets + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-number-list" data-trix-attribute="number" title="' + t.numbers + '" tabindex="-1">' + t.numbers + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-decrease-nesting-level" data-trix-action="decreaseNestingLevel" title="' + t.outdent + '" tabindex="-1">' + t.outdent + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-increase-nesting-level" data-trix-action="increaseNestingLevel" title="' + t.indent + '" tabindex="-1">' + t.indent + '</button>\n  </span>\n\n  <span class="trix-button-group trix-button-group--file-tools" data-trix-button-group="file-tools">\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-attach" data-trix-action="attachFiles" title="' + t.attachFiles + '" tabindex="-1">' + t.attachFiles + '</button>\n  </span>\n\n  <span class="trix-button-group-spacer"></span>\n\n  <span class="trix-button-group trix-button-group--history-tools" data-trix-button-group="history-tools">\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-undo" data-trix-action="undo" data-trix-key="z" title="' + t.undo + '" tabindex="-1">' + t.undo + '</button>\n    <button type="button" class="trix-button trix-button--icon trix-button--icon-redo" data-trix-action="redo" data-trix-key="shift+z" title="' + t.redo + '" tabindex="-1">' + t.redo + '</button>\n  </span>\n</div>\n\n<div class="trix-dialogs" data-trix-dialogs>\n  <div class="trix-dialog trix-dialog--link" data-trix-dialog="href" data-trix-dialog-attribute="href">\n    <div class="trix-dialog__link-fields">\n      <input type="url" name="href" class="trix-input trix-input--dialog" placeholder="' + t.urlPlaceholder + '" aria-label="' + t.url + '" required data-trix-input>\n      <div class="trix-button-group">\n        <input type="button" class="trix-button trix-button--dialog" value="' + t.link + '" data-trix-method="setAttribute">\n        <input type="button" class="trix-button trix-button--dialog" value="' + t.unlink + '" data-trix-method="removeAttribute">\n      </div>\n    </div>\n  </div>\n</div>' } } }.call(this)), (function () { e.config.undoInterval = 5e3 }.call(this)), (function () { e.config.attachments = { preview: { presentation: 'gallery', caption: { name: !0, size: !0 } }, file: { caption: { size: !0 } } } }.call(this)), (function () { e.config.keyNames = { 8: 'backspace', 9: 'tab', 13: 'return', 27: 'escape', 37: 'left', 39: 'right', 46: 'delete', 68: 'd', 72: 'h', 79: 'o' } }.call(this)), (function () { e.config.input = { level2Enabled: !0, getLevel: function () { return this.level2Enabled && e.browser.supportsInputEvents ? 2 : 0 }, pickFiles: function (t) { let n; return n = e.makeElement('input', { type: 'file', multiple: !0, hidden: !0, id: this.fileInputId }), n.addEventListener('change', function () { return t(n.files), e.removeNode(n) }), e.removeNode(document.getElementById(this.fileInputId)), document.body.appendChild(n), n.click() }, fileInputId: 'trix-file-input-' + Date.now().toString(16) } }.call(this)), (function () {}.call(this)), (function () { e.registerElement('trix-toolbar', { defaultCSS: '%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}', initialize: function () { return this.innerHTML === '' ? this.innerHTML = e.config.toolbar.getDefaultHTML() : void 0 } }) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; const i = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; e.ObjectView = (function (n) { function o (t, e) { this.object = t, this.options = e != null ? e : {}, this.childViews = [], this.rootView = this } return t(o, n), o.prototype.getNodes = function () { let t, e, n, i, o; for (this.nodes == null && (this.nodes = this.createNodes()), i = this.nodes, o = [], t = 0, e = i.length; e > t; t++)n = i[t], o.push(n.cloneNode(!0)); return o }, o.prototype.invalidate = function () { let t; return this.nodes = null, this.childViews = [], (t = this.parentView) != null ? t.invalidate() : void 0 }, o.prototype.invalidateViewForObject = function (t) { let e; return (e = this.findViewForObject(t)) != null ? e.invalidate() : void 0 }, o.prototype.findOrCreateCachedChildView = function (t, e) { let n; return (n = this.getCachedViewForObject(e)) ? this.recordChildView(n) : (n = this.createChildView.apply(this, arguments), this.cacheViewForObject(n, e)), n }, o.prototype.createChildView = function (t, n, i) { let o; return i == null && (i = {}), n instanceof e.ObjectGroup && (i.viewClass = t, t = e.ObjectGroupView), o = new t(n, i), this.recordChildView(o) }, o.prototype.recordChildView = function (t) { return t.parentView = this, t.rootView = this.rootView, this.childViews.push(t), t }, o.prototype.getAllChildViews = function () { let t, e, n, i, o; for (o = [], i = this.childViews, e = 0, n = i.length; n > e; e++)t = i[e], o.push(t), o = o.concat(t.getAllChildViews()); return o }, o.prototype.findElement = function () { return this.findElementForObject(this.object) }, o.prototype.findElementForObject = function (t) { let e; return (e = t != null ? t.id : void 0) ? this.rootView.element.querySelector("[data-trix-id='" + e + "']") : void 0 }, o.prototype.findViewForObject = function (t) { let e, n, i, o; for (i = this.getAllChildViews(), e = 0, n = i.length; n > e; e++) if (o = i[e], o.object === t) return o }, o.prototype.getViewCache = function () { return this.rootView !== this ? this.rootView.getViewCache() : this.isViewCachingEnabled() ? this.viewCache != null ? this.viewCache : this.viewCache = {} : void 0 }, o.prototype.isViewCachingEnabled = function () { return this.shouldCacheViews !== !1 }, o.prototype.enableViewCaching = function () { return this.shouldCacheViews = !0 }, o.prototype.disableViewCaching = function () { return this.shouldCacheViews = !1 }, o.prototype.getCachedViewForObject = function (t) { let e; return (e = this.getViewCache()) != null ? e[t.getCacheKey()] : void 0 }, o.prototype.cacheViewForObject = function (t, e) { let n; return (n = this.getViewCache()) != null ? n[e.getCacheKey()] = t : void 0 }, o.prototype.garbageCollectCachedViews = function () { let t, e, n, o, r, s; if (t = this.getViewCache()) { s = this.getAllChildViews().concat(this), n = (function () { let t, e, n; for (n = [], t = 0, e = s.length; e > t; t++)r = s[t], n.push(r.object.getCacheKey()); return n }()), o = []; for (e in t)i.call(n, e) < 0 && o.push(delete t[e]); return o } }, o }(e.BasicObject)) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.ObjectGroupView = (function (e) { function n () { n.__super__.constructor.apply(this, arguments), this.objectGroup = this.object, this.viewClass = this.options.viewClass, delete this.options.viewClass } return t(n, e), n.prototype.getChildViews = function () { let t, e, n, i; if (!this.childViews.length) for (i = this.objectGroup.getObjects(), t = 0, e = i.length; e > t; t++)n = i[t], this.findOrCreateCachedChildView(this.viewClass, n, this.options); return this.childViews }, n.prototype.createNodes = function () { let t, e, n, i, o, r, s, a, u; for (t = this.createContainerElement(), s = this.getChildViews(), e = 0, i = s.length; i > e; e++) for (u = s[e], a = u.getNodes(), n = 0, o = a.length; o > n; n++)r = a[n], t.appendChild(r); return [t] }, n.prototype.createContainerElement = function (t) { return t == null && (t = this.objectGroup.getDepth()), this.getChildViews()[0].createContainerElement(t) }, n }(e.ObjectView)) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.Controller = (function (e) { function n () { return n.__super__.constructor.apply(this, arguments) } return t(n, e), n }(e.BasicObject)) }.call(this)), (function () { let t; let n; let i; let o; let r; let s; const a = function (t, e) { return function () { return t.apply(e, arguments) } }; const u = function (t, e) { function n () { this.constructor = t } for (const i in e)c.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var c = {}.hasOwnProperty; const l = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; t = e.findClosestElementFromNode, i = e.nodeIsEmptyTextNode, n = e.nodeIsBlockStartComment, o = e.normalizeSpaces, r = e.summarizeStringChange, s = e.tagName, e.MutationObserver = (function (e) { function c (t) { this.element = t, this.didMutate = a(this.didMutate, this), this.observer = new window.MutationObserver(this.didMutate), this.start() } let h, p, d, f; return u(c, e), p = 'data-trix-mutable', d = '[' + p + ']', f = { attributes: !0, childList: !0, characterData: !0, characterDataOldValue: !0, subtree: !0 }, c.prototype.start = function () { return this.reset(), this.observer.observe(this.element, f) }, c.prototype.stop = function () { return this.observer.disconnect() }, c.prototype.didMutate = function (t) { let e, n; return (e = this.mutations).push.apply(e, this.findSignificantMutations(t)), this.mutations.length ? ((n = this.delegate) != null && typeof n.elementDidMutate === 'function' && n.elementDidMutate(this.getMutationSummary()), this.reset()) : void 0 }, c.prototype.reset = function () { return this.mutations = [] }, c.prototype.findSignificantMutations = function (t) { let e, n, i, o; for (o = [], e = 0, n = t.length; n > e; e++)i = t[e], this.mutationIsSignificant(i) && o.push(i); return o }, c.prototype.mutationIsSignificant = function (t) { let e, n, i, o; if (this.nodeIsMutable(t.target)) return !1; for (o = this.nodesModifiedByMutation(t), e = 0, n = o.length; n > e; e++) if (i = o[e], this.nodeIsSignificant(i)) return !0; return !1 }, c.prototype.nodeIsSignificant = function (t) { return t !== this.element && !this.nodeIsMutable(t) && !i(t) }, c.prototype.nodeIsMutable = function (e) { return t(e, { matchingSelector: d }) }, c.prototype.nodesModifiedByMutation = function (t) { let e; switch (e = [], t.type) { case 'attributes':t.attributeName !== p && e.push(t.target); break; case 'characterData':e.push(t.target.parentNode), e.push(t.target); break; case 'childList':e.push.apply(e, t.addedNodes), e.push.apply(e, t.removedNodes) } return e }, c.prototype.getMutationSummary = function () { return this.getTextMutationSummary() }, c.prototype.getTextMutationSummary = function () { let t, e, n, i, o, r, s, a, u, c, h; for (a = this.getTextChangesFromCharacterData(), n = a.additions, o = a.deletions, h = this.getTextChangesFromChildList(), u = h.additions, r = 0, s = u.length; s > r; r++)e = u[r], l.call(n, e) < 0 && n.push(e); return o.push.apply(o, h.deletions), c = {}, (t = n.join('')) && (c.textAdded = t), (i = o.join('')) && (c.textDeleted = i), c }, c.prototype.getMutationsByType = function (t) { let e, n, i, o, r; for (o = this.mutations, r = [], e = 0, n = o.length; n > e; e++)i = o[e], i.type === t && r.push(i); return r }, c.prototype.getTextChangesFromChildList = function () { let t, e, i, r, s, a, u, c, l, p, d; for (t = [], u = [], a = this.getMutationsByType('childList'), e = 0, r = a.length; r > e; e++)s = a[e], t.push.apply(t, s.addedNodes), u.push.apply(u, s.removedNodes); return c = t.length === 0 && u.length === 1 && n(u[0]), c ? (p = [], d = ['\n']) : (p = h(t), d = h(u)), { additions: (function () { let t, e, n; for (n = [], i = t = 0, e = p.length; e > t; i = ++t)l = p[i], l !== d[i] && n.push(o(l)); return n }()), deletions: (function () { let t, e, n; for (n = [], i = t = 0, e = d.length; e > t; i = ++t)l = d[i], l !== p[i] && n.push(o(l)); return n }()) } }, c.prototype.getTextChangesFromCharacterData = function () { let t, e, n, i, s, a, u, c; return e = this.getMutationsByType('characterData'), e.length && (c = e[0], n = e[e.length - 1], s = o(c.oldValue), i = o(n.target.data), a = r(s, i), t = a.added, u = a.removed), { additions: t ? [t] : [], deletions: u ? [u] : [] } }, h = function (t) { let e, n, i, o; for (t == null && (t = []), o = [], e = 0, n = t.length; n > e; e++) switch (i = t[e], i.nodeType) { case Node.TEXT_NODE:o.push(i.data); break; case Node.ELEMENT_NODE:s(i) === 'br' ? o.push('\n') : o.push.apply(o, h(i.childNodes)) } return o }, c }(e.BasicObject)) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.FileVerificationOperation = (function (e) { function n (t) { this.file = t } return t(n, e), n.prototype.perform = function (t) { let e; return e = new FileReader(), e.onerror = function () { return t(!1) }, e.onload = (function (n) { return function () { e.onerror = null; try { e.abort() } catch (i) {} return t(!0, n.file) } }(this)), e.readAsArrayBuffer(this.file) }, n }(e.Operation)) }.call(this)), (function () { let t; let n; const i = function (t, e) { function n () { this.constructor = t } for (const i in e)o.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var o = {}.hasOwnProperty; t = e.handleEvent, n = e.innerElementIsActive, e.InputController = (function (o) { function r (n) { let i; this.element = n, this.mutationObserver = new e.MutationObserver(this.element), this.mutationObserver.delegate = this; for (i in this.events)t(i, { onElement: this.element, withCallback: this.handlerFor(i) }) } return i(r, o), r.prototype.events = {}, r.prototype.elementDidMutate = function () {}, r.prototype.editorWillSyncDocumentView = function () { return this.mutationObserver.stop() }, r.prototype.editorDidSyncDocumentView = function () { return this.mutationObserver.start() }, r.prototype.requestRender = function () { let t; return (t = this.delegate) != null && typeof t.inputControllerDidRequestRender === 'function' ? t.inputControllerDidRequestRender() : void 0 }, r.prototype.requestReparse = function () { let t; return (t = this.delegate) != null && typeof t.inputControllerDidRequestReparse === 'function' && t.inputControllerDidRequestReparse(), this.requestRender() }, r.prototype.attachFiles = function (t) { let n, i; return i = (function () { let i, o, r; for (r = [], i = 0, o = t.length; o > i; i++)n = t[i], r.push(new e.FileVerificationOperation(n)); return r }()), Promise.all(i).then(function (t) { return function (e) { return t.handleInput(function () { let t, n; return (t = this.delegate) != null && t.inputControllerWillAttachFiles(), (n = this.responder) != null && n.insertFiles(e), this.requestRender() }) } }(this)) }, r.prototype.handlerFor = function (t) { return (function (e) { return function (i) { return i.defaultPrevented ? void 0 : e.handleInput(function () { return n(this.element) ? void 0 : (this.eventName = t, this.events[t].call(this, i)) }) } }(this)) }, r.prototype.handleInput = function (t) { let e, n; try { return (e = this.delegate) != null && e.inputControllerWillHandleInput(), t.call(this) } finally { (n = this.delegate) != null && n.inputControllerDidHandleInput() } }, r.prototype.createLinkHTML = function (t, e) { let n; return n = document.createElement('a'), n.href = t, n.textContent = e != null ? e : t, n.outerHTML }, r }(e.BasicObject)) }.call(this)), (function () {
      let t; let n; let i; let o; let r; let s; let a; let u; let c; let l; let h; let p; let d; const f = function (t, e) { function n () { this.constructor = t } for (const i in e)g.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var g = {}.hasOwnProperty; const m = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; c = e.makeElement, l = e.objectsAreEqual, d = e.tagName, n = e.browser, a = e.keyEventIsKeyboardCommand, o = e.dataTransferIsWritable, i = e.dataTransferIsPlainText, u = e.config.keyNames, e.Level0InputController = (function (n) {
        function s () { s.__super__.constructor.apply(this, arguments), this.resetInputSummary() } let d; return f(s, n), d = 0, s.prototype.setInputSummary = function (t) { let e, n; t == null && (t = {}), this.inputSummary.eventName = this.eventName; for (e in t)n = t[e], this.inputSummary[e] = n; return this.inputSummary }, s.prototype.resetInputSummary = function () { return this.inputSummary = {} }, s.prototype.reset = function () { return this.resetInputSummary(), e.selectionChangeObserver.reset() }, s.prototype.elementDidMutate = function (t) { let e; return this.isComposing() ? (e = this.delegate) != null && typeof e.inputControllerDidAllowUnhandledInput === 'function' ? e.inputControllerDidAllowUnhandledInput() : void 0 : this.handleInput(function () { return this.mutationIsSignificant(t) && (this.mutationIsExpected(t) ? this.requestRender() : this.requestReparse()), this.reset() }) }, s.prototype.mutationIsExpected = function (t) { let e, n, i, o, r, s, a, u, c, l; return a = t.textAdded, u = t.textDeleted, this.inputSummary.preferDocument ? !0 : (e = a != null ? a === this.inputSummary.textAdded : !this.inputSummary.textAdded, n = u != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete, c = (a === '\n' || a === ' \n') && !e, l = u === '\n' && !n, s = c && !l || l && !c, s && (o = this.getSelectedRange()) && (i = c ? a.replace(/\n$/, '').length || -1 : (a != null ? a.length : void 0) || 1, (r = this.responder) != null ? r.positionIsBlockBreak(o[1] + i) : void 0) ? !0 : e && n) }, s.prototype.mutationIsSignificant = function (t) { let e, n, i; return i = Object.keys(t).length > 0, e = ((n = this.compositionInput) != null ? n.getEndData() : void 0) === '', i || !e }, s.prototype.events = {
          keydown: function (t) { let n, i, o, r, s, c, l, h, p; if (this.isComposing() || this.resetInputSummary(), this.inputSummary.didInput = !0, r = u[t.keyCode]) { for (i = this.keys, h = ['ctrl', 'alt', 'shift', 'meta'], o = 0, c = h.length; c > o; o++)l = h[o], t[l + 'Key'] && (l === 'ctrl' && (l = 'control'), i = i != null ? i[l] : void 0); (i != null ? i[r] : void 0) != null && (this.setInputSummary({ keyName: r }), e.selectionChangeObserver.reset(), i[r].call(this, t)) } return a(t) && (n = String.fromCharCode(t.keyCode).toLowerCase()) && (s = (function () { let e, n, i, o; for (i = ['alt', 'shift'], o = [], e = 0, n = i.length; n > e; e++)l = i[e], t[l + 'Key'] && o.push(l); return o }()), s.push(n), (p = this.delegate) != null ? p.inputControllerDidReceiveKeyboardCommand(s) : void 0) ? t.preventDefault() : void 0 },
          keypress: function (t) { let e, n, i; if (this.inputSummary.eventName == null && !t.metaKey && (!t.ctrlKey || t.altKey)) return (i = p(t)) ? ((e = this.delegate) != null && e.inputControllerWillPerformTyping(), (n = this.responder) != null && n.insertString(i), this.setInputSummary({ textAdded: i, didDelete: this.selectionIsExpanded() })) : void 0 },
          textInput: function (t) { let e, n, i, o; return e = t.data, o = this.inputSummary.textAdded, o && o !== e && o.toUpperCase() === e ? (n = this.getSelectedRange(), this.setSelectedRange([n[0], n[1] + o.length]), (i = this.responder) != null && i.insertString(e), this.setInputSummary({ textAdded: e }), this.setSelectedRange(n)) : void 0 },
          dragenter: function (t) { return t.preventDefault() },
          dragstart: function (t) { let e, n; return n = t.target, this.serializeSelectionToDataTransfer(t.dataTransfer), this.draggedRange = this.getSelectedRange(), (e = this.delegate) != null && typeof e.inputControllerDidStartDrag === 'function' ? e.inputControllerDidStartDrag() : void 0 },
          dragover: function (t) { let e, n; return !this.draggedRange && !this.canAcceptDataTransfer(t.dataTransfer) || (t.preventDefault(), e = { x: t.clientX, y: t.clientY }, l(e, this.draggingPoint)) ? void 0 : (this.draggingPoint = e, (n = this.delegate) != null && typeof n.inputControllerDidReceiveDragOverPoint === 'function' ? n.inputControllerDidReceiveDragOverPoint(this.draggingPoint) : void 0) },
          dragend: function () { let t; return (t = this.delegate) != null && typeof t.inputControllerDidCancelDrag === 'function' && t.inputControllerDidCancelDrag(), this.draggedRange = null, this.draggingPoint = null },
          drop: function (t) { let n, i, o, r, s, a, u, c, l; return t.preventDefault(), o = (s = t.dataTransfer) != null ? s.files : void 0, r = { x: t.clientX, y: t.clientY }, (a = this.responder) != null && a.setLocationRangeFromPointRange(r), (o != null ? o.length : void 0) ? this.attachFiles(o) : this.draggedRange ? ((u = this.delegate) != null && u.inputControllerWillMoveText(), (c = this.responder) != null && c.moveTextFromRange(this.draggedRange), this.draggedRange = null, this.requestRender()) : (i = t.dataTransfer.getData('application/x-trix-document')) && (n = e.Document.fromJSONString(i), (l = this.responder) != null && l.insertDocument(n), this.requestRender()), this.draggedRange = null, this.draggingPoint = null },
          cut: function (t) { let e, n; return ((e = this.responder) != null ? e.selectionIsExpanded() : void 0) && (this.serializeSelectionToDataTransfer(t.clipboardData) && t.preventDefault(), (n = this.delegate) != null && n.inputControllerWillCutText(), this.deleteInDirection('backward'), t.defaultPrevented) ? this.requestRender() : void 0 },
          copy: function (t) { let e; return ((e = this.responder) != null ? e.selectionIsExpanded() : void 0) && this.serializeSelectionToDataTransfer(t.clipboardData) ? t.preventDefault() : void 0 },
          paste: function (t) {
            let n, o, s, a, u, c, l, p, f, g, v, y, b, A, C, x, w, E, S, R, k, D, L; return n = (p = t.clipboardData) != null ? p : t.testClipboardData, l = { clipboard: n }, n == null || h(t) ? void this.getPastedHTMLUsingHiddenElement(function (t) { return function (e) { let n, i, o; return l.type = 'text/html', l.html = e, (n = t.delegate) != null && n.inputControllerWillPaste(l), (i = t.responder) != null && i.insertHTML(l.html), t.requestRender(), (o = t.delegate) != null ? o.inputControllerDidPaste(l) : void 0 } }(this)) : ((a = n.getData('URL')) ? (l.type = 'text/html', L = (c = n.getData('public.url-name')) ? e.squishBreakableWhitespace(c).trim() : a, l.html = this.createLinkHTML(a, L), (f = this.delegate) != null && f.inputControllerWillPaste(l), this.setInputSummary({ textAdded: L, didDelete: this.selectionIsExpanded() }), (C = this.responder) != null && C.insertHTML(l.html), this.requestRender(), (x = this.delegate) != null && x.inputControllerDidPaste(l)) : i(n) ? (l.type = 'text/plain', l.string = n.getData('text/plain'), (w = this.delegate) != null && w.inputControllerWillPaste(l), this.setInputSummary({ textAdded: l.string, didDelete: this.selectionIsExpanded() }), (E = this.responder) != null && E.insertString(l.string), this.requestRender(), (S = this.delegate) != null && S.inputControllerDidPaste(l)) : (u = n.getData('text/html')) ? (l.type = 'text/html', l.html = u, (R = this.delegate) != null && R.inputControllerWillPaste(l), (k = this.responder) != null && k.insertHTML(l.html), this.requestRender(), (D = this.delegate) != null && D.inputControllerDidPaste(l)) : m.call(n.types, 'Files') >= 0 && (s = (g = n.items) != null && (v = g[0]) != null && typeof v.getAsFile === 'function' ? v.getAsFile() : void 0) && (!s.name && (o = r(s)) && (s.name = 'pasted-file-' + ++d + '.' + o), l.type = 'File', l.file = s, (y = this.delegate) != null && y.inputControllerWillAttachFiles(), (b = this.responder) != null && b.insertFile(l.file), this.requestRender(), (A = this.delegate) != null && A.inputControllerDidPaste(l)), t.preventDefault())
          },
          compositionstart: function (t) { return this.getCompositionInput().start(t.data) },
          compositionupdate: function (t) { return this.getCompositionInput().update(t.data) },
          compositionend: function (t) { return this.getCompositionInput().end(t.data) },
          beforeinput: function () { return this.inputSummary.didInput = !0 },
          input: function (t) { return this.inputSummary.didInput = !0, t.stopPropagation() }
        }, s.prototype.keys = { backspace: function (t) { let e; return (e = this.delegate) != null && e.inputControllerWillPerformTyping(), this.deleteInDirection('backward', t) }, delete: function (t) { let e; return (e = this.delegate) != null && e.inputControllerWillPerformTyping(), this.deleteInDirection('forward', t) }, return: function () { let t, e; return this.setInputSummary({ preferDocument: !0 }), (t = this.delegate) != null && t.inputControllerWillPerformTyping(), (e = this.responder) != null ? e.insertLineBreak() : void 0 }, tab: function (t) { let e, n; return ((e = this.responder) != null ? e.canIncreaseNestingLevel() : void 0) ? ((n = this.responder) != null && n.increaseNestingLevel(), this.requestRender(), t.preventDefault()) : void 0 }, left: function (t) { let e; return this.selectionIsInCursorTarget() ? (t.preventDefault(), (e = this.responder) != null ? e.moveCursorInDirection('backward') : void 0) : void 0 }, right: function (t) { let e; return this.selectionIsInCursorTarget() ? (t.preventDefault(), (e = this.responder) != null ? e.moveCursorInDirection('forward') : void 0) : void 0 }, control: { d: function (t) { let e; return (e = this.delegate) != null && e.inputControllerWillPerformTyping(), this.deleteInDirection('forward', t) }, h: function (t) { let e; return (e = this.delegate) != null && e.inputControllerWillPerformTyping(), this.deleteInDirection('backward', t) }, o: function (t) { let e, n; return t.preventDefault(), (e = this.delegate) != null && e.inputControllerWillPerformTyping(), (n = this.responder) != null && n.insertString('\n', { updatePosition: !1 }), this.requestRender() } }, shift: { return: function (t) { let e, n; return (e = this.delegate) != null && e.inputControllerWillPerformTyping(), (n = this.responder) != null && n.insertString('\n'), this.requestRender(), t.preventDefault() }, tab: function (t) { let e, n; return ((e = this.responder) != null ? e.canDecreaseNestingLevel() : void 0) ? ((n = this.responder) != null && n.decreaseNestingLevel(), this.requestRender(), t.preventDefault()) : void 0 }, left: function (t) { return this.selectionIsInCursorTarget() ? (t.preventDefault(), this.expandSelectionInDirection('backward')) : void 0 }, right: function (t) { return this.selectionIsInCursorTarget() ? (t.preventDefault(), this.expandSelectionInDirection('forward')) : void 0 } }, alt: { backspace: function () { let t; return this.setInputSummary({ preferDocument: !1 }), (t = this.delegate) != null ? t.inputControllerWillPerformTyping() : void 0 } }, meta: { backspace: function () { let t; return this.setInputSummary({ preferDocument: !1 }), (t = this.delegate) != null ? t.inputControllerWillPerformTyping() : void 0 } } }, s.prototype.getCompositionInput = function () { return this.isComposing() ? this.compositionInput : this.compositionInput = new t(this) }, s.prototype.isComposing = function () { return this.compositionInput != null && !this.compositionInput.isEnded() }, s.prototype.deleteInDirection = function (t, e) { let n; return ((n = this.responder) != null ? n.deleteInDirection(t) : void 0) !== !1 ? this.setInputSummary({ didDelete: !0 }) : e ? (e.preventDefault(), this.requestRender()) : void 0 }, s.prototype.serializeSelectionToDataTransfer = function (t) { let n, i; if (o(t)) return n = (i = this.responder) != null ? i.getSelectedDocument().toSerializableDocument() : void 0, t.setData('application/x-trix-document', JSON.stringify(n)), t.setData('text/html', e.DocumentView.render(n).innerHTML), t.setData('text/plain', n.toString().replace(/\n$/, '')), !0 }, s.prototype.canAcceptDataTransfer = function (t) { let e, n, i, o, r, s; for (s = {}, o = (i = t != null ? t.types : void 0) != null ? i : [], e = 0, n = o.length; n > e; e++)r = o[e], s[r] = !0; return s.Files || s['application/x-trix-document'] || s['text/html'] || s['text/plain'] }, s.prototype.getPastedHTMLUsingHiddenElement = function (t) { let n, i, o; return i = this.getSelectedRange(), o = { position: 'absolute', left: window.pageXOffset + 'px', top: window.pageYOffset + 'px', opacity: 0 }, n = c({ style: o, tagName: 'div', editable: !0 }), document.body.appendChild(n), n.focus(), requestAnimationFrame(function (o) { return function () { let r; return r = n.innerHTML, e.removeNode(n), o.setSelectedRange(i), t(r) } }(this)) }, s.proxyMethod('responder?.getSelectedRange'), s.proxyMethod('responder?.setSelectedRange'), s.proxyMethod('responder?.expandSelectionInDirection'), s.proxyMethod('responder?.selectionIsInCursorTarget'), s.proxyMethod('responder?.selectionIsExpanded'), s
      }(e.InputController)), r = function (t) { let e, n; return (e = t.type) != null && (n = e.match(/\/(\w+)$/)) != null ? n[1] : void 0 }, s = (typeof ' '.codePointAt === 'function' ? ' '.codePointAt(0) : void 0) != null, p = function (t) { let n; return t.key && s && t.key.codePointAt(0) === t.keyCode ? t.key : (t.which === null ? n = t.keyCode : t.which !== 0 && t.charCode !== 0 && (n = t.charCode), n != null && u[n] !== 'escape' ? e.UTF16String.fromCodepoints([n]).toString() : void 0) }, h = function (t) { let e, n, i, o, r, s, a, u, c, l; if (u = t.clipboardData) { if (m.call(u.types, 'text/html') >= 0) { for (c = u.types, i = 0, s = c.length; s > i; i++) if (l = c[i], e = /^CorePasteboardFlavorType/.test(l), n = /^dyn\./.test(l) && u.getData(l), a = e || n) return !0; return !1 } return o = m.call(u.types, 'com.apple.webarchive') >= 0, r = m.call(u.types, 'com.apple.flat-rtfd') >= 0, o || r } }, t = (function (t) { function e (t) { let e; this.inputController = t, e = this.inputController, this.responder = e.responder, this.delegate = e.delegate, this.inputSummary = e.inputSummary, this.data = {} } return f(e, t), e.prototype.start = function (t) { let e, n; return this.data.start = t, this.isSignificant() ? (this.inputSummary.eventName === 'keypress' && this.inputSummary.textAdded && (e = this.responder) != null && e.deleteInDirection('left'), this.selectionIsExpanded() || (this.insertPlaceholder(), this.requestRender()), this.range = (n = this.responder) != null ? n.getSelectedRange() : void 0) : void 0 }, e.prototype.update = function (t) { let e; return this.data.update = t, this.isSignificant() && (e = this.selectPlaceholder()) ? (this.forgetPlaceholder(), this.range = e) : void 0 }, e.prototype.end = function (t) { let e, n, i, o; return this.data.end = t, this.isSignificant() ? (this.forgetPlaceholder(), this.canApplyToDocument() ? (this.setInputSummary({ preferDocument: !0, didInput: !1 }), (e = this.delegate) != null && e.inputControllerWillPerformTyping(), (n = this.responder) != null && n.setSelectedRange(this.range), (i = this.responder) != null && i.insertString(this.data.end), (o = this.responder) != null ? o.setSelectedRange(this.range[0] + this.data.end.length) : void 0) : this.data.start != null || this.data.update != null ? (this.requestReparse(), this.inputController.reset()) : void 0) : this.inputController.reset() }, e.prototype.getEndData = function () { return this.data.end }, e.prototype.isEnded = function () { return this.getEndData() != null }, e.prototype.isSignificant = function () { return n.composesExistingText ? this.inputSummary.didInput : !0 }, e.prototype.canApplyToDocument = function () { let t, e; return ((t = this.data.start) != null ? t.length : void 0) === 0 && ((e = this.data.end) != null ? e.length : void 0) > 0 && this.range != null }, e.proxyMethod('inputController.setInputSummary'), e.proxyMethod('inputController.requestRender'), e.proxyMethod('inputController.requestReparse'), e.proxyMethod('responder?.selectionIsExpanded'), e.proxyMethod('responder?.insertPlaceholder'), e.proxyMethod('responder?.selectPlaceholder'), e.proxyMethod('responder?.forgetPlaceholder'), e }(e.BasicObject))
    }.call(this)), (function () { let t; let n; let i; const o = function (t, e) { return function () { return t.apply(e, arguments) } }; const r = function (t, e) { function n () { this.constructor = t } for (const i in e)s.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var s = {}.hasOwnProperty; const a = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; t = e.dataTransferIsPlainText, n = e.keyEventIsKeyboardCommand, i = e.objectsAreEqual, e.Level2InputController = (function (s) { function u () { return this.render = o(this.render, this), u.__super__.constructor.apply(this, arguments) } let c, l, h, p, d, f; return r(u, s), u.prototype.elementDidMutate = function () { let t; return this.scheduledRender ? this.composing && (t = this.delegate) != null && typeof t.inputControllerDidAllowUnhandledInput === 'function' ? t.inputControllerDidAllowUnhandledInput() : void 0 : this.reparse() }, u.prototype.scheduleRender = function () { return this.scheduledRender != null ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render) }, u.prototype.render = function () { let t; return cancelAnimationFrame(this.scheduledRender), this.scheduledRender = null, this.composing || (t = this.delegate) != null && t.render(), typeof this.afterRender === 'function' && this.afterRender(), this.afterRender = null }, u.prototype.reparse = function () { let t; return (t = this.delegate) != null ? t.reparse() : void 0 }, u.prototype.events = { keydown: function (t) { let e, i, o, r; if (n(t)) { if (e = l(t), (r = this.delegate) != null ? r.inputControllerDidReceiveKeyboardCommand(e) : void 0) return t.preventDefault() } else if (o = t.key, t.altKey && (o += '+Alt'), t.shiftKey && (o += '+Shift'), i = this.keys[o]) return this.withEvent(t, i) }, paste: function (t) { let e, n, i, o, r, s, a, u, c; return h(t) ? (t.preventDefault(), this.attachFiles(t.clipboardData.files)) : p(t) ? (t.preventDefault(), n = { type: 'text/plain', string: t.clipboardData.getData('text/plain') }, (i = this.delegate) != null && i.inputControllerWillPaste(n), (o = this.responder) != null && o.insertString(n.string), this.render(), (r = this.delegate) != null ? r.inputControllerDidPaste(n) : void 0) : (e = (s = t.clipboardData) != null ? s.getData('URL') : void 0) ? (t.preventDefault(), n = { type: 'text/html', html: this.createLinkHTML(e) }, (a = this.delegate) != null && a.inputControllerWillPaste(n), (u = this.responder) != null && u.insertHTML(n.html), this.render(), (c = this.delegate) != null ? c.inputControllerDidPaste(n) : void 0) : void 0 }, beforeinput: function (t) { let e; return (e = this.inputTypes[t.inputType]) ? (this.withEvent(t, e), this.scheduleRender()) : void 0 }, input: function () { return e.selectionChangeObserver.reset() }, dragstart: function (t) { let e, n; return ((e = this.responder) != null ? e.selectionContainsAttachments() : void 0) ? (t.dataTransfer.setData('application/x-trix-dragging', !0), this.dragging = { range: (n = this.responder) != null ? n.getSelectedRange() : void 0, point: d(t) }) : void 0 }, dragenter: function (t) { return c(t) ? t.preventDefault() : void 0 }, dragover: function (t) { let e, n; if (this.dragging) { if (t.preventDefault(), e = d(t), !i(e, this.dragging.point)) return this.dragging.point = e, (n = this.responder) != null ? n.setLocationRangeFromPointRange(e) : void 0 } else if (c(t)) return t.preventDefault() }, drop: function (t) { let e, n, i, o; return this.dragging ? (t.preventDefault(), (n = this.delegate) != null && n.inputControllerWillMoveText(), (i = this.responder) != null && i.moveTextFromRange(this.dragging.range), this.dragging = null, this.scheduleRender()) : c(t) ? (t.preventDefault(), e = d(t), (o = this.responder) != null && o.setLocationRangeFromPointRange(e), this.attachFiles(t.dataTransfer.files)) : void 0 }, dragend: function () { let t; return this.dragging ? ((t = this.responder) != null && t.setSelectedRange(this.dragging.range), this.dragging = null) : void 0 }, compositionend: function () { return this.composing ? (this.composing = !1, this.scheduleRender()) : void 0 } }, u.prototype.keys = { ArrowLeft: function () { let t, e; return ((t = this.responder) != null ? t.shouldManageMovingCursorInDirection('backward') : void 0) ? (this.event.preventDefault(), (e = this.responder) != null ? e.moveCursorInDirection('backward') : void 0) : void 0 }, ArrowRight: function () { let t, e; return ((t = this.responder) != null ? t.shouldManageMovingCursorInDirection('forward') : void 0) ? (this.event.preventDefault(), (e = this.responder) != null ? e.moveCursorInDirection('forward') : void 0) : void 0 }, Backspace: function () { let t, e, n; return ((t = this.responder) != null ? t.shouldManageDeletingInDirection('backward') : void 0) ? (this.event.preventDefault(), (e = this.delegate) != null && e.inputControllerWillPerformTyping(), (n = this.responder) != null && n.deleteInDirection('backward'), this.render()) : void 0 }, Tab: function () { let t, e; return ((t = this.responder) != null ? t.canIncreaseNestingLevel() : void 0) ? (this.event.preventDefault(), (e = this.responder) != null && e.increaseNestingLevel(), this.render()) : void 0 }, 'Tab+Shift': function () { let t, e; return ((t = this.responder) != null ? t.canDecreaseNestingLevel() : void 0) ? (this.event.preventDefault(), (e = this.responder) != null && e.decreaseNestingLevel(), this.render()) : void 0 } }, u.prototype.inputTypes = { deleteByComposition: function () { return this.deleteInDirection('backward', { recordUndoEntry: !1 }) }, deleteByCut: function () { return this.deleteInDirection('backward') }, deleteByDrag: function () { return this.event.preventDefault(), this.withTargetDOMRange(function () { let t; return this.deleteByDragRange = (t = this.responder) != null ? t.getSelectedRange() : void 0 }) }, deleteCompositionText: function () { return this.deleteInDirection('backward', { recordUndoEntry: !1 }) }, deleteContent: function () { return this.deleteInDirection('backward') }, deleteContentBackward: function () { return this.deleteInDirection('backward') }, deleteContentForward: function () { return this.deleteInDirection('forward') }, deleteEntireSoftLine: function () { return this.deleteInDirection('forward') }, deleteHardLineBackward: function () { return this.deleteInDirection('backward') }, deleteHardLineForward: function () { return this.deleteInDirection('forward') }, deleteSoftLineBackward: function () { return this.deleteInDirection('backward') }, deleteSoftLineForward: function () { return this.deleteInDirection('forward') }, deleteWordBackward: function () { return this.deleteInDirection('backward') }, deleteWordForward: function () { return this.deleteInDirection('forward') }, formatBackColor: function () { return this.activateAttributeIfSupported('backgroundColor', this.event.data) }, formatBold: function () { return this.toggleAttributeIfSupported('bold') }, formatFontColor: function () { return this.activateAttributeIfSupported('color', this.event.data) }, formatFontName: function () { return this.activateAttributeIfSupported('font', this.event.data) }, formatIndent: function () { let t; return ((t = this.responder) != null ? t.canIncreaseNestingLevel() : void 0) ? this.withTargetDOMRange(function () { let t; return (t = this.responder) != null ? t.increaseNestingLevel() : void 0 }) : void 0 }, formatItalic: function () { return this.toggleAttributeIfSupported('italic') }, formatJustifyCenter: function () { return this.toggleAttributeIfSupported('justifyCenter') }, formatJustifyFull: function () { return this.toggleAttributeIfSupported('justifyFull') }, formatJustifyLeft: function () { return this.toggleAttributeIfSupported('justifyLeft') }, formatJustifyRight: function () { return this.toggleAttributeIfSupported('justifyRight') }, formatOutdent: function () { let t; return ((t = this.responder) != null ? t.canDecreaseNestingLevel() : void 0) ? this.withTargetDOMRange(function () { let t; return (t = this.responder) != null ? t.decreaseNestingLevel() : void 0 }) : void 0 }, formatRemove: function () { return this.withTargetDOMRange(function () { let t, e, n, i; i = []; for (t in (e = this.responder) != null ? e.getCurrentAttributes() : void 0)i.push((n = this.responder) != null ? n.removeCurrentAttribute(t) : void 0); return i }) }, formatSetBlockTextDirection: function () { return this.activateAttributeIfSupported('blockDir', this.event.data) }, formatSetInlineTextDirection: function () { return this.activateAttributeIfSupported('textDir', this.event.data) }, formatStrikeThrough: function () { return this.toggleAttributeIfSupported('strike') }, formatSubscript: function () { return this.toggleAttributeIfSupported('sub') }, formatSuperscript: function () { return this.toggleAttributeIfSupported('sup') }, formatUnderline: function () { return this.toggleAttributeIfSupported('underline') }, historyRedo: function () { let t; return (t = this.delegate) != null ? t.inputControllerWillPerformRedo() : void 0 }, historyUndo: function () { let t; return (t = this.delegate) != null ? t.inputControllerWillPerformUndo() : void 0 }, insertCompositionText: function () { return this.composing = !0, this.insertString(this.event.data) }, insertFromComposition: function () { return this.composing = !1, this.insertString(this.event.data) }, insertFromDrop: function () { let t, e; return (t = this.deleteByDragRange) ? (this.deleteByDragRange = null, (e = this.delegate) != null && e.inputControllerWillMoveText(), this.withTargetDOMRange(function () { let e; return (e = this.responder) != null ? e.moveTextFromRange(t) : void 0 })) : void 0 }, insertFromPaste: function () { let n, i, o, r, s, a, u, c, l, h, p; return n = this.event.dataTransfer, s = { dataTransfer: n }, (i = n.getData('URL')) ? (this.event.preventDefault(), s.type = 'text/html', p = (r = n.getData('public.url-name')) ? e.squishBreakableWhitespace(r).trim() : i, s.html = this.createLinkHTML(i, p), (a = this.delegate) != null && a.inputControllerWillPaste(s), this.withTargetDOMRange(function () { let t; return (t = this.responder) != null ? t.insertHTML(s.html) : void 0 }), this.afterRender = (function (t) { return function () { let e; return (e = t.delegate) != null ? e.inputControllerDidPaste(s) : void 0 } }(this))) : t(n) ? (s.type = 'text/plain', s.string = n.getData('text/plain'), (u = this.delegate) != null && u.inputControllerWillPaste(s), this.withTargetDOMRange(function () { let t; return (t = this.responder) != null ? t.insertString(s.string) : void 0 }), this.afterRender = (function (t) { return function () { let e; return (e = t.delegate) != null ? e.inputControllerDidPaste(s) : void 0 } }(this))) : (o = n.getData('text/html')) ? (this.event.preventDefault(), s.type = 'text/html', s.html = o, (c = this.delegate) != null && c.inputControllerWillPaste(s), this.withTargetDOMRange(function () { let t; return (t = this.responder) != null ? t.insertHTML(s.html) : void 0 }), this.afterRender = (function (t) { return function () { let e; return (e = t.delegate) != null ? e.inputControllerDidPaste(s) : void 0 } }(this))) : ((l = n.files) != null ? l.length : void 0) ? (s.type = 'File', s.file = n.files[0], (h = this.delegate) != null && h.inputControllerWillPaste(s), this.withTargetDOMRange(function () { let t; return (t = this.responder) != null ? t.insertFile(s.file) : void 0 }), this.afterRender = (function (t) { return function () { let e; return (e = t.delegate) != null ? e.inputControllerDidPaste(s) : void 0 } }(this))) : void 0 }, insertFromYank: function () { return this.insertString(this.event.data) }, insertLineBreak: function () { return this.insertString('\n') }, insertLink: function () { return this.activateAttributeIfSupported('href', this.event.data) }, insertOrderedList: function () { return this.toggleAttributeIfSupported('number') }, insertParagraph: function () { let t; return (t = this.delegate) != null && t.inputControllerWillPerformTyping(), this.withTargetDOMRange(function () { let t; return (t = this.responder) != null ? t.insertLineBreak() : void 0 }) }, insertReplacementText: function () { return this.insertString(this.event.dataTransfer.getData('text/plain'), { updatePosition: !1 }) }, insertText: function () { let t, e; return this.insertString((t = this.event.data) != null ? t : (e = this.event.dataTransfer) != null ? e.getData('text/plain') : void 0) }, insertTranspose: function () { return this.insertString(this.event.data) }, insertUnorderedList: function () { return this.toggleAttributeIfSupported('bullet') } }, u.prototype.insertString = function (t, e) { let n; return t == null && (t = ''), (n = this.delegate) != null && n.inputControllerWillPerformTyping(), this.withTargetDOMRange(function () { let n; return (n = this.responder) != null ? n.insertString(t, e) : void 0 }) }, u.prototype.toggleAttributeIfSupported = function (t) { let n; return a.call(e.getAllAttributeNames(), t) >= 0 ? ((n = this.delegate) != null && n.inputControllerWillPerformFormatting(t), this.withTargetDOMRange(function () { let e; return (e = this.responder) != null ? e.toggleCurrentAttribute(t) : void 0 })) : void 0 }, u.prototype.activateAttributeIfSupported = function (t, n) { let i; return a.call(e.getAllAttributeNames(), t) >= 0 ? ((i = this.delegate) != null && i.inputControllerWillPerformFormatting(t), this.withTargetDOMRange(function () { let e; return (e = this.responder) != null ? e.setCurrentAttribute(t, n) : void 0 })) : void 0 }, u.prototype.deleteInDirection = function (t, e) { let n, i, o, r; return o = (e != null ? e : { recordUndoEntry: !0 }).recordUndoEntry, o && (r = this.delegate) != null && r.inputControllerWillPerformTyping(), i = (function (e) { return function () { let n; return (n = e.responder) != null ? n.deleteInDirection(t) : void 0 } }(this)), (n = this.getTargetDOMRange({ minLength: 2 })) ? this.withTargetDOMRange(n, i) : i() }, u.prototype.withTargetDOMRange = function (t, n) { let i; return typeof t === 'function' && (n = t, t = this.getTargetDOMRange()), t ? (i = this.responder) != null ? i.withTargetDOMRange(t, n.bind(this)) : void 0 : (e.selectionChangeObserver.reset(), n.call(this)) }, u.prototype.getTargetDOMRange = function (t) { let e, n, i, o; return i = (t != null ? t : { minLength: 0 }).minLength, (o = typeof (e = this.event).getTargetRanges === 'function' ? e.getTargetRanges() : void 0) && o.length && (n = f(o[0]), i === 0 || n.toString().length >= i) ? n : void 0 }, f = function (t) { let e; return e = document.createRange(), e.setStart(t.startContainer, t.startOffset), e.setEnd(t.endContainer, t.endOffset), e }, u.prototype.withEvent = function (t, e) { let n; this.event = t; try { n = e.call(this) } finally { this.event = null } return n }, c = function (t) { let e, n; return a.call((e = (n = t.dataTransfer) != null ? n.types : void 0) != null ? e : [], 'Files') >= 0 }, h = function (t) { let e; return (e = t.clipboardData) ? a.call(e.types, 'Files') >= 0 && e.types.length === 1 && e.files.length >= 1 : void 0 }, p = function (t) { let e; return (e = t.clipboardData) ? a.call(e.types, 'text/plain') >= 0 && e.types.length === 1 : void 0 }, l = function (t) { let e; return e = [], t.altKey && e.push('alt'), t.shiftKey && e.push('shift'), e.push(t.key), e }, d = function (t) { return { x: t.clientX, y: t.clientY } }, u }(e.InputController)) }.call(this)), (function () { let t; let n; let i; let o; let r; let s; let a; let u; const c = function (t, e) { return function () { return t.apply(e, arguments) } }; const l = function (t, e) { function n () { this.constructor = t } for (const i in e)h.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var h = {}.hasOwnProperty; n = e.defer, i = e.handleEvent, s = e.makeElement, u = e.tagName, a = e.config, r = a.lang, t = a.css, o = a.keyNames, e.AttachmentEditorController = (function (a) { function h (t, e, n, i) { this.attachmentPiece = t, this.element = e, this.container = n, this.options = i != null ? i : {}, this.didBlurCaption = c(this.didBlurCaption, this), this.didChangeCaption = c(this.didChangeCaption, this), this.didInputCaption = c(this.didInputCaption, this), this.didKeyDownCaption = c(this.didKeyDownCaption, this), this.didClickActionButton = c(this.didClickActionButton, this), this.didClickToolbar = c(this.didClickToolbar, this), this.attachment = this.attachmentPiece.attachment, u(this.element) === 'a' && (this.element = this.element.firstChild), this.install() } let p; return l(h, a), p = function (t) { return function () { let e; return e = t.apply(this, arguments), e.do(), this.undos == null && (this.undos = []), this.undos.push(e.undo) } }, h.prototype.install = function () { return this.makeElementMutable(), this.addToolbar(), this.attachment.isPreviewable() ? this.installCaptionEditor() : void 0 }, h.prototype.uninstall = function () { let t, e; for (this.savePendingCaption(); e = this.undos.pop();)e(); return (t = this.delegate) != null ? t.didUninstallAttachmentEditor(this) : void 0 }, h.prototype.savePendingCaption = function () { let t, e, n; return this.pendingCaption != null ? (t = this.pendingCaption, this.pendingCaption = null, t ? (e = this.delegate) != null && typeof e.attachmentEditorDidRequestUpdatingAttributesForAttachment === 'function' ? e.attachmentEditorDidRequestUpdatingAttributesForAttachment({ caption: t }, this.attachment) : void 0 : (n = this.delegate) != null && typeof n.attachmentEditorDidRequestRemovingAttributeForAttachment === 'function' ? n.attachmentEditorDidRequestRemovingAttributeForAttachment('caption', this.attachment) : void 0) : void 0 }, h.prototype.makeElementMutable = p(function () { return { do: (function (t) { return function () { return t.element.dataset.trixMutable = !0 } }(this)), undo: (function (t) { return function () { return delete t.element.dataset.trixMutable } }(this)) } }), h.prototype.addToolbar = p(function () { let n; return n = s({ tagName: 'div', className: t.attachmentToolbar, data: { trixMutable: !0 }, childNodes: s({ tagName: 'div', className: 'trix-button-row', childNodes: s({ tagName: 'span', className: 'trix-button-group trix-button-group--actions', childNodes: s({ tagName: 'button', className: 'trix-button trix-button--remove', textContent: r.remove, attributes: { title: r.remove }, data: { trixAction: 'remove' } }) }) }) }), this.attachment.isPreviewable() && n.appendChild(s({ tagName: 'div', className: t.attachmentMetadataContainer, childNodes: s({ tagName: 'span', className: t.attachmentMetadata, childNodes: [s({ tagName: 'span', className: t.attachmentName, textContent: this.attachment.getFilename(), attributes: { title: this.attachment.getFilename() } }), s({ tagName: 'span', className: t.attachmentSize, textContent: this.attachment.getFormattedFilesize() })] }) })), i('click', { onElement: n, withCallback: this.didClickToolbar }), i('click', { onElement: n, matchingSelector: '[data-trix-action]', withCallback: this.didClickActionButton }), { do: (function (t) { return function () { return t.element.appendChild(n) } }(this)), undo: (function () { return function () { return e.removeNode(n) } }(this)) } }), h.prototype.installCaptionEditor = p(function () { let o, a, u, c, l; return c = s({ tagName: 'textarea', className: t.attachmentCaptionEditor, attributes: { placeholder: r.captionPlaceholder }, data: { trixMutable: !0 } }), c.value = this.attachmentPiece.getCaption(), l = c.cloneNode(), l.classList.add('trix-autoresize-clone'), l.tabIndex = -1, o = function () { return l.value = c.value, c.style.height = l.scrollHeight + 'px' }, i('input', { onElement: c, withCallback: o }), i('input', { onElement: c, withCallback: this.didInputCaption }), i('keydown', { onElement: c, withCallback: this.didKeyDownCaption }), i('change', { onElement: c, withCallback: this.didChangeCaption }), i('blur', { onElement: c, withCallback: this.didBlurCaption }), u = this.element.querySelector('figcaption'), a = u.cloneNode(), { do: (function (e) { return function () { return u.style.display = 'none', a.appendChild(c), a.appendChild(l), a.classList.add(t.attachmentCaption + '--editing'), u.parentElement.insertBefore(a, u), o(), e.options.editCaption ? n(function () { return c.focus() }) : void 0 } }(this)), undo: function () { return e.removeNode(a), u.style.display = null } } }), h.prototype.didClickToolbar = function (t) { return t.preventDefault(), t.stopPropagation() }, h.prototype.didClickActionButton = function (t) { let e, n; switch (e = t.target.getAttribute('data-trix-action')) { case 'remove':return (n = this.delegate) != null ? n.attachmentEditorDidRequestRemovalOfAttachment(this.attachment) : void 0 } }, h.prototype.didKeyDownCaption = function (t) { let e; return o[t.keyCode] === 'return' ? (t.preventDefault(), this.savePendingCaption(), (e = this.delegate) != null && typeof e.attachmentEditorDidRequestDeselectingAttachment === 'function' ? e.attachmentEditorDidRequestDeselectingAttachment(this.attachment) : void 0) : void 0 }, h.prototype.didInputCaption = function (t) { return this.pendingCaption = t.target.value.replace(/\s/g, ' ').trim() }, h.prototype.didChangeCaption = function () { return this.savePendingCaption() }, h.prototype.didBlurCaption = function () { return this.savePendingCaption() }, h }(e.BasicObject)) }.call(this)), (function () { let t; let n; let i; const o = function (t, e) { function n () { this.constructor = t } for (const i in e)r.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var r = {}.hasOwnProperty; i = e.makeElement, t = e.config.css, e.AttachmentView = (function (r) { function s () { s.__super__.constructor.apply(this, arguments), this.attachment = this.object, this.attachment.uploadProgressDelegate = this, this.attachmentPiece = this.options.piece } let a; return o(s, r), s.attachmentSelector = '[data-trix-attachment]', s.prototype.createContentNodes = function () { return [] }, s.prototype.createNodes = function () { let e, n, o, r, s, u, c; if (e = r = i({ tagName: 'figure', className: this.getClassName(), data: this.getData(), editable: !1 }), (n = this.getHref()) && (r = i({ tagName: 'a', editable: !1, attributes: { href: n, tabindex: -1 } }), e.appendChild(r)), this.attachment.hasContent())r.innerHTML = this.attachment.getContent(); else for (c = this.createContentNodes(), o = 0, s = c.length; s > o; o++)u = c[o], r.appendChild(u); return r.appendChild(this.createCaptionElement()), this.attachment.isPending() && (this.progressElement = i({ tagName: 'progress', attributes: { class: t.attachmentProgress, value: this.attachment.getUploadProgress(), max: 100 }, data: { trixMutable: !0, trixStoreKey: ['progressElement', this.attachment.id].join('/') } }), e.appendChild(this.progressElement)), [a('left'), e, a('right')] }, s.prototype.createCaptionElement = function () { let e, n, o, r, s, a, u; return o = i({ tagName: 'figcaption', className: t.attachmentCaption }), (e = this.attachmentPiece.getCaption()) ? (o.classList.add(t.attachmentCaption + '--edited'), o.textContent = e) : (n = this.getCaptionConfig(), n.name && (r = this.attachment.getFilename()), n.size && (a = this.attachment.getFormattedFilesize()), r && (s = i({ tagName: 'span', className: t.attachmentName, textContent: r }), o.appendChild(s)), a && (r && o.appendChild(document.createTextNode(' ')), u = i({ tagName: 'span', className: t.attachmentSize, textContent: a }), o.appendChild(u))), o }, s.prototype.getClassName = function () { let e, n; return n = [t.attachment, t.attachment + '--' + this.attachment.getType()], (e = this.attachment.getExtension()) && n.push(t.attachment + '--' + e), n.join(' ') }, s.prototype.getData = function () { let t, e; return e = { trixAttachment: JSON.stringify(this.attachment), trixContentType: this.attachment.getContentType(), trixId: this.attachment.id }, t = this.attachmentPiece.attributes, t.isEmpty() || (e.trixAttributes = JSON.stringify(t)), this.attachment.isPending() && (e.trixSerialize = !1), e }, s.prototype.getHref = function () { return n(this.attachment.getContent(), 'a') ? void 0 : this.attachment.getHref() }, s.prototype.getCaptionConfig = function () { let t, n, i; return i = this.attachment.getType(), t = e.copyObject((n = e.config.attachments[i]) != null ? n.caption : void 0), i === 'file' && (t.name = !0), t }, s.prototype.findProgressElement = function () { let t; return (t = this.findElement()) != null ? t.querySelector('progress') : void 0 }, a = function (t) { return i({ tagName: 'span', textContent: e.ZERO_WIDTH_SPACE, data: { trixCursorTarget: t, trixSerialize: !1 } }) }, s.prototype.attachmentDidChangeUploadProgress = function () { let t, e; return e = this.attachment.getUploadProgress(), (t = this.findProgressElement()) != null ? t.value = e : void 0 }, s }(e.ObjectView)), n = function (t, e) { let n; return n = i('div'), n.innerHTML = t != null ? t : '', n.querySelector(e) } }.call(this)), (function () { let t; const n = function (t, e) { function n () { this.constructor = t } for (const o in e)i.call(e, o) && (t[o] = e[o]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var i = {}.hasOwnProperty; t = e.makeElement, e.PreviewableAttachmentView = (function (i) { function o () { o.__super__.constructor.apply(this, arguments), this.attachment.previewDelegate = this } return n(o, i), o.prototype.createContentNodes = function () { return this.image = t({ tagName: 'img', attributes: { src: '' }, data: { trixMutable: !0 } }), this.refresh(this.image), [this.image] }, o.prototype.createCaptionElement = function () { let t; return t = o.__super__.createCaptionElement.apply(this, arguments), t.textContent || t.setAttribute('data-trix-placeholder', e.config.lang.captionPlaceholder), t }, o.prototype.refresh = function (t) { let e; return t == null && (t = (e = this.findElement()) != null ? e.querySelector('img') : void 0), t ? this.updateAttributesForImage(t) : void 0 }, o.prototype.updateAttributesForImage = function (t) { let e, n, i, o, r, s; return r = this.attachment.getURL(), n = this.attachment.getPreviewURL(), t.src = n || r, n === r ? t.removeAttribute('data-trix-serialized-attributes') : (i = JSON.stringify({ src: r }), t.setAttribute('data-trix-serialized-attributes', i)), s = this.attachment.getWidth(), e = this.attachment.getHeight(), s != null && (t.width = s), e != null && (t.height = e), o = ['imageElement', this.attachment.id, t.src, t.width, t.height].join('/'), t.dataset.trixStoreKey = o }, o.prototype.attachmentDidChangeAttributes = function () { return this.refresh(this.image), this.refresh() }, o }(e.AttachmentView)) }.call(this)), (function () {
      let t; let n; let i; const o = function (t, e) { function n () { this.constructor = t } for (const i in e)r.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var r = {}.hasOwnProperty; i = e.makeElement, t = e.findInnerElement, n = e.getTextConfig, e.PieceView = (function (r) {
        function s () { let t; s.__super__.constructor.apply(this, arguments), this.piece = this.object, this.attributes = this.piece.getAttributes(), t = this.options, this.textConfig = t.textConfig, this.context = t.context, this.piece.attachment ? this.attachment = this.piece.attachment : this.string = this.piece.toString() } let a; return o(s, r), s.prototype.createNodes = function () { let e, n, i, o, r, s; if (s = this.attachment ? this.createAttachmentNodes() : this.createStringNodes(), e = this.createElement()) { for (i = t(e), n = 0, o = s.length; o > n; n++)r = s[n], i.appendChild(r); s = [e] } return s }, s.prototype.createAttachmentNodes = function () { let t, n; return t = this.attachment.isPreviewable() ? e.PreviewableAttachmentView : e.AttachmentView, n = this.createChildView(t, this.piece.attachment, { piece: this.piece }), n.getNodes() }, s.prototype.createStringNodes = function () { let t, e, n, o, r, s, a, u, c, l; if ((u = this.textConfig) != null ? u.plaintext : void 0) return [document.createTextNode(this.string)]; for (a = [], c = this.string.split('\n'), n = e = 0, o = c.length; o > e; n = ++e)l = c[n], n > 0 && (t = i('br'), a.push(t)), (r = l.length) && (s = document.createTextNode(this.preserveSpaces(l)), a.push(s)); return a }, s.prototype.createElement = function () { let t, e, o, r, s, a, u, c, l; c = {}, a = this.attributes; for (r in a) if (l = a[r], (t = n(r)) && (t.tagName && (s = i(t.tagName), o ? (o.appendChild(s), o = s) : e = o = s), t.styleProperty && (c[t.styleProperty] = l), t.style)) { u = t.style; for (r in u)l = u[r], c[r] = l } if (Object.keys(c).length) { e == null && (e = i('span')); for (r in c)l = c[r], e.style[r] = l } return e }, s.prototype.createContainerElement = function () { let t, e, o, r, s; r = this.attributes; for (o in r) if (s = r[o], (e = n(o)) && e.groupTagName) return t = {}, t[o] = s, i(e.groupTagName, t) }, a = e.NON_BREAKING_SPACE, s.prototype.preserveSpaces = function (t) {
          return this.context.isLast && (t = t.replace(/\ $/, a)), t = t.replace(/(\S)\ {3}(\S)/g, '$1 ' + a + ' $2').replace(/\ {2}/g, a + ' ').replace(/\ {2}/g, ' ' + a), (this.context.isFirst || this.context.followsWhitespace) && (t = t.replace(/^\ /, a)), t
        }, s
      }(e.ObjectView))
    }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.TextView = (function (n) { function i () { i.__super__.constructor.apply(this, arguments), this.text = this.object, this.textConfig = this.options.textConfig } let o; return t(i, n), i.prototype.createNodes = function () { let t, n, i, r, s, a, u, c, l, h; for (a = [], c = e.ObjectGroup.groupObjects(this.getPieces()), r = c.length - 1, i = n = 0, s = c.length; s > n; i = ++n)u = c[i], t = {}, i === 0 && (t.isFirst = !0), i === r && (t.isLast = !0), o(l) && (t.followsWhitespace = !0), h = this.findOrCreateCachedChildView(e.PieceView, u, { textConfig: this.textConfig, context: t }), a.push.apply(a, h.getNodes()), l = u; return a }, i.prototype.getPieces = function () { let t, e, n, i, o; for (i = this.text.getPieces(), o = [], t = 0, e = i.length; e > t; t++)n = i[t], n.hasAttribute('blockBreak') || o.push(n); return o }, o = function (t) { return /\s$/.test(t != null ? t.toString() : void 0) }, i }(e.ObjectView)) }.call(this)), (function () { let t; let n; let i; const o = function (t, e) { function n () { this.constructor = t } for (const i in e)r.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var r = {}.hasOwnProperty; i = e.makeElement, n = e.getBlockConfig, t = e.config.css, e.BlockView = (function (r) { function s () { s.__super__.constructor.apply(this, arguments), this.block = this.object, this.attributes = this.block.getAttributes() } return o(s, r), s.prototype.createNodes = function () { let t, o, r, s, a, u, c, l, h, p, d; if (o = document.createComment('block'), c = [o], this.block.isEmpty() ? c.push(i('br')) : (p = (l = n(this.block.getLastAttribute())) != null ? l.text : void 0, d = this.findOrCreateCachedChildView(e.TextView, this.block.text, { textConfig: p }), c.push.apply(c, d.getNodes()), this.shouldAddExtraNewlineElement() && c.push(i('br'))), this.attributes.length) return c; for (h = e.config.blockAttributes.default.tagName, this.block.isRTL() && (t = { dir: 'rtl' }), r = i({ tagName: h, attributes: t }), s = 0, a = c.length; a > s; s++)u = c[s], r.appendChild(u); return [r] }, s.prototype.createContainerElement = function (e) { let o, r, s, a, u; return o = this.attributes[e], u = n(o).tagName, e === 0 && this.block.isRTL() && (r = { dir: 'rtl' }), o === 'attachmentGallery' && (a = this.block.getBlockBreakPosition(), s = t.attachmentGallery + ' ' + t.attachmentGallery + '--' + a), i({ tagName: u, className: s, attributes: r }) }, s.prototype.shouldAddExtraNewlineElement = function () { return /\n\n$/.test(this.block.toString()) }, s }(e.ObjectView)) }.call(this)), (function () { let t; let n; const i = function (t, e) { function n () { this.constructor = t } for (const i in e)o.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var o = {}.hasOwnProperty; t = e.defer, n = e.makeElement, e.DocumentView = (function (o) { function r () { r.__super__.constructor.apply(this, arguments), this.element = this.options.element, this.elementStore = new e.ElementStore(), this.setDocument(this.object) } let s, a, u; return i(r, o), r.render = function (t) { let e, i; return e = n('div'), i = new this(t, { element: e }), i.render(), i.sync(), e }, r.prototype.setDocument = function (t) { return t.isEqualTo(this.document) ? void 0 : this.document = this.object = t }, r.prototype.render = function () { let t, i, o, r, s, a, u; if (this.childViews = [], this.shadowElement = n('div'), !this.document.isEmpty()) { for (s = e.ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: !0 }), a = [], t = 0, i = s.length; i > t; t++)r = s[t], u = this.findOrCreateCachedChildView(e.BlockView, r), a.push(function () { let t, e, n, i; for (n = u.getNodes(), i = [], t = 0, e = n.length; e > t; t++)o = n[t], i.push(this.shadowElement.appendChild(o)); return i }.call(this)); return a } }, r.prototype.isSynced = function () { return s(this.shadowElement, this.element) }, r.prototype.sync = function () { let t; for (t = this.createDocumentFragmentForSync(); this.element.lastChild;) this.element.removeChild(this.element.lastChild); return this.element.appendChild(t), this.didSync() }, r.prototype.didSync = function () { return this.elementStore.reset(a(this.element)), t(function (t) { return function () { return t.garbageCollectCachedViews() } }(this)) }, r.prototype.createDocumentFragmentForSync = function () { let t, e, n, i, o, r, s, u, c, l; for (e = document.createDocumentFragment(), u = this.shadowElement.childNodes, n = 0, o = u.length; o > n; n++)s = u[n], e.appendChild(s.cloneNode(!0)); for (c = a(e), i = 0, r = c.length; r > i; i++)t = c[i], (l = this.elementStore.remove(t)) && t.parentNode.replaceChild(l, t); return e }, a = function (t) { return t.querySelectorAll('[data-trix-store-key]') }, s = function (t, e) { return u(t.innerHTML) === u(e.innerHTML) }, u = function (t) { return t.replace(/&nbsp;/g, ' ') }, r }(e.ObjectView)) }.call(this)), (function () { let t; let n; let i; let o; let r; const s = function (t, e) { return function () { return t.apply(e, arguments) } }; const a = function (t, e) { function n () { this.constructor = t } for (const i in e)u.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var u = {}.hasOwnProperty; i = e.findClosestElementFromNode, o = e.handleEvent, r = e.innerElementIsActive, n = e.defer, t = e.AttachmentView.attachmentSelector, e.CompositionController = (function (u) { function c (n, i) { this.element = n, this.composition = i, this.didClickAttachment = s(this.didClickAttachment, this), this.didBlur = s(this.didBlur, this), this.didFocus = s(this.didFocus, this), this.documentView = new e.DocumentView(this.composition.document, { element: this.element }), o('focus', { onElement: this.element, withCallback: this.didFocus }), o('blur', { onElement: this.element, withCallback: this.didBlur }), o('click', { onElement: this.element, matchingSelector: 'a[contenteditable=false]', preventDefault: !0 }), o('mousedown', { onElement: this.element, matchingSelector: t, withCallback: this.didClickAttachment }), o('click', { onElement: this.element, matchingSelector: 'a' + t, preventDefault: !0 }) } return a(c, u), c.prototype.didFocus = function () { let t, e, n; return t = (function (t) { return function () { let e; return t.focused ? void 0 : (t.focused = !0, (e = t.delegate) != null && typeof e.compositionControllerDidFocus === 'function' ? e.compositionControllerDidFocus() : void 0) } }(this)), (e = (n = this.blurPromise) != null ? n.then(t) : void 0) != null ? e : t() }, c.prototype.didBlur = function () { return this.blurPromise = new Promise(function (t) { return function (e) { return n(function () { let n; return r(t.element) || (t.focused = null, (n = t.delegate) != null && typeof n.compositionControllerDidBlur === 'function' && n.compositionControllerDidBlur()), t.blurPromise = null, e() }) } }(this)) }, c.prototype.didClickAttachment = function (t, e) { let n, o, r; return n = this.findAttachmentForElement(e), o = i(t.target, { matchingSelector: 'figcaption' }) != null, (r = this.delegate) != null && typeof r.compositionControllerDidSelectAttachment === 'function' ? r.compositionControllerDidSelectAttachment(n, { editCaption: o }) : void 0 }, c.prototype.getSerializableElement = function () { return this.isEditingAttachment() ? this.documentView.shadowElement : this.element }, c.prototype.render = function () { let t, e, n; return this.revision !== this.composition.revision && (this.documentView.setDocument(this.composition.document), this.documentView.render(), this.revision = this.composition.revision), this.canSyncDocumentView() && !this.documentView.isSynced() && ((t = this.delegate) != null && typeof t.compositionControllerWillSyncDocumentView === 'function' && t.compositionControllerWillSyncDocumentView(), this.documentView.sync(), (e = this.delegate) != null && typeof e.compositionControllerDidSyncDocumentView === 'function' && e.compositionControllerDidSyncDocumentView()), (n = this.delegate) != null && typeof n.compositionControllerDidRender === 'function' ? n.compositionControllerDidRender() : void 0 }, c.prototype.rerenderViewForObject = function (t) { return this.invalidateViewForObject(t), this.render() }, c.prototype.invalidateViewForObject = function (t) { return this.documentView.invalidateViewForObject(t) }, c.prototype.isViewCachingEnabled = function () { return this.documentView.isViewCachingEnabled() }, c.prototype.enableViewCaching = function () { return this.documentView.enableViewCaching() }, c.prototype.disableViewCaching = function () { return this.documentView.disableViewCaching() }, c.prototype.refreshViewCache = function () { return this.documentView.garbageCollectCachedViews() }, c.prototype.isEditingAttachment = function () { return this.attachmentEditor != null }, c.prototype.installAttachmentEditorForAttachment = function (t, n) { let i, o, r; if (((r = this.attachmentEditor) != null ? r.attachment : void 0) !== t && (o = this.documentView.findElementForObject(t))) return this.uninstallAttachmentEditor(), i = this.composition.document.getAttachmentPieceForAttachment(t), this.attachmentEditor = new e.AttachmentEditorController(i, o, this.element, n), this.attachmentEditor.delegate = this }, c.prototype.uninstallAttachmentEditor = function () { let t; return (t = this.attachmentEditor) != null ? t.uninstall() : void 0 }, c.prototype.didUninstallAttachmentEditor = function () { return this.attachmentEditor = null, this.render() }, c.prototype.attachmentEditorDidRequestUpdatingAttributesForAttachment = function (t, e) { let n; return (n = this.delegate) != null && typeof n.compositionControllerWillUpdateAttachment === 'function' && n.compositionControllerWillUpdateAttachment(e), this.composition.updateAttributesForAttachment(t, e) }, c.prototype.attachmentEditorDidRequestRemovingAttributeForAttachment = function (t, e) { let n; return (n = this.delegate) != null && typeof n.compositionControllerWillUpdateAttachment === 'function' && n.compositionControllerWillUpdateAttachment(e), this.composition.removeAttributeForAttachment(t, e) }, c.prototype.attachmentEditorDidRequestRemovalOfAttachment = function (t) { let e; return (e = this.delegate) != null && typeof e.compositionControllerDidRequestRemovalOfAttachment === 'function' ? e.compositionControllerDidRequestRemovalOfAttachment(t) : void 0 }, c.prototype.attachmentEditorDidRequestDeselectingAttachment = function (t) { let e; return (e = this.delegate) != null && typeof e.compositionControllerDidRequestDeselectingAttachment === 'function' ? e.compositionControllerDidRequestDeselectingAttachment(t) : void 0 }, c.prototype.canSyncDocumentView = function () { return !this.isEditingAttachment() }, c.prototype.findAttachmentForElement = function (t) { return this.composition.document.getAttachmentById(parseInt(t.dataset.trixId, 10)) }, c }(e.BasicObject)) }.call(this)), (function () { let t; let n; let i; const o = function (t, e) { return function () { return t.apply(e, arguments) } }; const r = function (t, e) { function n () { this.constructor = t } for (const i in e)s.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var s = {}.hasOwnProperty; n = e.handleEvent, i = e.triggerEvent, t = e.findClosestElementFromNode, e.ToolbarController = (function (e) { function s (t) { this.element = t, this.didKeyDownDialogInput = o(this.didKeyDownDialogInput, this), this.didClickDialogButton = o(this.didClickDialogButton, this), this.didClickAttributeButton = o(this.didClickAttributeButton, this), this.didClickActionButton = o(this.didClickActionButton, this), this.attributes = {}, this.actions = {}, this.resetDialogInputs(), n('mousedown', { onElement: this.element, matchingSelector: a, withCallback: this.didClickActionButton }), n('mousedown', { onElement: this.element, matchingSelector: c, withCallback: this.didClickAttributeButton }), n('click', { onElement: this.element, matchingSelector: v, preventDefault: !0 }), n('click', { onElement: this.element, matchingSelector: l, withCallback: this.didClickDialogButton }), n('keydown', { onElement: this.element, matchingSelector: h, withCallback: this.didKeyDownDialogInput }) } let a, u, c, l, h, p, d, f, g, m, v; return r(s, e), c = '[data-trix-attribute]', a = '[data-trix-action]', v = c + ', ' + a, p = '[data-trix-dialog]', u = p + '[data-trix-active]', l = p + ' [data-trix-method]', h = p + ' [data-trix-input]', s.prototype.didClickActionButton = function (t, e) { let n, i, o; return (i = this.delegate) != null && i.toolbarDidClickButton(), t.preventDefault(), n = d(e), this.getDialog(n) ? this.toggleDialog(n) : (o = this.delegate) != null ? o.toolbarDidInvokeAction(n) : void 0 }, s.prototype.didClickAttributeButton = function (t, e) { let n, i, o; return (i = this.delegate) != null && i.toolbarDidClickButton(), t.preventDefault(), n = f(e), this.getDialog(n) ? this.toggleDialog(n) : (o = this.delegate) != null && o.toolbarDidToggleAttribute(n), this.refreshAttributeButtons() }, s.prototype.didClickDialogButton = function (e, n) { let i, o; return i = t(n, { matchingSelector: p }), o = n.getAttribute('data-trix-method'), this[o].call(this, i) }, s.prototype.didKeyDownDialogInput = function (t, e) { let n, i; return t.keyCode === 13 && (t.preventDefault(), n = e.getAttribute('name'), i = this.getDialog(n), this.setAttribute(i)), t.keyCode === 27 ? (t.preventDefault(), this.hideDialog()) : void 0 }, s.prototype.updateActions = function (t) { return this.actions = t, this.refreshActionButtons() }, s.prototype.refreshActionButtons = function () { return this.eachActionButton(function (t) { return function (e, n) { return e.disabled = t.actions[n] === !1 } }(this)) }, s.prototype.eachActionButton = function (t) { let e, n, i, o, r; for (o = this.element.querySelectorAll(a), r = [], n = 0, i = o.length; i > n; n++)e = o[n], r.push(t(e, d(e))); return r }, s.prototype.updateAttributes = function (t) { return this.attributes = t, this.refreshAttributeButtons() }, s.prototype.refreshAttributeButtons = function () { return this.eachAttributeButton(function (t) { return function (e, n) { return e.disabled = t.attributes[n] === !1, t.attributes[n] || t.dialogIsVisible(n) ? (e.setAttribute('data-trix-active', ''), e.classList.add('trix-active')) : (e.removeAttribute('data-trix-active'), e.classList.remove('trix-active')) } }(this)) }, s.prototype.eachAttributeButton = function (t) { let e, n, i, o, r; for (o = this.element.querySelectorAll(c), r = [], n = 0, i = o.length; i > n; n++)e = o[n], r.push(t(e, f(e))); return r }, s.prototype.applyKeyboardCommand = function (t) { let e, n, o, r, s, a, u; for (s = JSON.stringify(t.sort()), u = this.element.querySelectorAll('[data-trix-key]'), r = 0, a = u.length; a > r; r++) if (e = u[r], o = e.getAttribute('data-trix-key').split('+'), n = JSON.stringify(o.sort()), n === s) return i('mousedown', { onElement: e }), !0; return !1 }, s.prototype.dialogIsVisible = function (t) { let e; return (e = this.getDialog(t)) ? e.hasAttribute('data-trix-active') : void 0 }, s.prototype.toggleDialog = function (t) { return this.dialogIsVisible(t) ? this.hideDialog() : this.showDialog(t) }, s.prototype.showDialog = function (t) { let e, n, i, o, r, s, a, u, c, l; for (this.hideDialog(), (a = this.delegate) != null && a.toolbarWillShowDialog(), i = this.getDialog(t), i.setAttribute('data-trix-active', ''), i.classList.add('trix-active'), u = i.querySelectorAll('input[disabled]'), o = 0, s = u.length; s > o; o++)n = u[o], n.removeAttribute('disabled'); return (e = f(i)) && (r = m(i, t)) && (r.value = (c = this.attributes[e]) != null ? c : '', r.select()), (l = this.delegate) != null ? l.toolbarDidShowDialog(t) : void 0 }, s.prototype.setAttribute = function (t) { let e, n, i; return e = f(t), n = m(t, e), n.willValidate && !n.checkValidity() ? (n.setAttribute('data-trix-validate', ''), n.classList.add('trix-validate'), n.focus()) : ((i = this.delegate) != null && i.toolbarDidUpdateAttribute(e, n.value), this.hideDialog()) }, s.prototype.removeAttribute = function (t) { let e, n; return e = f(t), (n = this.delegate) != null && n.toolbarDidRemoveAttribute(e), this.hideDialog() }, s.prototype.hideDialog = function () { let t, e; return (t = this.element.querySelector(u)) ? (t.removeAttribute('data-trix-active'), t.classList.remove('trix-active'), this.resetDialogInputs(), (e = this.delegate) != null ? e.toolbarDidHideDialog(g(t)) : void 0) : void 0 }, s.prototype.resetDialogInputs = function () { let t, e, n, i, o; for (i = this.element.querySelectorAll(h), o = [], t = 0, n = i.length; n > t; t++)e = i[t], e.setAttribute('disabled', 'disabled'), e.removeAttribute('data-trix-validate'), o.push(e.classList.remove('trix-validate')); return o }, s.prototype.getDialog = function (t) { return this.element.querySelector('[data-trix-dialog=' + t + ']') }, m = function (t, e) { return e == null && (e = f(t)), t.querySelector("[data-trix-input][name='" + e + "']") }, d = function (t) { return t.getAttribute('data-trix-action') }, f = function (t) { let e; return (e = t.getAttribute('data-trix-attribute')) != null ? e : t.getAttribute('data-trix-dialog-attribute') }, g = function (t) { return t.getAttribute('data-trix-dialog') }, s }(e.BasicObject)) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.ImagePreloadOperation = (function (e) { function n (t) { this.url = t } return t(n, e), n.prototype.perform = function (t) { let e; return e = new Image(), e.onload = (function (n) { return function () { return e.width = n.width = e.naturalWidth, e.height = n.height = e.naturalHeight, t(!0, e) } }(this)), e.onerror = function () { return t(!1) }, e.src = this.url }, n }(e.Operation)) }.call(this)), (function () { const t = function (t, e) { return function () { return t.apply(e, arguments) } }; const n = function (t, e) { function n () { this.constructor = t } for (const o in e)i.call(e, o) && (t[o] = e[o]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var i = {}.hasOwnProperty; e.Attachment = (function (i) { function o (n) { n == null && (n = {}), this.releaseFile = t(this.releaseFile, this), o.__super__.constructor.apply(this, arguments), this.attributes = e.Hash.box(n), this.didChangeAttributes() } return n(o, i), o.previewablePattern = /^image(\/(gif|png|jpe?g)|$)/, o.attachmentForFile = function (t) { let e, n; return n = this.attributesForFile(t), e = new this(n), e.setFile(t), e }, o.attributesForFile = function (t) { return new e.Hash({ filename: t.name, filesize: t.size, contentType: t.type }) }, o.fromJSON = function (t) { return new this(t) }, o.prototype.getAttribute = function (t) { return this.attributes.get(t) }, o.prototype.hasAttribute = function (t) { return this.attributes.has(t) }, o.prototype.getAttributes = function () { return this.attributes.toObject() }, o.prototype.setAttributes = function (t) { let e, n, i; return t == null && (t = {}), e = this.attributes.merge(t), this.attributes.isEqualTo(e) ? void 0 : (this.attributes = e, this.didChangeAttributes(), (n = this.previewDelegate) != null && typeof n.attachmentDidChangeAttributes === 'function' && n.attachmentDidChangeAttributes(this), (i = this.delegate) != null && typeof i.attachmentDidChangeAttributes === 'function' ? i.attachmentDidChangeAttributes(this) : void 0) }, o.prototype.didChangeAttributes = function () { return this.isPreviewable() ? this.preloadURL() : void 0 }, o.prototype.isPending = function () { return this.file != null && !(this.getURL() || this.getHref()) }, o.prototype.isPreviewable = function () { return this.attributes.has('previewable') ? this.attributes.get('previewable') : this.constructor.previewablePattern.test(this.getContentType()) }, o.prototype.getType = function () { return this.hasContent() ? 'content' : this.isPreviewable() ? 'preview' : 'file' }, o.prototype.getURL = function () { return this.attributes.get('url') }, o.prototype.getHref = function () { return this.attributes.get('href') }, o.prototype.getFilename = function () { let t; return (t = this.attributes.get('filename')) != null ? t : '' }, o.prototype.getFilesize = function () { return this.attributes.get('filesize') }, o.prototype.getFormattedFilesize = function () { let t; return t = this.attributes.get('filesize'), typeof t === 'number' ? e.config.fileSize.formatter(t) : '' }, o.prototype.getExtension = function () { let t; return (t = this.getFilename().match(/\.(\w+)$/)) != null ? t[1].toLowerCase() : void 0 }, o.prototype.getContentType = function () { return this.attributes.get('contentType') }, o.prototype.hasContent = function () { return this.attributes.has('content') }, o.prototype.getContent = function () { return this.attributes.get('content') }, o.prototype.getWidth = function () { return this.attributes.get('width') }, o.prototype.getHeight = function () { return this.attributes.get('height') }, o.prototype.getFile = function () { return this.file }, o.prototype.setFile = function (t) { return this.file = t, this.isPreviewable() ? this.preloadFile() : void 0 }, o.prototype.releaseFile = function () { return this.releasePreloadedFile(), this.file = null }, o.prototype.getUploadProgress = function () { let t; return (t = this.uploadProgress) != null ? t : 0 }, o.prototype.setUploadProgress = function (t) { let e; return this.uploadProgress !== t ? (this.uploadProgress = t, (e = this.uploadProgressDelegate) != null && typeof e.attachmentDidChangeUploadProgress === 'function' ? e.attachmentDidChangeUploadProgress(this) : void 0) : void 0 }, o.prototype.toJSON = function () { return this.getAttributes() }, o.prototype.getCacheKey = function () { return [o.__super__.getCacheKey.apply(this, arguments), this.attributes.getCacheKey(), this.getPreviewURL()].join('/') }, o.prototype.getPreviewURL = function () { return this.previewURL || this.preloadingURL }, o.prototype.setPreviewURL = function (t) { let e, n; return t !== this.getPreviewURL() ? (this.previewURL = t, (e = this.previewDelegate) != null && typeof e.attachmentDidChangeAttributes === 'function' && e.attachmentDidChangeAttributes(this), (n = this.delegate) != null && typeof n.attachmentDidChangePreviewURL === 'function' ? n.attachmentDidChangePreviewURL(this) : void 0) : void 0 }, o.prototype.preloadURL = function () { return this.preload(this.getURL(), this.releaseFile) }, o.prototype.preloadFile = function () { return this.file ? (this.fileObjectURL = URL.createObjectURL(this.file), this.preload(this.fileObjectURL)) : void 0 }, o.prototype.releasePreloadedFile = function () { return this.fileObjectURL ? (URL.revokeObjectURL(this.fileObjectURL), this.fileObjectURL = null) : void 0 }, o.prototype.preload = function (t, n) { let i; return t && t !== this.getPreviewURL() ? (this.preloadingURL = t, i = new e.ImagePreloadOperation(t), i.then(function (e) { return function (i) { let o, r; return r = i.width, o = i.height, e.getWidth() && e.getHeight() || e.setAttributes({ width: r, height: o }), e.preloadingURL = null, e.setPreviewURL(t), typeof n === 'function' ? n() : void 0 } }(this)).catch(function (t) { return function () { return t.preloadingURL = null, typeof n === 'function' ? n() : void 0 } }(this))) : void 0 }, o }(e.Object)) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.Piece = (function (n) { function i (t, n) { n == null && (n = {}), i.__super__.constructor.apply(this, arguments), this.attributes = e.Hash.box(n) } return t(i, n), i.types = {}, i.registerType = function (t, e) { return e.type = t, this.types[t] = e }, i.fromJSON = function (t) { let e; return (e = this.types[t.type]) ? e.fromJSON(t) : void 0 }, i.prototype.copyWithAttributes = function (t) { return new this.constructor(this.getValue(), t) }, i.prototype.copyWithAdditionalAttributes = function (t) { return this.copyWithAttributes(this.attributes.merge(t)) }, i.prototype.copyWithoutAttribute = function (t) { return this.copyWithAttributes(this.attributes.remove(t)) }, i.prototype.copy = function () { return this.copyWithAttributes(this.attributes) }, i.prototype.getAttribute = function (t) { return this.attributes.get(t) }, i.prototype.getAttributesHash = function () { return this.attributes }, i.prototype.getAttributes = function () { return this.attributes.toObject() }, i.prototype.getCommonAttributes = function () { let t, e, n; return (n = pieceList.getPieceAtIndex(0)) ? (t = n.attributes, e = t.getKeys(), pieceList.eachPiece(function (n) { return e = t.getKeysCommonToHash(n.attributes), t = t.slice(e) }), t.toObject()) : {} }, i.prototype.hasAttribute = function (t) { return this.attributes.has(t) }, i.prototype.hasSameStringValueAsPiece = function (t) { return t != null && this.toString() === t.toString() }, i.prototype.hasSameAttributesAsPiece = function (t) { return t != null && (this.attributes === t.attributes || this.attributes.isEqualTo(t.attributes)) }, i.prototype.isBlockBreak = function () { return !1 }, i.prototype.isEqualTo = function (t) { return i.__super__.isEqualTo.apply(this, arguments) || this.hasSameConstructorAs(t) && this.hasSameStringValueAsPiece(t) && this.hasSameAttributesAsPiece(t) }, i.prototype.isEmpty = function () { return this.length === 0 }, i.prototype.isSerializable = function () { return !0 }, i.prototype.toJSON = function () { return { type: this.constructor.type, attributes: this.getAttributes() } }, i.prototype.contentsForInspection = function () { return { type: this.constructor.type, attributes: this.attributes.inspect() } }, i.prototype.canBeGrouped = function () { return this.hasAttribute('href') }, i.prototype.canBeGroupedWith = function (t) { return this.getAttribute('href') === t.getAttribute('href') }, i.prototype.getLength = function () { return this.length }, i.prototype.canBeConsolidatedWith = function () { return !1 }, i }(e.Object)) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.Piece.registerType('attachment', e.AttachmentPiece = (function (n) { function i (t) { this.attachment = t, i.__super__.constructor.apply(this, arguments), this.length = 1, this.ensureAttachmentExclusivelyHasAttribute('href'), this.attachment.hasContent() || this.removeProhibitedAttributes() } return t(i, n), i.fromJSON = function (t) { return new this(e.Attachment.fromJSON(t.attachment), t.attributes) }, i.permittedAttributes = ['caption', 'presentation'], i.prototype.ensureAttachmentExclusivelyHasAttribute = function (t) { return this.hasAttribute(t) ? (this.attachment.hasAttribute(t) || this.attachment.setAttributes(this.attributes.slice(t)), this.attributes = this.attributes.remove(t)) : void 0 }, i.prototype.removeProhibitedAttributes = function () { let t; return t = this.attributes.slice(this.constructor.permittedAttributes), t.isEqualTo(this.attributes) ? void 0 : this.attributes = t }, i.prototype.getValue = function () { return this.attachment }, i.prototype.isSerializable = function () { return !this.attachment.isPending() }, i.prototype.getCaption = function () { let t; return (t = this.attributes.get('caption')) != null ? t : '' }, i.prototype.isEqualTo = function (t) { let e; return i.__super__.isEqualTo.apply(this, arguments) && this.attachment.id === (t != null && (e = t.attachment) != null ? e.id : void 0) }, i.prototype.toString = function () { return e.OBJECT_REPLACEMENT_CHARACTER }, i.prototype.toJSON = function () { let t; return t = i.__super__.toJSON.apply(this, arguments), t.attachment = this.attachment, t }, i.prototype.getCacheKey = function () { return [i.__super__.getCacheKey.apply(this, arguments), this.attachment.getCacheKey()].join('/') }, i.prototype.toConsole = function () { return JSON.stringify(this.toString()) }, i }(e.Piece))) }.call(this)), (function () { let t; const n = function (t, e) { function n () { this.constructor = t } for (const o in e)i.call(e, o) && (t[o] = e[o]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var i = {}.hasOwnProperty; t = e.normalizeNewlines, e.Piece.registerType('string', e.StringPiece = (function (e) { function i (e) { i.__super__.constructor.apply(this, arguments), this.string = t(e), this.length = this.string.length } return n(i, e), i.fromJSON = function (t) { return new this(t.string, t.attributes) }, i.prototype.getValue = function () { return this.string }, i.prototype.toString = function () { return this.string.toString() }, i.prototype.isBlockBreak = function () { return this.toString() === '\n' && this.getAttribute('blockBreak') === !0 }, i.prototype.toJSON = function () { let t; return t = i.__super__.toJSON.apply(this, arguments), t.string = this.string, t }, i.prototype.canBeConsolidatedWith = function (t) { return t != null && this.hasSameConstructorAs(t) && this.hasSameAttributesAsPiece(t) }, i.prototype.consolidateWith = function (t) { return new this.constructor(this.toString() + t.toString(), this.attributes) }, i.prototype.splitAtOffset = function (t) { let e, n; return t === 0 ? (e = null, n = this) : t === this.length ? (e = this, n = null) : (e = new this.constructor(this.string.slice(0, t), this.attributes), n = new this.constructor(this.string.slice(t), this.attributes)), [e, n] }, i.prototype.toConsole = function () { let t; return t = this.string, t.length > 15 && (t = t.slice(0, 14) + '\u2026'), JSON.stringify(t.toString()) }, i }(e.Piece))) }.call(this)), (function () { let t; const n = function (t, e) { function n () { this.constructor = t } for (const o in e)i.call(e, o) && (t[o] = e[o]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var i = {}.hasOwnProperty; const o = [].slice; t = e.spliceArray, e.SplittableList = (function (e) { function i (t) { t == null && (t = []), i.__super__.constructor.apply(this, arguments), this.objects = t.slice(0), this.length = this.objects.length } let r, s, a; return n(i, e), i.box = function (t) { return t instanceof this ? t : new this(t) }, i.prototype.indexOf = function (t) { return this.objects.indexOf(t) }, i.prototype.splice = function () { let e; return e = arguments.length >= 1 ? o.call(arguments, 0) : [], new this.constructor(t.apply(null, [this.objects].concat(o.call(e)))) }, i.prototype.eachObject = function (t) { let e, n, i, o, r, s; for (r = this.objects, s = [], n = e = 0, i = r.length; i > e; n = ++e)o = r[n], s.push(t(o, n)); return s }, i.prototype.insertObjectAtIndex = function (t, e) { return this.splice(e, 0, t) }, i.prototype.insertSplittableListAtIndex = function (t, e) { return this.splice.apply(this, [e, 0].concat(o.call(t.objects))) }, i.prototype.insertSplittableListAtPosition = function (t, e) { let n, i, o; return o = this.splitObjectAtPosition(e), i = o[0], n = o[1], new this.constructor(i).insertSplittableListAtIndex(t, n) }, i.prototype.editObjectAtIndex = function (t, e) { return this.replaceObjectAtIndex(e(this.objects[t]), t) }, i.prototype.replaceObjectAtIndex = function (t, e) { return this.splice(e, 1, t) }, i.prototype.removeObjectAtIndex = function (t) { return this.splice(t, 1) }, i.prototype.getObjectAtIndex = function (t) { return this.objects[t] }, i.prototype.getSplittableListInRange = function (t) { let e, n, i, o; return i = this.splitObjectsAtRange(t), n = i[0], e = i[1], o = i[2], new this.constructor(n.slice(e, o + 1)) }, i.prototype.selectSplittableList = function (t) { let e, n; return n = (function () { let n, i, o, r; for (o = this.objects, r = [], n = 0, i = o.length; i > n; n++)e = o[n], t(e) && r.push(e); return r }.call(this)), new this.constructor(n) }, i.prototype.removeObjectsInRange = function (t) { let e, n, i, o; return i = this.splitObjectsAtRange(t), n = i[0], e = i[1], o = i[2], new this.constructor(n).splice(e, o - e + 1) }, i.prototype.transformObjectsInRange = function (t, e) { let n, i, o, r, s, a, u; return s = this.splitObjectsAtRange(t), r = s[0], i = s[1], a = s[2], u = (function () { let t, s, u; for (u = [], n = t = 0, s = r.length; s > t; n = ++t)o = r[n], u.push(n >= i && a >= n ? e(o) : o); return u }()), new this.constructor(u) }, i.prototype.splitObjectsAtRange = function (t) { let e, n, i, o, s, u; return o = this.splitObjectAtPosition(a(t)), n = o[0], e = o[1], i = o[2], s = new this.constructor(n).splitObjectAtPosition(r(t) + i), n = s[0], u = s[1], [n, e, u - 1] }, i.prototype.getObjectAtPosition = function (t) { let e, n, i; return i = this.findIndexAndOffsetAtPosition(t), e = i.index, n = i.offset, this.objects[e] }, i.prototype.splitObjectAtPosition = function (t) { let e, n, i, o, r, s, a, u, c, l; return s = this.findIndexAndOffsetAtPosition(t), e = s.index, r = s.offset, o = this.objects.slice(0), e != null ? r === 0 ? (c = e, l = 0) : (i = this.getObjectAtIndex(e), a = i.splitAtOffset(r), n = a[0], u = a[1], o.splice(e, 1, n, u), c = e + 1, l = n.getLength() - r) : (c = o.length, l = 0), [o, c, l] }, i.prototype.consolidate = function () { let t, e, n, i, o, r; for (i = [], o = this.objects[0], r = this.objects.slice(1), t = 0, e = r.length; e > t; t++)n = r[t], (typeof o.canBeConsolidatedWith === 'function' ? o.canBeConsolidatedWith(n) : void 0) ? o = o.consolidateWith(n) : (i.push(o), o = n); return o != null && i.push(o), new this.constructor(i) }, i.prototype.consolidateFromIndexToIndex = function (t, e) { let n, i, r; return i = this.objects.slice(0), r = i.slice(t, e + 1), n = new this.constructor(r).consolidate().toArray(), this.splice.apply(this, [t, r.length].concat(o.call(n))) }, i.prototype.findIndexAndOffsetAtPosition = function (t) { let e, n, i, o, r, s, a; for (e = 0, a = this.objects, i = n = 0, o = a.length; o > n; i = ++n) { if (s = a[i], r = e + s.getLength(), t >= e && r > t) return { index: i, offset: t - e }; e = r } return { index: null, offset: null } }, i.prototype.findPositionAtIndexAndOffset = function (t, e) { let n, i, o, r, s, a; for (s = 0, a = this.objects, n = i = 0, o = a.length; o > i; n = ++i) if (r = a[n], t > n)s += r.getLength(); else if (n === t) { s += e; break } return s }, i.prototype.getEndPosition = function () { let t, e; return this.endPosition != null ? this.endPosition : this.endPosition = (function () { let n, i, o; for (e = 0, o = this.objects, n = 0, i = o.length; i > n; n++)t = o[n], e += t.getLength(); return e }.call(this)) }, i.prototype.toString = function () { return this.objects.join('') }, i.prototype.toArray = function () { return this.objects.slice(0) }, i.prototype.toJSON = function () { return this.toArray() }, i.prototype.isEqualTo = function (t) { return i.__super__.isEqualTo.apply(this, arguments) || s(this.objects, t != null ? t.objects : void 0) }, s = function (t, e) { let n, i, o, r, s; if (e == null && (e = []), t.length !== e.length) return !1; for (s = !0, i = n = 0, o = t.length; o > n; i = ++n)r = t[i], s && !r.isEqualTo(e[i]) && (s = !1); return s }, i.prototype.contentsForInspection = function () { let t; return { objects: '[' + (function () { let e, n, i, o; for (i = this.objects, o = [], e = 0, n = i.length; n > e; e++)t = i[e], o.push(t.inspect()); return o }.call(this)).join(', ') + ']' } }, a = function (t) { return t[0] }, r = function (t) { return t[1] }, i }(e.Object)) }.call(this)), (function () {
      const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.Text = (function (n) {
        function i (t) { let n; t == null && (t = []), i.__super__.constructor.apply(this, arguments), this.pieceList = new e.SplittableList(function () { let e, i, o; for (o = [], e = 0, i = t.length; i > e; e++)n = t[e], n.isEmpty() || o.push(n); return o }()) } return t(i, n), i.textForAttachmentWithAttributes = function (t, n) { let i; return i = new e.AttachmentPiece(t, n), new this([i]) }, i.textForStringWithAttributes = function (t, n) { let i; return i = new e.StringPiece(t, n), new this([i]) }, i.fromJSON = function (t) { let n, i; return i = (function () { let i, o, r; for (r = [], i = 0, o = t.length; o > i; i++)n = t[i], r.push(e.Piece.fromJSON(n)); return r }()), new this(i) }, i.prototype.copy = function () { return this.copyWithPieceList(this.pieceList) }, i.prototype.copyWithPieceList = function (t) { return new this.constructor(t.consolidate().toArray()) }, i.prototype.copyUsingObjectMap = function (t) { let e, n; return n = (function () { let n, i, o, r, s; for (o = this.getPieces(), s = [], n = 0, i = o.length; i > n; n++)e = o[n], s.push((r = t.find(e)) != null ? r : e); return s }.call(this)), new this.constructor(n) }, i.prototype.appendText = function (t) {
          return this.insertTextAtPosition(t, this.getLength())
        }, i.prototype.insertTextAtPosition = function (t, e) { return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(t.pieceList, e)) }, i.prototype.removeTextAtRange = function (t) { return this.copyWithPieceList(this.pieceList.removeObjectsInRange(t)) }, i.prototype.replaceTextAtRange = function (t, e) { return this.removeTextAtRange(e).insertTextAtPosition(t, e[0]) }, i.prototype.moveTextFromRangeToPosition = function (t, e) { let n, i; if (!(t[0] <= e && e <= t[1])) return i = this.getTextAtRange(t), n = i.getLength(), t[0] < e && (e -= n), this.removeTextAtRange(t).insertTextAtPosition(i, e) }, i.prototype.addAttributeAtRange = function (t, e, n) { let i; return i = {}, i[t] = e, this.addAttributesAtRange(i, n) }, i.prototype.addAttributesAtRange = function (t, e) { return this.copyWithPieceList(this.pieceList.transformObjectsInRange(e, function (e) { return e.copyWithAdditionalAttributes(t) })) }, i.prototype.removeAttributeAtRange = function (t, e) { return this.copyWithPieceList(this.pieceList.transformObjectsInRange(e, function (e) { return e.copyWithoutAttribute(t) })) }, i.prototype.setAttributesAtRange = function (t, e) { return this.copyWithPieceList(this.pieceList.transformObjectsInRange(e, function (e) { return e.copyWithAttributes(t) })) }, i.prototype.getAttributesAtPosition = function (t) { let e, n; return (e = (n = this.pieceList.getObjectAtPosition(t)) != null ? n.getAttributes() : void 0) != null ? e : {} }, i.prototype.getCommonAttributes = function () { let t, n; return t = (function () { let t, e, i, o; for (i = this.pieceList.toArray(), o = [], t = 0, e = i.length; e > t; t++)n = i[t], o.push(n.getAttributes()); return o }.call(this)), e.Hash.fromCommonAttributesOfObjects(t).toObject() }, i.prototype.getCommonAttributesAtRange = function (t) { let e; return (e = this.getTextAtRange(t).getCommonAttributes()) != null ? e : {} }, i.prototype.getExpandedRangeForAttributeAtOffset = function (t, e) { let n, i, o; for (n = o = e, i = this.getLength(); n > 0 && this.getCommonAttributesAtRange([n - 1, o])[t];)n--; for (;i > o && this.getCommonAttributesAtRange([e, o + 1])[t];)o++; return [n, o] }, i.prototype.getTextAtRange = function (t) { return this.copyWithPieceList(this.pieceList.getSplittableListInRange(t)) }, i.prototype.getStringAtRange = function (t) { return this.pieceList.getSplittableListInRange(t).toString() }, i.prototype.getStringAtPosition = function (t) { return this.getStringAtRange([t, t + 1]) }, i.prototype.startsWithString = function (t) { return this.getStringAtRange([0, t.length]) === t }, i.prototype.endsWithString = function (t) { let e; return e = this.getLength(), this.getStringAtRange([e - t.length, e]) === t }, i.prototype.getAttachmentPieces = function () { let t, e, n, i, o; for (i = this.pieceList.toArray(), o = [], t = 0, e = i.length; e > t; t++)n = i[t], n.attachment != null && o.push(n); return o }, i.prototype.getAttachments = function () { let t, e, n, i, o; for (i = this.getAttachmentPieces(), o = [], t = 0, e = i.length; e > t; t++)n = i[t], o.push(n.attachment); return o }, i.prototype.getAttachmentAndPositionById = function (t) { let e, n, i, o, r, s; for (o = 0, r = this.pieceList.toArray(), e = 0, n = r.length; n > e; e++) { if (i = r[e], ((s = i.attachment) != null ? s.id : void 0) === t) return { attachment: i.attachment, position: o }; o += i.length } return { attachment: null, position: null } }, i.prototype.getAttachmentById = function (t) { let e, n, i; return i = this.getAttachmentAndPositionById(t), e = i.attachment, n = i.position, e }, i.prototype.getRangeOfAttachment = function (t) { let e, n; return n = this.getAttachmentAndPositionById(t.id), t = n.attachment, e = n.position, t != null ? [e, e + 1] : void 0 }, i.prototype.updateAttributesForAttachment = function (t, e) { let n; return (n = this.getRangeOfAttachment(e)) ? this.addAttributesAtRange(t, n) : this }, i.prototype.getLength = function () { return this.pieceList.getEndPosition() }, i.prototype.isEmpty = function () { return this.getLength() === 0 }, i.prototype.isEqualTo = function (t) { let e; return i.__super__.isEqualTo.apply(this, arguments) || (t != null && (e = t.pieceList) != null ? e.isEqualTo(this.pieceList) : void 0) }, i.prototype.isBlockBreak = function () { return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak() }, i.prototype.eachPiece = function (t) { return this.pieceList.eachObject(t) }, i.prototype.getPieces = function () { return this.pieceList.toArray() }, i.prototype.getPieceAtPosition = function (t) { return this.pieceList.getObjectAtPosition(t) }, i.prototype.contentsForInspection = function () { return { pieceList: this.pieceList.inspect() } }, i.prototype.toSerializableText = function () { let t; return t = this.pieceList.selectSplittableList(function (t) { return t.isSerializable() }), this.copyWithPieceList(t) }, i.prototype.toString = function () { return this.pieceList.toString() }, i.prototype.toJSON = function () { return this.pieceList.toJSON() }, i.prototype.toConsole = function () { let t; return JSON.stringify(function () { let e, n, i, o; for (i = this.pieceList.toArray(), o = [], e = 0, n = i.length; n > e; e++)t = i[e], o.push(JSON.parse(t.toConsole())); return o }.call(this)) }, i.prototype.getDirection = function () { return e.getDirection(this.toString()) }, i.prototype.isRTL = function () { return this.getDirection() === 'rtl' }, i
      }(e.Object))
    }.call(this)), (function () { let t; let n; let i; let o; let r; const s = function (t, e) { function n () { this.constructor = t } for (const i in e)a.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var a = {}.hasOwnProperty; const u = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; const c = [].slice; t = e.arraysAreEqual, r = e.spliceArray, i = e.getBlockConfig, n = e.getBlockAttributeNames, o = e.getListAttributeNames, e.Block = (function (n) { function a (t, n) { t == null && (t = new e.Text()), n == null && (n = []), a.__super__.constructor.apply(this, arguments), this.text = h(t), this.attributes = n } let l, h, p, d, f, g, m, v, y; return s(a, n), a.fromJSON = function (t) { let n; return n = e.Text.fromJSON(t.text), new this(n, t.attributes) }, a.prototype.isEmpty = function () { return this.text.isBlockBreak() }, a.prototype.isEqualTo = function (e) { return a.__super__.isEqualTo.apply(this, arguments) || this.text.isEqualTo(e != null ? e.text : void 0) && t(this.attributes, e != null ? e.attributes : void 0) }, a.prototype.copyWithText = function (t) { return new this.constructor(t, this.attributes) }, a.prototype.copyWithoutText = function () { return this.copyWithText(null) }, a.prototype.copyWithAttributes = function (t) { return new this.constructor(this.text, t) }, a.prototype.copyWithoutAttributes = function () { return this.copyWithAttributes(null) }, a.prototype.copyUsingObjectMap = function (t) { let e; return this.copyWithText((e = t.find(this.text)) ? e : this.text.copyUsingObjectMap(t)) }, a.prototype.addAttribute = function (t) { let e; return e = this.attributes.concat(d(t)), this.copyWithAttributes(e) }, a.prototype.removeAttribute = function (t) { let e, n; return n = i(t).listAttribute, e = g(g(this.attributes, t), n), this.copyWithAttributes(e) }, a.prototype.removeLastAttribute = function () { return this.removeAttribute(this.getLastAttribute()) }, a.prototype.getLastAttribute = function () { return f(this.attributes) }, a.prototype.getAttributes = function () { return this.attributes.slice(0) }, a.prototype.getAttributeLevel = function () { return this.attributes.length }, a.prototype.getAttributeAtLevel = function (t) { return this.attributes[t - 1] }, a.prototype.hasAttribute = function (t) { return u.call(this.attributes, t) >= 0 }, a.prototype.hasAttributes = function () { return this.getAttributeLevel() > 0 }, a.prototype.getLastNestableAttribute = function () { return f(this.getNestableAttributes()) }, a.prototype.getNestableAttributes = function () { let t, e, n, o, r; for (o = this.attributes, r = [], e = 0, n = o.length; n > e; e++)t = o[e], i(t).nestable && r.push(t); return r }, a.prototype.getNestingLevel = function () { return this.getNestableAttributes().length }, a.prototype.decreaseNestingLevel = function () { let t; return (t = this.getLastNestableAttribute()) ? this.removeAttribute(t) : this }, a.prototype.increaseNestingLevel = function () { let t, e, n; return (t = this.getLastNestableAttribute()) ? (n = this.attributes.lastIndexOf(t), e = r.apply(null, [this.attributes, n + 1, 0].concat(c.call(d(t)))), this.copyWithAttributes(e)) : this }, a.prototype.getListItemAttributes = function () { let t, e, n, o, r; for (o = this.attributes, r = [], e = 0, n = o.length; n > e; e++)t = o[e], i(t).listAttribute && r.push(t); return r }, a.prototype.isListItem = function () { let t; return (t = i(this.getLastAttribute())) != null ? t.listAttribute : void 0 }, a.prototype.isTerminalBlock = function () { let t; return (t = i(this.getLastAttribute())) != null ? t.terminal : void 0 }, a.prototype.breaksOnReturn = function () { let t; return (t = i(this.getLastAttribute())) != null ? t.breakOnReturn : void 0 }, a.prototype.findLineBreakInDirectionFromPosition = function (t, e) { let n, i; return i = this.toString(), n = (function () { switch (t) { case 'forward':return i.indexOf('\n', e); case 'backward':return i.slice(0, e).lastIndexOf('\n') } }()), n !== -1 ? n : void 0 }, a.prototype.contentsForInspection = function () { return { text: this.text.inspect(), attributes: this.attributes } }, a.prototype.toString = function () { return this.text.toString() }, a.prototype.toJSON = function () { return { text: this.text, attributes: this.attributes } }, a.prototype.getDirection = function () { return this.text.getDirection() }, a.prototype.isRTL = function () { return this.text.isRTL() }, a.prototype.getLength = function () { return this.text.getLength() }, a.prototype.canBeConsolidatedWith = function (t) { return !this.hasAttributes() && !t.hasAttributes() && this.getDirection() === t.getDirection() }, a.prototype.consolidateWith = function (t) { let n, i; return n = e.Text.textForStringWithAttributes('\n'), i = this.getTextWithoutBlockBreak().appendText(n), this.copyWithText(i.appendText(t.text)) }, a.prototype.splitAtOffset = function (t) { let e, n; return t === 0 ? (e = null, n = this) : t === this.getLength() ? (e = this, n = null) : (e = this.copyWithText(this.text.getTextAtRange([0, t])), n = this.copyWithText(this.text.getTextAtRange([t, this.getLength()]))), [e, n] }, a.prototype.getBlockBreakPosition = function () { return this.text.getLength() - 1 }, a.prototype.getTextWithoutBlockBreak = function () { return m(this.text) ? this.text.getTextAtRange([0, this.getBlockBreakPosition()]) : this.text.copy() }, a.prototype.canBeGrouped = function (t) { return this.attributes[t] }, a.prototype.canBeGroupedWith = function (t, e) { let n, r, s, a; return s = t.getAttributes(), r = s[e], n = this.attributes[e], !(n !== r || i(n).group === !1 && (a = s[e + 1], u.call(o(), a) < 0) || this.getDirection() !== t.getDirection() && !t.isEmpty()) }, h = function (t) { return t = y(t), t = l(t) }, y = function (t) { let n, i, o, r, s, a; return r = !1, a = t.getPieces(), i = a.length >= 2 ? c.call(a, 0, n = a.length - 1) : (n = 0, []), o = a[n++], o == null ? t : (i = (function () { let t, e, n; for (n = [], t = 0, e = i.length; e > t; t++)s = i[t], s.isBlockBreak() ? (r = !0, n.push(v(s))) : n.push(s); return n }()), r ? new e.Text(c.call(i).concat([o])) : t) }, p = e.Text.textForStringWithAttributes('\n', { blockBreak: !0 }), l = function (t) { return m(t) ? t : t.appendText(p) }, m = function (t) { let e, n; return n = t.getLength(), n === 0 ? !1 : (e = t.getTextAtRange([n - 1, n]), e.isBlockBreak()) }, v = function (t) { return t.copyWithoutAttribute('blockBreak') }, d = function (t) { let e; return e = i(t).listAttribute, e != null ? [e, t] : [t] }, f = function (t) { return t.slice(-1)[0] }, g = function (t, e) { let n; return n = t.lastIndexOf(e), n === -1 ? t : r(t, n, 1) }, a }(e.Object)) }.call(this)), (function () { let t; let n; let i; const o = function (t, e) { function n () { this.constructor = t } for (const i in e)r.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var r = {}.hasOwnProperty; const s = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; const a = [].slice; n = e.tagName, i = e.walkTree, t = e.nodeIsAttachmentElement, e.HTMLSanitizer = (function (r) { function u (t, e) { let n; n = e != null ? e : {}, this.allowedAttributes = n.allowedAttributes, this.forbiddenProtocols = n.forbiddenProtocols, this.forbiddenElements = n.forbiddenElements, this.allowedAttributes == null && (this.allowedAttributes = c), this.forbiddenProtocols == null && (this.forbiddenProtocols = h), this.forbiddenElements == null && (this.forbiddenElements = l), this.body = p(t) } let c, l, h, p; return o(u, r), c = 'style href src width height class'.split(' '), h = 'javascript:'.split(' '), l = 'script iframe'.split(' '), u.sanitize = function (t, e) { let n; return n = new this(t, e), n.sanitize(), n }, u.prototype.sanitize = function () { return this.sanitizeElements(), this.normalizeListElementNesting() }, u.prototype.getHTML = function () { return this.body.innerHTML }, u.prototype.getBody = function () { return this.body }, u.prototype.sanitizeElements = function () { let t, n, o, r, s; for (s = i(this.body), r = []; s.nextNode();) switch (o = s.currentNode, o.nodeType) { case Node.ELEMENT_NODE:this.elementIsRemovable(o) ? r.push(o) : this.sanitizeElement(o); break; case Node.COMMENT_NODE:r.push(o) } for (t = 0, n = r.length; n > t; t++)o = r[t], e.removeNode(o); return this.body }, u.prototype.sanitizeElement = function (t) { let e, n, i, o, r; for (t.hasAttribute('href') && (o = t.protocol, s.call(this.forbiddenProtocols, o) >= 0 && t.removeAttribute('href')), r = a.call(t.attributes), e = 0, n = r.length; n > e; e++)i = r[e].name, s.call(this.allowedAttributes, i) >= 0 || i.indexOf('data-trix') === 0 || t.removeAttribute(i); return t }, u.prototype.normalizeListElementNesting = function () { let t, e, i, o, r; for (r = a.call(this.body.querySelectorAll('ul,ol')), t = 0, e = r.length; e > t; t++)i = r[t], (o = i.previousElementSibling) && n(o) === 'li' && o.appendChild(i); return this.body }, u.prototype.elementIsRemovable = function (t) { return (t != null ? t.nodeType : void 0) === Node.ELEMENT_NODE ? this.elementIsForbidden(t) || this.elementIsntSerializable(t) : void 0 }, u.prototype.elementIsForbidden = function (t) { let e; return e = n(t), s.call(this.forbiddenElements, e) >= 0 }, u.prototype.elementIsntSerializable = function (e) { return e.getAttribute('data-trix-serialize') === 'false' && !t(e) }, p = function (t) { let e, n, i, o, r; for (t == null && (t = ''), t = t.replace(/<\/html[^>]*>[^]*$/i, '</html>'), e = document.implementation.createHTMLDocument(''), e.documentElement.innerHTML = t, r = e.head.querySelectorAll('style'), i = 0, o = r.length; o > i; i++)n = r[i], e.body.appendChild(n); return e.body }, u }(e.BasicObject)) }.call(this)), (function () { let t; let n; let i; let o; let r; let s; let a; let u; let c; let l; let h; const p = function (t, e) { function n () { this.constructor = t } for (const i in e)d.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var d = {}.hasOwnProperty; const f = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; t = e.arraysAreEqual, s = e.makeElement, l = e.tagName, r = e.getBlockTagNames, h = e.walkTree, o = e.findClosestElementFromNode, i = e.elementContainsNode, a = e.nodeIsAttachmentElement, u = e.normalizeSpaces, n = e.breakableWhitespacePattern, c = e.squishBreakableWhitespace, e.HTMLParser = (function (d) { function g (t, e) { this.html = t, this.referenceElement = (e != null ? e : {}).referenceElement, this.blocks = [], this.blockElements = [], this.processedElements = [] } let m, v, y, b, A, C, x, w, E, S, R, k; return p(g, d), g.parse = function (t, e) { let n; return n = new this(t, e), n.parse(), n }, g.prototype.getDocument = function () { return e.Document.fromJSON(this.blocks) }, g.prototype.parse = function () { let t, n; try { for (this.createHiddenContainer(), t = e.HTMLSanitizer.sanitize(this.html).getHTML(), this.containerElement.innerHTML = t, n = h(this.containerElement, { usingFilter: x }); n.nextNode();) this.processNode(n.currentNode); return this.translateBlockElementMarginsToNewlines() } finally { this.removeHiddenContainer() } }, g.prototype.createHiddenContainer = function () { return this.referenceElement ? (this.containerElement = this.referenceElement.cloneNode(!1), this.containerElement.removeAttribute('id'), this.containerElement.setAttribute('data-trix-internal', ''), this.containerElement.style.display = 'none', this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)) : (this.containerElement = s({ tagName: 'div', style: { display: 'none' } }), document.body.appendChild(this.containerElement)) }, g.prototype.removeHiddenContainer = function () { return e.removeNode(this.containerElement) }, x = function (t) { return l(t) === 'style' ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT }, g.prototype.processNode = function (t) { switch (t.nodeType) { case Node.TEXT_NODE:if (!this.isInsignificantTextNode(t)) return this.appendBlockForTextNode(t), this.processTextNode(t); break; case Node.ELEMENT_NODE:return this.appendBlockForElement(t), this.processElement(t) } }, g.prototype.appendBlockForTextNode = function (e) { let n, i, o; return i = e.parentNode, i === this.currentBlockElement && this.isBlockElement(e.previousSibling) ? this.appendStringWithAttributes('\n') : i !== this.containerElement && !this.isBlockElement(i) || (n = this.getBlockAttributes(i), t(n, (o = this.currentBlock) != null ? o.attributes : void 0)) ? void 0 : (this.currentBlock = this.appendBlockForAttributesWithElement(n, i), this.currentBlockElement = i) }, g.prototype.appendBlockForElement = function (e) { let n, o, r, s; if (r = this.isBlockElement(e), o = i(this.currentBlockElement, e), r && !this.isBlockElement(e.firstChild)) { if ((!this.isInsignificantTextNode(e.firstChild) || !this.isBlockElement(e.firstElementChild)) && (n = this.getBlockAttributes(e), e.firstChild)) return o && t(n, this.currentBlock.attributes) ? this.appendStringWithAttributes('\n') : (this.currentBlock = this.appendBlockForAttributesWithElement(n, e), this.currentBlockElement = e) } else if (this.currentBlockElement && !o && !r) return (s = this.findParentBlockElement(e)) ? this.appendBlockForElement(s) : (this.currentBlock = this.appendEmptyBlock(), this.currentBlockElement = null) }, g.prototype.findParentBlockElement = function (t) { let e; for (e = t.parentElement; e && e !== this.containerElement;) { if (this.isBlockElement(e) && f.call(this.blockElements, e) >= 0) return e; e = e.parentElement } return null }, g.prototype.processTextNode = function (t) { let e, n; return n = t.data, v(t.parentNode) || (n = c(n), R((e = t.previousSibling) != null ? e.textContent : void 0) && (n = A(n))), this.appendStringWithAttributes(n, this.getTextAttributes(t.parentNode)) }, g.prototype.processElement = function (t) { let e, n, i, o, r; if (a(t)) return e = w(t, 'attachment'), Object.keys(e).length && (o = this.getTextAttributes(t), this.appendAttachmentWithAttributes(e, o), t.innerHTML = ''), this.processedElements.push(t); switch (l(t)) { case 'br':return this.isExtraBR(t) || this.isBlockElement(t.nextSibling) || this.appendStringWithAttributes('\n', this.getTextAttributes(t)), this.processedElements.push(t); case 'img':e = { url: t.getAttribute('src'), contentType: 'image' }, i = b(t); for (n in i)r = i[n], e[n] = r; return this.appendAttachmentWithAttributes(e, this.getTextAttributes(t)), this.processedElements.push(t); case 'tr':if (t.parentNode.firstChild !== t) return this.appendStringWithAttributes('\n'); break; case 'td':if (t.parentNode.firstChild !== t) return this.appendStringWithAttributes(' | ') } }, g.prototype.appendBlockForAttributesWithElement = function (t, e) { let n; return this.blockElements.push(e), n = m(t), this.blocks.push(n), n }, g.prototype.appendEmptyBlock = function () { return this.appendBlockForAttributesWithElement([], null) }, g.prototype.appendStringWithAttributes = function (t, e) { return this.appendPiece(S(t, e)) }, g.prototype.appendAttachmentWithAttributes = function (t, e) { return this.appendPiece(E(t, e)) }, g.prototype.appendPiece = function (t) { return this.blocks.length === 0 && this.appendEmptyBlock(), this.blocks[this.blocks.length - 1].text.push(t) }, g.prototype.appendStringToTextAtIndex = function (t, e) { let n, i; return i = this.blocks[e].text, n = i[i.length - 1], (n != null ? n.type : void 0) === 'string' ? n.string += t : i.push(S(t)) }, g.prototype.prependStringToTextAtIndex = function (t, e) { let n, i; return i = this.blocks[e].text, n = i[0], (n != null ? n.type : void 0) === 'string' ? n.string = t + n.string : i.unshift(S(t)) }, S = function (t, e) { let n; return e == null && (e = {}), n = 'string', t = u(t), { string: t, attributes: e, type: n } }, E = function (t, e) { let n; return e == null && (e = {}), n = 'attachment', { attachment: t, attributes: e, type: n } }, m = function (t) { let e; return t == null && (t = {}), e = [], { text: e, attributes: t } }, g.prototype.getTextAttributes = function (t) { let n, i, r, s, u, c, l, h, p, d, f, g; r = {}, p = e.config.textAttributes; for (n in p) if (u = p[n], u.tagName && o(t, { matchingSelector: u.tagName, untilNode: this.containerElement }))r[n] = !0; else if (u.parser) { if (g = u.parser(t)) { for (i = !1, d = this.findBlockElementAncestors(t), c = 0, h = d.length; h > c; c++) if (s = d[c], u.parser(s) === g) { i = !0; break }i || (r[n] = g) } } else u.styleProperty && (g = t.style[u.styleProperty]) && (r[n] = g); if (a(t)) { f = w(t, 'attributes'); for (l in f)g = f[l], r[l] = g } return r }, g.prototype.getBlockAttributes = function (t) { let n, i, o, r; for (i = []; t && t !== this.containerElement;) { r = e.config.blockAttributes; for (n in r)o = r[n], o.parse !== !1 && l(t) === o.tagName && ((typeof o.test === 'function' ? o.test(t) : void 0) || !o.test) && (i.push(n), o.listAttribute && i.push(o.listAttribute)); t = t.parentNode } return i.reverse() }, g.prototype.findBlockElementAncestors = function (t) { let e, n; for (e = []; t && t !== this.containerElement;)n = l(t), f.call(r(), n) >= 0 && e.push(t), t = t.parentNode; return e }, w = function (t, e) { try { return JSON.parse(t.getAttribute('data-trix-' + e)) } catch (n) { return {} } }, b = function (t) { let e, n, i; return i = t.getAttribute('width'), n = t.getAttribute('height'), e = {}, i && (e.width = parseInt(i, 10)), n && (e.height = parseInt(n, 10)), e }, g.prototype.isBlockElement = function (t) { let e; if ((t != null ? t.nodeType : void 0) === Node.ELEMENT_NODE && !a(t) && !o(t, { matchingSelector: 'td', untilNode: this.containerElement })) return e = l(t), f.call(r(), e) >= 0 || window.getComputedStyle(t).display === 'block' }, g.prototype.isInsignificantTextNode = function (t) { let e, n, i; if ((t != null ? t.nodeType : void 0) === Node.TEXT_NODE && k(t.data) && (n = t.parentNode, i = t.previousSibling, e = t.nextSibling, (!C(n.previousSibling) || this.isBlockElement(n.previousSibling)) && !v(n))) return !i || this.isBlockElement(i) || !e || this.isBlockElement(e) }, g.prototype.isExtraBR = function (t) { return l(t) === 'br' && this.isBlockElement(t.parentNode) && t.parentNode.lastChild === t }, v = function (t) { let e; return e = window.getComputedStyle(t).whiteSpace, e === 'pre' || e === 'pre-wrap' || e === 'pre-line' }, C = function (t) { return t && !R(t.textContent) }, g.prototype.translateBlockElementMarginsToNewlines = function () { let t, e, n, i, o, r, s, a; for (e = this.getMarginOfDefaultBlockElement(), s = this.blocks, a = [], i = n = 0, o = s.length; o > n; i = ++n)t = s[i], (r = this.getMarginOfBlockElementAtIndex(i)) && (r.top > 2 * e.top && this.prependStringToTextAtIndex('\n', i), a.push(r.bottom > 2 * e.bottom ? this.appendStringToTextAtIndex('\n', i) : void 0)); return a }, g.prototype.getMarginOfBlockElementAtIndex = function (t) { let e, n; return !(e = this.blockElements[t]) || !e.textContent || (n = l(e), f.call(r(), n) >= 0 || f.call(this.processedElements, e) >= 0) ? void 0 : y(e) }, g.prototype.getMarginOfDefaultBlockElement = function () { let t; return t = s(e.config.blockAttributes.default.tagName), this.containerElement.appendChild(t), y(t) }, y = function (t) { let e; return e = window.getComputedStyle(t), e.display === 'block' ? { top: parseInt(e.marginTop), bottom: parseInt(e.marginBottom) } : void 0 }, A = function (t) { return t.replace(RegExp('^' + n.source + '+'), '') }, k = function (t) { return RegExp('^' + n.source + '*$').test(t) }, R = function (t) { return /\s$/.test(t) }, g }(e.BasicObject)) }.call(this)), (function () {
      let t; let n; let i; let o; const r = function (t, e) { function n () { this.constructor = t } for (const i in e)s.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var s = {}.hasOwnProperty; const a = [].slice; const u = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; t = e.arraysAreEqual, i = e.normalizeRange, o = e.rangeIsCollapsed, n = e.getBlockConfig, e.Document = (function (s) {
        function c (t) { t == null && (t = []), c.__super__.constructor.apply(this, arguments), t.length === 0 && (t = [new e.Block()]), this.blockList = e.SplittableList.box(t) } let l; return r(c, s), c.fromJSON = function (t) { let n, i; return i = (function () { let i, o, r; for (r = [], i = 0, o = t.length; o > i; i++)n = t[i], r.push(e.Block.fromJSON(n)); return r }()), new this(i) }, c.fromHTML = function (t, n) { return e.HTMLParser.parse(t, n).getDocument() }, c.fromString = function (t, n) { let i; return i = e.Text.textForStringWithAttributes(t, n), new this([new e.Block(i)]) }, c.prototype.isEmpty = function () { let t; return this.blockList.length === 1 && (t = this.getBlockAtIndex(0), t.isEmpty() && !t.hasAttributes()) }, c.prototype.copy = function (t) { let e; return t == null && (t = {}), e = t.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray(), new this.constructor(e) }, c.prototype.copyUsingObjectsFromDocument = function (t) { let n; return n = new e.ObjectMap(t.getObjects()), this.copyUsingObjectMap(n) }, c.prototype.copyUsingObjectMap = function (t) { let e, n, i; return n = (function () { let n, o, r, s; for (r = this.getBlocks(), s = [], n = 0, o = r.length; o > n; n++)e = r[n], s.push((i = t.find(e)) ? i : e.copyUsingObjectMap(t)); return s }.call(this)), new this.constructor(n) }, c.prototype.copyWithBaseBlockAttributes = function (t) { let e, n, i; return t == null && (t = []), i = (function () { let i, o, r, s; for (r = this.getBlocks(), s = [], i = 0, o = r.length; o > i; i++)n = r[i], e = t.concat(n.getAttributes()), s.push(n.copyWithAttributes(e)); return s }.call(this)), new this.constructor(i) }, c.prototype.replaceBlock = function (t, e) { let n; return n = this.blockList.indexOf(t), n === -1 ? this : new this.constructor(this.blockList.replaceObjectAtIndex(e, n)) }, c.prototype.insertDocumentAtRange = function (t, e) { let n, r, s, a, u, c, l; return r = t.blockList, u = (e = i(e))[0], c = this.locationFromPosition(u), s = c.index, a = c.offset, l = this, n = this.getBlockAtPosition(u), o(e) && n.isEmpty() && !n.hasAttributes() ? l = new this.constructor(l.blockList.removeObjectAtIndex(s)) : n.getBlockBreakPosition() === a && u++, l = l.removeTextAtRange(e), new this.constructor(l.blockList.insertSplittableListAtPosition(r, u)) }, c.prototype.mergeDocumentAtRange = function (e, n) { let o, r, s, a, u, c, l, h, p, d, f, g; return f = (n = i(n))[0], d = this.locationFromPosition(f), r = this.getBlockAtIndex(d.index).getAttributes(), o = e.getBaseBlockAttributes(), g = r.slice(-o.length), t(o, g) ? (l = r.slice(0, -o.length), c = e.copyWithBaseBlockAttributes(l)) : c = e.copy({ consolidateBlocks: !0 }).copyWithBaseBlockAttributes(r), s = c.getBlockCount(), a = c.getBlockAtIndex(0), t(r, a.getAttributes()) ? (u = a.getTextWithoutBlockBreak(), p = this.insertTextAtRange(u, n), s > 1 && (c = new this.constructor(c.getBlocks().slice(1)), h = f + u.getLength(), p = p.insertDocumentAtRange(c, h))) : p = this.insertDocumentAtRange(c, n), p }, c.prototype.insertTextAtRange = function (t, e) { let n, o, r, s, a; return a = (e = i(e))[0], s = this.locationFromPosition(a), o = s.index, r = s.offset, n = this.removeTextAtRange(e), new this.constructor(n.blockList.editObjectAtIndex(o, function (e) { return e.copyWithText(e.text.insertTextAtPosition(t, r)) })) }, c.prototype.removeTextAtRange = function (t) { let e, n, r, s, a, u, c, l, h, p, d, f, g, m, v, y, b, A, C, x, w; return p = t = i(t), l = p[0], A = p[1], o(t) ? this : (d = this.locationRangeFromRange(t), u = d[0], y = d[1], a = u.index, c = u.offset, s = this.getBlockAtIndex(a), v = y.index, b = y.offset, m = this.getBlockAtIndex(v), f = A - l === 1 && s.getBlockBreakPosition() === c && m.getBlockBreakPosition() !== b && m.text.getStringAtPosition(b) === '\n', f ? r = this.blockList.editObjectAtIndex(v, function (t) { return t.copyWithText(t.text.removeTextAtRange([b, b + 1])) }) : (h = s.text.getTextAtRange([0, c]), C = m.text.getTextAtRange([b, m.getLength()]), x = h.appendText(C), g = a !== v && c === 0, w = g && s.getAttributeLevel() >= m.getAttributeLevel(), n = w ? m.copyWithText(x) : s.copyWithText(x), e = v + 1 - a, r = this.blockList.splice(a, e, n)), new this.constructor(r)) }, c.prototype.moveTextFromRangeToPosition = function (t, e) { let n, o, r, s, u, c, l, h, p, d; return c = t = i(t), p = c[0], r = c[1], e >= p && r >= e ? this : (o = this.getDocumentAtRange(t), h = this.removeTextAtRange(t), u = e > p, u && (e -= o.getLength()), l = o.getBlocks(), s = l[0], n = l.length >= 2 ? a.call(l, 1) : [], n.length === 0 ? (d = s.getTextWithoutBlockBreak(), u && (e += 1)) : d = s.text, h = h.insertTextAtRange(d, e), n.length === 0 ? h : (o = new this.constructor(n), e += d.getLength(), h.insertDocumentAtRange(o, e))) }, c.prototype.addAttributeAtRange = function (t, e, i) { let o; return o = this.blockList, this.eachBlockAtRange(i, function (i, r, s) { return o = o.editObjectAtIndex(s, function () { return n(t) ? i.addAttribute(t, e) : r[0] === r[1] ? i : i.copyWithText(i.text.addAttributeAtRange(t, e, r)) }) }), new this.constructor(o) }, c.prototype.addAttribute = function (t, e) { let n; return n = this.blockList, this.eachBlock(function (i, o) { return n = n.editObjectAtIndex(o, function () { return i.addAttribute(t, e) }) }), new this.constructor(n) }, c.prototype.removeAttributeAtRange = function (t, e) { let i; return i = this.blockList, this.eachBlockAtRange(e, function (e, o, r) { return n(t) ? i = i.editObjectAtIndex(r, function () { return e.removeAttribute(t) }) : o[0] !== o[1] ? i = i.editObjectAtIndex(r, function () { return e.copyWithText(e.text.removeAttributeAtRange(t, o)) }) : void 0 }), new this.constructor(i) }, c.prototype.updateAttributesForAttachment = function (t, e) { let n, i, o, r; return o = (i = this.getRangeOfAttachment(e))[0], n = this.locationFromPosition(o).index, r = this.getTextAtIndex(n), new this.constructor(this.blockList.editObjectAtIndex(n, function (n) { return n.copyWithText(r.updateAttributesForAttachment(t, e)) })) }, c.prototype.removeAttributeForAttachment = function (t, e) { let n; return n = this.getRangeOfAttachment(e), this.removeAttributeAtRange(t, n) }, c.prototype.insertBlockBreakAtRange = function (t) { let n, o, r, s; return s = (t = i(t))[0], r = this.locationFromPosition(s).offset, o = this.removeTextAtRange(t), r === 0 && (n = [new e.Block()]), new this.constructor(o.blockList.insertSplittableListAtPosition(new e.SplittableList(n), s)) }, c.prototype.applyBlockAttributeAtRange = function (t, e, i) { let o, r, s, a; return s = this.expandRangeToLineBreaksAndSplitBlocks(i), r = s.document, i = s.range, o = n(t), o.listAttribute ? (r = r.removeLastListAttributeAtRange(i, { exceptAttributeName: t }), a = r.convertLineBreaksToBlockBreaksInRange(i), r = a.document, i = a.range) : r = o.exclusive ? r.removeBlockAttributesAtRange(i) : o.terminal ? r.removeLastTerminalAttributeAtRange(i) : r.consolidateBlocksAtRange(i), r.addAttributeAtRange(t, e, i) }, c.prototype.removeLastListAttributeAtRange = function (t, e) { let i; return e == null && (e = {}), i = this.blockList, this.eachBlockAtRange(t, function (t, o, r) { let s; if ((s = t.getLastAttribute()) && n(s).listAttribute && s !== e.exceptAttributeName) return i = i.editObjectAtIndex(r, function () { return t.removeAttribute(s) }) }), new this.constructor(i) }, c.prototype.removeLastTerminalAttributeAtRange = function (t) { let e; return e = this.blockList, this.eachBlockAtRange(t, function (t, i, o) { let r; if ((r = t.getLastAttribute()) && n(r).terminal) return e = e.editObjectAtIndex(o, function () { return t.removeAttribute(r) }) }), new this.constructor(e) }, c.prototype.removeBlockAttributesAtRange = function (t) { let e; return e = this.blockList, this.eachBlockAtRange(t, function (t, n, i) { return t.hasAttributes() ? e = e.editObjectAtIndex(i, function () { return t.copyWithoutAttributes() }) : void 0 }), new this.constructor(e) }, c.prototype.expandRangeToLineBreaksAndSplitBlocks = function (t) { let e, n, o, r, s, a, u, c, l; return a = t = i(t), l = a[0], r = a[1], c = this.locationFromPosition(l), o = this.locationFromPosition(r), e = this, u = e.getBlockAtIndex(c.index), (c.offset = u.findLineBreakInDirectionFromPosition('backward', c.offset)) != null && (s = e.positionFromLocation(c), e = e.insertBlockBreakAtRange([s, s + 1]), o.index += 1, o.offset -= e.getBlockAtIndex(c.index).getLength(), c.index += 1), c.offset = 0, o.offset === 0 && o.index > c.index ? (o.index -= 1, o.offset = e.getBlockAtIndex(o.index).getBlockBreakPosition()) : (n = e.getBlockAtIndex(o.index), n.text.getStringAtRange([o.offset - 1, o.offset]) === '\n' ? o.offset -= 1 : o.offset = n.findLineBreakInDirectionFromPosition('forward', o.offset), o.offset !== n.getBlockBreakPosition() && (s = e.positionFromLocation(o), e = e.insertBlockBreakAtRange([s, s + 1]))), l = e.positionFromLocation(c), r = e.positionFromLocation(o), t = i([l, r]), { document: e, range: t } }, c.prototype.convertLineBreaksToBlockBreaksInRange = function (t) { let e, n, o; return n = (t = i(t))[0], o = this.getStringAtRange(t).slice(0, -1), e = this, o.replace(/.*?\n/g, function (t) { return n += t.length, e = e.insertBlockBreakAtRange([n - 1, n]) }), { document: e, range: t } }, c.prototype.consolidateBlocksAtRange = function (t) { let e, n, o, r, s; return o = t = i(t), s = o[0], n = o[1], r = this.locationFromPosition(s).index, e = this.locationFromPosition(n).index, new this.constructor(this.blockList.consolidateFromIndexToIndex(r, e)) }, c.prototype.getDocumentAtRange = function (t) { let e; return t = i(t), e = this.blockList.getSplittableListInRange(t).toArray(), new this.constructor(e) }, c.prototype.getStringAtRange = function (t) { let e, n, o; return o = t = i(t), n = o[o.length - 1], n !== this.getLength() && (e = -1), this.getDocumentAtRange(t).toString().slice(0, e) }, c.prototype.getBlockAtIndex = function (t) { return this.blockList.getObjectAtIndex(t) }, c.prototype.getBlockAtPosition = function (t) { let e; return e = this.locationFromPosition(t).index, this.getBlockAtIndex(e) }, c.prototype.getTextAtIndex = function (t) { let e; return (e = this.getBlockAtIndex(t)) != null ? e.text : void 0 }, c.prototype.getTextAtPosition = function (t) { let e; return e = this.locationFromPosition(t).index, this.getTextAtIndex(e) }, c.prototype.getPieceAtPosition = function (t) { let e, n, i; return i = this.locationFromPosition(t), e = i.index, n = i.offset, this.getTextAtIndex(e).getPieceAtPosition(n) }, c.prototype.getCharacterAtPosition = function (t) { let e, n, i; return i = this.locationFromPosition(t), e = i.index, n = i.offset, this.getTextAtIndex(e).getStringAtRange([n, n + 1]) }, c.prototype.getLength = function () { return this.blockList.getEndPosition() }, c.prototype.getBlocks = function () { return this.blockList.toArray() }, c.prototype.getBlockCount = function () { return this.blockList.length }, c.prototype.getEditCount = function () { return this.editCount }, c.prototype.eachBlock = function (t) { return this.blockList.eachObject(t) }, c.prototype.eachBlockAtRange = function (t, e) { let n, o, r, s, a, u, c, l, h, p, d, f; if (u = t = i(t), d = u[0], r = u[1], p = this.locationFromPosition(d), o = this.locationFromPosition(r), p.index === o.index) return n = this.getBlockAtIndex(p.index), f = [p.offset, o.offset], e(n, f, p.index); for (h = [], a = s = c = p.index, l = o.index; l >= c ? l >= s : s >= l; a = l >= c ? ++s : --s)(n = this.getBlockAtIndex(a)) ? (f = (function () { switch (a) { case p.index:return [p.offset, n.text.getLength()]; case o.index:return [0, o.offset]; default:return [0, n.text.getLength()] } }()), h.push(e(n, f, a))) : h.push(void 0); return h }, c.prototype.getCommonAttributesAtRange = function (t) {
          let n, r, s
          return r = (t = i(t))[0], o(t) ? this.getCommonAttributesAtPosition(r) : (s = [], n = [], this.eachBlockAtRange(t, function (t, e) { return e[0] !== e[1] ? (s.push(t.text.getCommonAttributesAtRange(e)), n.push(l(t))) : void 0 }), e.Hash.fromCommonAttributesOfObjects(s).merge(e.Hash.fromCommonAttributesOfObjects(n)).toObject())
        }, c.prototype.getCommonAttributesAtPosition = function (t) { let n, i, o, r, s, a, c, h, p, d; if (p = this.locationFromPosition(t), s = p.index, h = p.offset, o = this.getBlockAtIndex(s), !o) return {}; r = l(o), n = o.text.getAttributesAtPosition(h), i = o.text.getAttributesAtPosition(h - 1), a = (function () { let t, n; t = e.config.textAttributes, n = []; for (c in t)d = t[c], d.inheritable && n.push(c); return n }()); for (c in i)d = i[c], (d === n[c] || u.call(a, c) >= 0) && (r[c] = d); return r }, c.prototype.getRangeOfCommonAttributeAtPosition = function (t, e) { let n, o, r, s, a, u, c, l, h; return a = this.locationFromPosition(e), r = a.index, s = a.offset, h = this.getTextAtIndex(r), u = h.getExpandedRangeForAttributeAtOffset(t, s), l = u[0], o = u[1], c = this.positionFromLocation({ index: r, offset: l }), n = this.positionFromLocation({ index: r, offset: o }), i([c, n]) }, c.prototype.getBaseBlockAttributes = function () { let t, e, n, i, o, r, s; for (t = this.getBlockAtIndex(0).getAttributes(), n = i = 1, s = this.getBlockCount(); s >= 1 ? s > i : i > s; n = s >= 1 ? ++i : --i)e = this.getBlockAtIndex(n).getAttributes(), r = Math.min(t.length, e.length), t = (function () { let n, i, s; for (s = [], o = n = 0, i = r; (i >= 0 ? i > n : n > i) && e[o] === t[o]; o = i >= 0 ? ++n : --n)s.push(e[o]); return s }()); return t }, l = function (t) { let e, n; return n = {}, (e = t.getLastAttribute()) && (n[e] = !0), n }, c.prototype.getAttachmentById = function (t) { let e, n, i, o; for (o = this.getAttachments(), n = 0, i = o.length; i > n; n++) if (e = o[n], e.id === t) return e }, c.prototype.getAttachmentPieces = function () { let t; return t = [], this.blockList.eachObject(function (e) { let n; return n = e.text, t = t.concat(n.getAttachmentPieces()) }), t }, c.prototype.getAttachments = function () { let t, e, n, i, o; for (i = this.getAttachmentPieces(), o = [], t = 0, e = i.length; e > t; t++)n = i[t], o.push(n.attachment); return o }, c.prototype.getRangeOfAttachment = function (t) { let e, n, o, r, s, a, u; for (r = 0, s = this.blockList.toArray(), n = e = 0, o = s.length; o > e; n = ++e) { if (a = s[n].text, u = a.getRangeOfAttachment(t)) return i([r + u[0], r + u[1]]); r += a.getLength() } }, c.prototype.getLocationRangeOfAttachment = function (t) { let e; return e = this.getRangeOfAttachment(t), this.locationRangeFromRange(e) }, c.prototype.getAttachmentPieceForAttachment = function (t) { let e, n, i, o; for (o = this.getAttachmentPieces(), e = 0, n = o.length; n > e; e++) if (i = o[e], i.attachment === t) return i }, c.prototype.findRangesForBlockAttribute = function (t) { let e, n, i, o, r, s, a; for (r = 0, s = [], a = this.getBlocks(), n = 0, i = a.length; i > n; n++)e = a[n], o = e.getLength(), e.hasAttribute(t) && s.push([r, r + o]), r += o; return s }, c.prototype.findRangesForTextAttribute = function (t, e) { let n, i, o, r, s, a, u, c, l, h; for (h = (e != null ? e : {}).withValue, a = 0, u = [], c = [], r = function (e) { return h != null ? e.getAttribute(t) === h : e.hasAttribute(t) }, l = this.getPieces(), n = 0, i = l.length; i > n; n++)s = l[n], o = s.getLength(), r(s) && (u[1] === a ? u[1] = a + o : c.push(u = [a, a + o])), a += o; return c }, c.prototype.locationFromPosition = function (t) { let e, n; return n = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, t)), n.index != null ? n : (e = this.getBlocks(), { index: e.length - 1, offset: e[e.length - 1].getLength() }) }, c.prototype.positionFromLocation = function (t) { return this.blockList.findPositionAtIndexAndOffset(t.index, t.offset) }, c.prototype.locationRangeFromPosition = function (t) { return i(this.locationFromPosition(t)) }, c.prototype.locationRangeFromRange = function (t) { let e, n, o, r; if (t = i(t)) return r = t[0], n = t[1], o = this.locationFromPosition(r), e = this.locationFromPosition(n), i([o, e]) }, c.prototype.rangeFromLocationRange = function (t) { let e, n; return t = i(t), e = this.positionFromLocation(t[0]), o(t) || (n = this.positionFromLocation(t[1])), i([e, n]) }, c.prototype.isEqualTo = function (t) { return this.blockList.isEqualTo(t != null ? t.blockList : void 0) }, c.prototype.getTexts = function () { let t, e, n, i, o; for (i = this.getBlocks(), o = [], e = 0, n = i.length; n > e; e++)t = i[e], o.push(t.text); return o }, c.prototype.getPieces = function () { let t, e, n, i, o; for (n = [], i = this.getTexts(), t = 0, e = i.length; e > t; t++)o = i[t], n.push.apply(n, o.getPieces()); return n }, c.prototype.getObjects = function () { return this.getBlocks().concat(this.getTexts()).concat(this.getPieces()) }, c.prototype.toSerializableDocument = function () { let t; return t = [], this.blockList.eachObject(function (e) { return t.push(e.copyWithText(e.text.toSerializableText())) }), new this.constructor(t) }, c.prototype.toString = function () { return this.blockList.toString() }, c.prototype.toJSON = function () { return this.blockList.toJSON() }, c.prototype.toConsole = function () { let t; return JSON.stringify(function () { let e, n, i, o; for (i = this.blockList.toArray(), o = [], e = 0, n = i.length; n > e; e++)t = i[e], o.push(JSON.parse(t.text.toConsole())); return o }.call(this)) }, c
      }(e.Object))
    }.call(this)), (function () { e.LineBreakInsertion = (function () { function t (t) { let e; this.composition = t, this.document = this.composition.document, e = this.composition.getSelectedRange(), this.startPosition = e[0], this.endPosition = e[1], this.startLocation = this.document.locationFromPosition(this.startPosition), this.endLocation = this.document.locationFromPosition(this.endPosition), this.block = this.document.getBlockAtIndex(this.endLocation.index), this.breaksOnReturn = this.block.breaksOnReturn(), this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1), this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset) } return t.prototype.shouldInsertBlockBreak = function () { return this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty() ? this.startLocation.offset !== 0 : this.breaksOnReturn && this.nextCharacter !== '\n' }, t.prototype.shouldBreakFormattedBlock = function () { return this.block.hasAttributes() && !this.block.isListItem() && (this.breaksOnReturn && this.nextCharacter === '\n' || this.previousCharacter === '\n') }, t.prototype.shouldDecreaseListLevel = function () { return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty() }, t.prototype.shouldPrependListItem = function () { return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty() }, t.prototype.shouldRemoveLastBlockAttribute = function () { return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty() }, t }()) }.call(this)), (function () { let t; let n; let i; let o; let r; let s; let a; let u; let c; let l; const h = function (t, e) { function n () { this.constructor = t } for (const i in e)p.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var p = {}.hasOwnProperty; s = e.normalizeRange, c = e.rangesAreEqual, u = e.rangeIsCollapsed, a = e.objectsAreEqual, t = e.arrayStartsWith, l = e.summarizeArrayChange, i = e.getAllAttributeNames, o = e.getBlockConfig, r = e.getTextConfig, n = e.extend, e.Composition = (function (p) { function d () { this.document = new e.Document(), this.attachments = [], this.currentAttributes = {}, this.revision = 0 } let f; return h(d, p), d.prototype.setDocument = function (t) { let e; return t.isEqualTo(this.document) ? void 0 : (this.document = t, this.refreshAttachments(), this.revision++, (e = this.delegate) != null && typeof e.compositionDidChangeDocument === 'function' ? e.compositionDidChangeDocument(t) : void 0) }, d.prototype.getSnapshot = function () { return { document: this.document, selectedRange: this.getSelectedRange() } }, d.prototype.loadSnapshot = function (t) { let n, i, o, r; return n = t.document, r = t.selectedRange, (i = this.delegate) != null && typeof i.compositionWillLoadSnapshot === 'function' && i.compositionWillLoadSnapshot(), this.setDocument(n != null ? n : new e.Document()), this.setSelection(r != null ? r : [0, 0]), (o = this.delegate) != null && typeof o.compositionDidLoadSnapshot === 'function' ? o.compositionDidLoadSnapshot() : void 0 }, d.prototype.insertText = function (t, e) { let n, i, o, r; return r = (e != null ? e : { updatePosition: !0 }).updatePosition, i = this.getSelectedRange(), this.setDocument(this.document.insertTextAtRange(t, i)), o = i[0], n = o + t.getLength(), r && this.setSelection(n), this.notifyDelegateOfInsertionAtRange([o, n]) }, d.prototype.insertBlock = function (t) { let n; return t == null && (t = new e.Block()), n = new e.Document([t]), this.insertDocument(n) }, d.prototype.insertDocument = function (t) { let n, i, o; return t == null && (t = new e.Document()), i = this.getSelectedRange(), this.setDocument(this.document.insertDocumentAtRange(t, i)), o = i[0], n = o + t.getLength(), this.setSelection(n), this.notifyDelegateOfInsertionAtRange([o, n]) }, d.prototype.insertString = function (t, n) { let i, o; return i = this.getCurrentTextAttributes(), o = e.Text.textForStringWithAttributes(t, i), this.insertText(o, n) }, d.prototype.insertBlockBreak = function () { let t, e, n; return e = this.getSelectedRange(), this.setDocument(this.document.insertBlockBreakAtRange(e)), n = e[0], t = n + 1, this.setSelection(t), this.notifyDelegateOfInsertionAtRange([n, t]) }, d.prototype.insertLineBreak = function () { let t, n; return n = new e.LineBreakInsertion(this), n.shouldDecreaseListLevel() ? (this.decreaseListLevel(), this.setSelection(n.startPosition)) : n.shouldPrependListItem() ? (t = new e.Document([n.block.copyWithoutText()]), this.insertDocument(t)) : n.shouldInsertBlockBreak() ? this.insertBlockBreak() : n.shouldRemoveLastBlockAttribute() ? this.removeLastBlockAttribute() : n.shouldBreakFormattedBlock() ? this.breakFormattedBlock(n) : this.insertString('\n') }, d.prototype.insertHTML = function (t) { let n, i, o, r; return n = e.Document.fromHTML(t), o = this.getSelectedRange(), this.setDocument(this.document.mergeDocumentAtRange(n, o)), r = o[0], i = r + n.getLength() - 1, this.setSelection(i), this.notifyDelegateOfInsertionAtRange([r, i]) }, d.prototype.replaceHTML = function (t) { let n, i, o; return n = e.Document.fromHTML(t).copyUsingObjectsFromDocument(this.document), i = this.getLocationRange({ strict: !1 }), o = this.document.rangeFromLocationRange(i), this.setDocument(n), this.setSelection(o) }, d.prototype.insertFile = function (t) { return this.insertFiles([t]) }, d.prototype.insertFiles = function (t) { let n, i, o, r, s, a; for (i = [], r = 0, s = t.length; s > r; r++)o = t[r], ((a = this.delegate) != null ? a.compositionShouldAcceptFile(o) : void 0) && (n = e.Attachment.attachmentForFile(o), i.push(n)); return this.insertAttachments(i) }, d.prototype.insertAttachment = function (t) { return this.insertAttachments([t]) }, d.prototype.insertAttachments = function (t) { let n, i, o, r, s, a, u, c, l; for (c = new e.Text(), r = 0, s = t.length; s > r; r++)n = t[r], l = n.getType(), a = (u = e.config.attachments[l]) != null ? u.presentation : void 0, o = this.getCurrentTextAttributes(), a && (o.presentation = a), i = e.Text.textForAttachmentWithAttributes(n, o), c = c.appendText(i); return this.insertText(c) }, d.prototype.shouldManageDeletingInDirection = function (t) { let e; if (e = this.getLocationRange(), u(e)) { if (t === 'backward' && e[0].offset === 0) return !0; if (this.shouldManageMovingCursorInDirection(t)) return !0 } else if (e[0].index !== e[1].index) return !0; return !1 }, d.prototype.deleteInDirection = function (t, e) { let n, i, o, r, s, a, c, l; return r = (e != null ? e : {}).length, s = this.getLocationRange(), a = this.getSelectedRange(), c = u(a), c ? o = t === 'backward' && s[0].offset === 0 : l = s[0].index !== s[1].index, o && this.canDecreaseBlockAttributeLevel() && (i = this.getBlock(), i.isListItem() ? this.decreaseListLevel() : this.decreaseBlockAttributeLevel(), this.setSelection(a[0]), i.isEmpty()) ? !1 : (c && (a = this.getExpandedRangeInDirection(t, { length: r }), t === 'backward' && (n = this.getAttachmentAtRange(a))), n ? (this.editAttachment(n), !1) : (this.setDocument(this.document.removeTextAtRange(a)), this.setSelection(a[0]), o || l ? !1 : void 0)) }, d.prototype.moveTextFromRange = function (t) { let e; return e = this.getSelectedRange()[0], this.setDocument(this.document.moveTextFromRangeToPosition(t, e)), this.setSelection(e) }, d.prototype.removeAttachment = function (t) { let e; return (e = this.document.getRangeOfAttachment(t)) ? (this.stopEditingAttachment(), this.setDocument(this.document.removeTextAtRange(e)), this.setSelection(e[0])) : void 0 }, d.prototype.removeLastBlockAttribute = function () { let t, e, n, i; return n = this.getSelectedRange(), i = n[0], e = n[1], t = this.document.getBlockAtPosition(e), this.removeCurrentAttribute(t.getLastAttribute()), this.setSelection(i) }, f = ' ', d.prototype.insertPlaceholder = function () { return this.placeholderPosition = this.getPosition(), this.insertString(f) }, d.prototype.selectPlaceholder = function () { return this.placeholderPosition != null ? (this.setSelectedRange([this.placeholderPosition, this.placeholderPosition + f.length]), this.getSelectedRange()) : void 0 }, d.prototype.forgetPlaceholder = function () { return this.placeholderPosition = null }, d.prototype.hasCurrentAttribute = function (t) { let e; return e = this.currentAttributes[t], e != null && e !== !1 }, d.prototype.toggleCurrentAttribute = function (t) { let e; return (e = !this.currentAttributes[t]) ? this.setCurrentAttribute(t, e) : this.removeCurrentAttribute(t) }, d.prototype.canSetCurrentAttribute = function (t) { return o(t) ? this.canSetCurrentBlockAttribute(t) : this.canSetCurrentTextAttribute(t) }, d.prototype.canSetCurrentTextAttribute = function () { let t, e, n, i, o; if (e = this.getSelectedDocument()) { for (o = e.getAttachments(), n = 0, i = o.length; i > n; n++) if (t = o[n], !t.hasContent()) return !1; return !0 } }, d.prototype.canSetCurrentBlockAttribute = function () { let t; if (t = this.getBlock()) return !t.isTerminalBlock() }, d.prototype.setCurrentAttribute = function (t, e) { return o(t) ? this.setBlockAttribute(t, e) : (this.setTextAttribute(t, e), this.currentAttributes[t] = e, this.notifyDelegateOfCurrentAttributesChange()) }, d.prototype.setTextAttribute = function (t, n) { let i, o, r, s; if (o = this.getSelectedRange()) return r = o[0], i = o[1], r !== i ? this.setDocument(this.document.addAttributeAtRange(t, n, o)) : t === 'href' ? (s = e.Text.textForStringWithAttributes(n, { href: n }), this.insertText(s)) : void 0 }, d.prototype.setBlockAttribute = function (t, e) { let n, i; if (i = this.getSelectedRange()) return this.canSetCurrentAttribute(t) ? (n = this.getBlock(), this.setDocument(this.document.applyBlockAttributeAtRange(t, e, i)), this.setSelection(i)) : void 0 }, d.prototype.removeCurrentAttribute = function (t) { return o(t) ? (this.removeBlockAttribute(t), this.updateCurrentAttributes()) : (this.removeTextAttribute(t), delete this.currentAttributes[t], this.notifyDelegateOfCurrentAttributesChange()) }, d.prototype.removeTextAttribute = function (t) { let e; if (e = this.getSelectedRange()) return this.setDocument(this.document.removeAttributeAtRange(t, e)) }, d.prototype.removeBlockAttribute = function (t) { let e; if (e = this.getSelectedRange()) return this.setDocument(this.document.removeAttributeAtRange(t, e)) }, d.prototype.canDecreaseNestingLevel = function () { let t; return ((t = this.getBlock()) != null ? t.getNestingLevel() : void 0) > 0 }, d.prototype.canIncreaseNestingLevel = function () { let e, n, i; if (e = this.getBlock()) return ((i = o(e.getLastNestableAttribute())) != null ? i.listAttribute : 0) ? (n = this.getPreviousBlock()) ? t(n.getListItemAttributes(), e.getListItemAttributes()) : void 0 : e.getNestingLevel() > 0 }, d.prototype.decreaseNestingLevel = function () { let t; if (t = this.getBlock()) return this.setDocument(this.document.replaceBlock(t, t.decreaseNestingLevel())) }, d.prototype.increaseNestingLevel = function () { let t; if (t = this.getBlock()) return this.setDocument(this.document.replaceBlock(t, t.increaseNestingLevel())) }, d.prototype.canDecreaseBlockAttributeLevel = function () { let t; return ((t = this.getBlock()) != null ? t.getAttributeLevel() : void 0) > 0 }, d.prototype.decreaseBlockAttributeLevel = function () { let t, e; return (t = (e = this.getBlock()) != null ? e.getLastAttribute() : void 0) ? this.removeCurrentAttribute(t) : void 0 }, d.prototype.decreaseListLevel = function () { let t, e, n, i, o, r; for (r = this.getSelectedRange()[0], o = this.document.locationFromPosition(r).index, n = o, t = this.getBlock().getAttributeLevel(); (e = this.document.getBlockAtIndex(n + 1)) && e.isListItem() && e.getAttributeLevel() > t;)n++; return r = this.document.positionFromLocation({ index: o, offset: 0 }), i = this.document.positionFromLocation({ index: n, offset: 0 }), this.setDocument(this.document.removeLastListAttributeAtRange([r, i])) }, d.prototype.updateCurrentAttributes = function () { let t, e, n, o, r, s; if (s = this.getSelectedRange({ ignoreLock: !0 })) { for (e = this.document.getCommonAttributesAtRange(s), r = i(), n = 0, o = r.length; o > n; n++)t = r[n], e[t] || this.canSetCurrentAttribute(t) || (e[t] = !1); if (!a(e, this.currentAttributes)) return this.currentAttributes = e, this.notifyDelegateOfCurrentAttributesChange() } }, d.prototype.getCurrentAttributes = function () { return n.call({}, this.currentAttributes) }, d.prototype.getCurrentTextAttributes = function () { let t, e, n, i; t = {}, n = this.currentAttributes; for (e in n)i = n[e], i !== !1 && r(e) && (t[e] = i); return t }, d.prototype.freezeSelection = function () { return this.setCurrentAttribute('frozen', !0) }, d.prototype.thawSelection = function () { return this.removeCurrentAttribute('frozen') }, d.prototype.hasFrozenSelection = function () { return this.hasCurrentAttribute('frozen') }, d.proxyMethod('getSelectionManager().getPointRange'), d.proxyMethod('getSelectionManager().setLocationRangeFromPointRange'), d.proxyMethod('getSelectionManager().createLocationRangeFromDOMRange'), d.proxyMethod('getSelectionManager().locationIsCursorTarget'), d.proxyMethod('getSelectionManager().selectionIsExpanded'), d.proxyMethod('delegate?.getSelectionManager'), d.prototype.setSelection = function (t) { let e, n; return e = this.document.locationRangeFromRange(t), (n = this.delegate) != null ? n.compositionDidRequestChangingSelectionToLocationRange(e) : void 0 }, d.prototype.getSelectedRange = function () { let t; return (t = this.getLocationRange()) ? this.document.rangeFromLocationRange(t) : void 0 }, d.prototype.setSelectedRange = function (t) { let e; return e = this.document.locationRangeFromRange(t), this.getSelectionManager().setLocationRange(e) }, d.prototype.getPosition = function () { let t; return (t = this.getLocationRange()) ? this.document.positionFromLocation(t[0]) : void 0 }, d.prototype.getLocationRange = function (t) { let e, n; return (e = (n = this.targetLocationRange) != null ? n : this.getSelectionManager().getLocationRange(t)) != null ? e : s({ index: 0, offset: 0 }) }, d.prototype.withTargetLocationRange = function (t, e) { let n; this.targetLocationRange = t; try { n = e() } finally { this.targetLocationRange = null } return n }, d.prototype.withTargetRange = function (t, e) { let n; return n = this.document.locationRangeFromRange(t), this.withTargetLocationRange(n, e) }, d.prototype.withTargetDOMRange = function (t, e) { let n; return n = this.createLocationRangeFromDOMRange(t, { strict: !1 }), this.withTargetLocationRange(n, e) }, d.prototype.getExpandedRangeInDirection = function (t, e) { let n, i, o, r; return i = (e != null ? e : {}).length, o = this.getSelectedRange(), r = o[0], n = o[1], t === 'backward' ? i ? r -= i : r = this.translateUTF16PositionFromOffset(r, -1) : i ? n += i : n = this.translateUTF16PositionFromOffset(n, 1), s([r, n]) }, d.prototype.shouldManageMovingCursorInDirection = function (t) { let e; return this.editingAttachment ? !0 : (e = this.getExpandedRangeInDirection(t), this.getAttachmentAtRange(e) != null) }, d.prototype.moveCursorInDirection = function (t) { let e, n, i, o; return this.editingAttachment ? i = this.document.getRangeOfAttachment(this.editingAttachment) : (o = this.getSelectedRange(), i = this.getExpandedRangeInDirection(t), n = !c(o, i)), this.setSelectedRange(t === 'backward' ? i[0] : i[1]), n && (e = this.getAttachmentAtRange(i)) ? this.editAttachment(e) : void 0 }, d.prototype.expandSelectionInDirection = function (t, e) { let n, i; return n = (e != null ? e : {}).length, i = this.getExpandedRangeInDirection(t, { length: n }), this.setSelectedRange(i) }, d.prototype.expandSelectionForEditing = function () { return this.hasCurrentAttribute('href') ? this.expandSelectionAroundCommonAttribute('href') : void 0 }, d.prototype.expandSelectionAroundCommonAttribute = function (t) { let e, n; return e = this.getPosition(), n = this.document.getRangeOfCommonAttributeAtPosition(t, e), this.setSelectedRange(n) }, d.prototype.selectionContainsAttachments = function () { let t; return ((t = this.getSelectedAttachments()) != null ? t.length : void 0) > 0 }, d.prototype.selectionIsInCursorTarget = function () { return this.editingAttachment || this.positionIsCursorTarget(this.getPosition()) }, d.prototype.positionIsCursorTarget = function (t) { let e; return (e = this.document.locationFromPosition(t)) ? this.locationIsCursorTarget(e) : void 0 }, d.prototype.positionIsBlockBreak = function (t) { let e; return (e = this.document.getPieceAtPosition(t)) != null ? e.isBlockBreak() : void 0 }, d.prototype.getSelectedDocument = function () { let t; return (t = this.getSelectedRange()) ? this.document.getDocumentAtRange(t) : void 0 }, d.prototype.getSelectedAttachments = function () { let t; return (t = this.getSelectedDocument()) != null ? t.getAttachments() : void 0 }, d.prototype.getAttachments = function () { return this.attachments.slice(0) }, d.prototype.refreshAttachments = function () { let t, e, n, i, o, r, s, a, u, c, h, p; for (n = this.document.getAttachments(), a = l(this.attachments, n), t = a.added, h = a.removed, this.attachments = n, i = 0, r = h.length; r > i; i++)e = h[i], e.delegate = null, (u = this.delegate) != null && typeof u.compositionDidRemoveAttachment === 'function' && u.compositionDidRemoveAttachment(e); for (p = [], o = 0, s = t.length; s > o; o++)e = t[o], e.delegate = this, p.push((c = this.delegate) != null && typeof c.compositionDidAddAttachment === 'function' ? c.compositionDidAddAttachment(e) : void 0); return p }, d.prototype.attachmentDidChangeAttributes = function (t) { let e; return this.revision++, (e = this.delegate) != null && typeof e.compositionDidEditAttachment === 'function' ? e.compositionDidEditAttachment(t) : void 0 }, d.prototype.attachmentDidChangePreviewURL = function (t) { let e; return this.revision++, (e = this.delegate) != null && typeof e.compositionDidChangeAttachmentPreviewURL === 'function' ? e.compositionDidChangeAttachmentPreviewURL(t) : void 0 }, d.prototype.editAttachment = function (t, e) { let n; if (t !== this.editingAttachment) return this.stopEditingAttachment(), this.editingAttachment = t, (n = this.delegate) != null && typeof n.compositionDidStartEditingAttachment === 'function' ? n.compositionDidStartEditingAttachment(this.editingAttachment, e) : void 0 }, d.prototype.stopEditingAttachment = function () { let t; if (this.editingAttachment) return (t = this.delegate) != null && typeof t.compositionDidStopEditingAttachment === 'function' && t.compositionDidStopEditingAttachment(this.editingAttachment), this.editingAttachment = null }, d.prototype.updateAttributesForAttachment = function (t, e) { return this.setDocument(this.document.updateAttributesForAttachment(t, e)) }, d.prototype.removeAttributeForAttachment = function (t, e) { return this.setDocument(this.document.removeAttributeForAttachment(t, e)) }, d.prototype.breakFormattedBlock = function (t) { let n, i, o, r, s; return i = t.document, n = t.block, r = t.startPosition, s = [r - 1, r], n.getBlockBreakPosition() === t.startLocation.offset ? (n.breaksOnReturn() && t.nextCharacter === '\n' ? r += 1 : i = i.removeTextAtRange(s), s = [r, r]) : t.nextCharacter === '\n' ? t.previousCharacter === '\n' ? s = [r - 1, r + 1] : (s = [r, r + 1], r += 1) : t.startLocation.offset - 1 !== 0 && (r += 1), o = new e.Document([n.removeLastAttribute().copyWithoutText()]), this.setDocument(i.insertDocumentAtRange(o, s)), this.setSelection(r) }, d.prototype.getPreviousBlock = function () { let t, e; return (e = this.getLocationRange()) && (t = e[0].index, t > 0) ? this.document.getBlockAtIndex(t - 1) : void 0 }, d.prototype.getBlock = function () { let t; return (t = this.getLocationRange()) ? this.document.getBlockAtIndex(t[0].index) : void 0 }, d.prototype.getAttachmentAtRange = function (t) { let n; return n = this.document.getDocumentAtRange(t), n.toString() === e.OBJECT_REPLACEMENT_CHARACTER + '\n' ? n.getAttachments()[0] : void 0 }, d.prototype.notifyDelegateOfCurrentAttributesChange = function () { let t; return (t = this.delegate) != null && typeof t.compositionDidChangeCurrentAttributes === 'function' ? t.compositionDidChangeCurrentAttributes(this.currentAttributes) : void 0 }, d.prototype.notifyDelegateOfInsertionAtRange = function (t) { let e; return (e = this.delegate) != null && typeof e.compositionDidPerformInsertionAtRange === 'function' ? e.compositionDidPerformInsertionAtRange(t) : void 0 }, d.prototype.translateUTF16PositionFromOffset = function (t, e) { let n, i; return i = this.document.toUTF16String(), n = i.offsetFromUCS2Offset(t), i.offsetToUCS2Offset(n + e) }, d }(e.BasicObject)) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.UndoManager = (function (e) { function n (t) { this.composition = t, this.undoEntries = [], this.redoEntries = [] } let i; return t(n, e), n.prototype.recordUndoEntry = function (t, e) { let n, o, r, s, a; return s = e != null ? e : {}, o = s.context, n = s.consolidatable, r = this.undoEntries.slice(-1)[0], n && i(r, t, o) ? void 0 : (a = this.createEntry({ description: t, context: o }), this.undoEntries.push(a), this.redoEntries = []) }, n.prototype.undo = function () { let t, e; return (e = this.undoEntries.pop()) ? (t = this.createEntry(e), this.redoEntries.push(t), this.composition.loadSnapshot(e.snapshot)) : void 0 }, n.prototype.redo = function () { let t, e; return (t = this.redoEntries.pop()) ? (e = this.createEntry(t), this.undoEntries.push(e), this.composition.loadSnapshot(t.snapshot)) : void 0 }, n.prototype.canUndo = function () { return this.undoEntries.length > 0 }, n.prototype.canRedo = function () { return this.redoEntries.length > 0 }, n.prototype.createEntry = function (t) { let e, n, i; return i = t != null ? t : {}, n = i.description, e = i.context, { description: n != null ? n.toString() : void 0, context: JSON.stringify(e), snapshot: this.composition.getSnapshot() } }, i = function (t, e, n) { return (t != null ? t.description : void 0) === (e != null ? e.toString() : void 0) && (t != null ? t.context : void 0) === JSON.stringify(n) }, n }(e.BasicObject)) }.call(this)), (function () { let t; e.attachmentGalleryFilter = function (e) { let n; return n = new t(e), n.perform(), n.getSnapshot() }, t = (function () { function t (t) { this.document = t.document, this.selectedRange = t.selectedRange } let e, n, i; return e = 'attachmentGallery', n = 'presentation', i = 'gallery', t.prototype.perform = function () { return this.removeBlockAttribute(), this.applyBlockAttribute() }, t.prototype.getSnapshot = function () { return { document: this.document, selectedRange: this.selectedRange } }, t.prototype.removeBlockAttribute = function () { let t, n, i, o, r; for (o = this.findRangesOfBlocks(), r = [], t = 0, n = o.length; n > t; t++)i = o[t], r.push(this.document = this.document.removeAttributeAtRange(e, i)); return r }, t.prototype.applyBlockAttribute = function () { let t, n, i, o, r, s; for (i = 0, r = this.findRangesOfPieces(), s = [], t = 0, n = r.length; n > t; t++)o = r[t], o[1] - o[0] > 1 && (o[0] += i, o[1] += i, this.document.getCharacterAtPosition(o[1]) !== '\n' && (this.document = this.document.insertBlockBreakAtRange(o[1]), o[1] < this.selectedRange[1] && this.moveSelectedRangeForward(), o[1]++, i++), o[0] !== 0 && this.document.getCharacterAtPosition(o[0] - 1) !== '\n' && (this.document = this.document.insertBlockBreakAtRange(o[0]), o[0] < this.selectedRange[0] && this.moveSelectedRangeForward(), o[0]++, i++), s.push(this.document = this.document.applyBlockAttributeAtRange(e, !0, o))); return s }, t.prototype.findRangesOfBlocks = function () { return this.document.findRangesForBlockAttribute(e) }, t.prototype.findRangesOfPieces = function () { return this.document.findRangesForTextAttribute(n, { withValue: i }) }, t.prototype.moveSelectedRangeForward = function () { return this.selectedRange[0] += 1, this.selectedRange[1] += 1 }, t }()) }.call(this)), (function () { const t = function (t, e) { return function () { return t.apply(e, arguments) } }; e.Editor = (function () { function n (n, o, r) { this.composition = n, this.selectionManager = o, this.element = r, this.insertFiles = t(this.insertFiles, this), this.undoManager = new e.UndoManager(this.composition), this.filters = i.slice(0) } let i; return i = [e.attachmentGalleryFilter], n.prototype.loadDocument = function (t) { return this.loadSnapshot({ document: t, selectedRange: [0, 0] }) }, n.prototype.loadHTML = function (t) { return t == null && (t = ''), this.loadDocument(e.Document.fromHTML(t, { referenceElement: this.element })) }, n.prototype.loadJSON = function (t) { let n, i; return n = t.document, i = t.selectedRange, n = e.Document.fromJSON(n), this.loadSnapshot({ document: n, selectedRange: i }) }, n.prototype.loadSnapshot = function (t) { return this.undoManager = new e.UndoManager(this.composition), this.composition.loadSnapshot(t) }, n.prototype.getDocument = function () { return this.composition.document }, n.prototype.getSelectedDocument = function () { return this.composition.getSelectedDocument() }, n.prototype.getSnapshot = function () { return this.composition.getSnapshot() }, n.prototype.toJSON = function () { return this.getSnapshot() }, n.prototype.deleteInDirection = function (t) { return this.composition.deleteInDirection(t) }, n.prototype.insertAttachment = function (t) { return this.composition.insertAttachment(t) }, n.prototype.insertAttachments = function (t) { return this.composition.insertAttachments(t) }, n.prototype.insertDocument = function (t) { return this.composition.insertDocument(t) }, n.prototype.insertFile = function (t) { return this.composition.insertFile(t) }, n.prototype.insertFiles = function (t) { return this.composition.insertFiles(t) }, n.prototype.insertHTML = function (t) { return this.composition.insertHTML(t) }, n.prototype.insertString = function (t) { return this.composition.insertString(t) }, n.prototype.insertText = function (t) { return this.composition.insertText(t) }, n.prototype.insertLineBreak = function () { return this.composition.insertLineBreak() }, n.prototype.getSelectedRange = function () { return this.composition.getSelectedRange() }, n.prototype.getPosition = function () { return this.composition.getPosition() }, n.prototype.getClientRectAtPosition = function (t) { let e; return e = this.getDocument().locationRangeFromRange([t, t + 1]), this.selectionManager.getClientRectAtLocationRange(e) }, n.prototype.expandSelectionInDirection = function (t) { return this.composition.expandSelectionInDirection(t) }, n.prototype.moveCursorInDirection = function (t) { return this.composition.moveCursorInDirection(t) }, n.prototype.setSelectedRange = function (t) { return this.composition.setSelectedRange(t) }, n.prototype.activateAttribute = function (t, e) { return e == null && (e = !0), this.composition.setCurrentAttribute(t, e) }, n.prototype.attributeIsActive = function (t) { return this.composition.hasCurrentAttribute(t) }, n.prototype.canActivateAttribute = function (t) { return this.composition.canSetCurrentAttribute(t) }, n.prototype.deactivateAttribute = function (t) { return this.composition.removeCurrentAttribute(t) }, n.prototype.canDecreaseNestingLevel = function () { return this.composition.canDecreaseNestingLevel() }, n.prototype.canIncreaseNestingLevel = function () { return this.composition.canIncreaseNestingLevel() }, n.prototype.decreaseNestingLevel = function () { return this.canDecreaseNestingLevel() ? this.composition.decreaseNestingLevel() : void 0 }, n.prototype.increaseNestingLevel = function () { return this.canIncreaseNestingLevel() ? this.composition.increaseNestingLevel() : void 0 }, n.prototype.canRedo = function () { return this.undoManager.canRedo() }, n.prototype.canUndo = function () { return this.undoManager.canUndo() }, n.prototype.recordUndoEntry = function (t, e) { let n, i, o; return o = e != null ? e : {}, i = o.context, n = o.consolidatable, this.undoManager.recordUndoEntry(t, { context: i, consolidatable: n }) }, n.prototype.redo = function () { return this.canRedo() ? this.undoManager.redo() : void 0 }, n.prototype.undo = function () { return this.canUndo() ? this.undoManager.undo() : void 0 }, n }()) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.ManagedAttachment = (function (e) { function n (t, e) { let n; this.attachmentManager = t, this.attachment = e, n = this.attachment, this.id = n.id, this.file = n.file } return t(n, e), n.prototype.remove = function () { return this.attachmentManager.requestRemovalOfAttachment(this.attachment) }, n.proxyMethod('attachment.getAttribute'), n.proxyMethod('attachment.hasAttribute'), n.proxyMethod('attachment.setAttribute'), n.proxyMethod('attachment.getAttributes'), n.proxyMethod('attachment.setAttributes'), n.proxyMethod('attachment.isPending'), n.proxyMethod('attachment.isPreviewable'), n.proxyMethod('attachment.getURL'), n.proxyMethod('attachment.getHref'), n.proxyMethod('attachment.getFilename'), n.proxyMethod('attachment.getFilesize'), n.proxyMethod('attachment.getFormattedFilesize'), n.proxyMethod('attachment.getExtension'), n.proxyMethod('attachment.getContentType'), n.proxyMethod('attachment.getFile'), n.proxyMethod('attachment.setFile'), n.proxyMethod('attachment.releaseFile'), n.proxyMethod('attachment.getUploadProgress'), n.proxyMethod('attachment.setUploadProgress'), n }(e.BasicObject)) }.call(this)), (function () { const t = function (t, e) { function i () { this.constructor = t } for (const o in e)n.call(e, o) && (t[o] = e[o]); return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t }; var n = {}.hasOwnProperty; e.AttachmentManager = (function (n) { function i (t) { let e, n, i; for (t == null && (t = []), this.managedAttachments = {}, n = 0, i = t.length; i > n; n++)e = t[n], this.manageAttachment(e) } return t(i, n), i.prototype.getAttachments = function () { let t, e, n, i; n = this.managedAttachments, i = []; for (e in n)t = n[e], i.push(t); return i }, i.prototype.manageAttachment = function (t) { let n, i; return (n = this.managedAttachments)[i = t.id] != null ? n[i] : n[i] = new e.ManagedAttachment(this, t) }, i.prototype.attachmentIsManaged = function (t) { return t.id in this.managedAttachments }, i.prototype.requestRemovalOfAttachment = function (t) { let e; return this.attachmentIsManaged(t) && (e = this.delegate) != null && typeof e.attachmentManagerDidRequestRemovalOfAttachment === 'function' ? e.attachmentManagerDidRequestRemovalOfAttachment(t) : void 0 }, i.prototype.unmanageAttachment = function (t) { let e; return e = this.managedAttachments[t.id], delete this.managedAttachments[t.id], e }, i }(e.BasicObject)) }.call(this)), (function () {
      let t, n, i, o, r, s, a, u, c, l, h; t = e.elementContainsNode, n = e.findChildIndexOfNode, r = e.nodeIsBlockStart, s = e.nodeIsBlockStartComment, o = e.nodeIsBlockContainer, a = e.nodeIsCursorTarget, u = e.nodeIsEmptyTextNode, c = e.nodeIsTextNode, i = e.nodeIsAttachmentElement, l = e.tagName, h = e.walkTree, e.LocationMapper = (function () {
        function e (t) {
          this.element = t
        } let p, d, f, g; return e.prototype.findLocationFromContainerAndOffset = function (e, i, o) { let s, u, l, p, g, m, v; for (m = (o != null ? o : { strict: !0 }).strict, u = 0, l = !1, p = { index: 0, offset: 0 }, (s = this.findAttachmentElementParentForNode(e)) && (e = s.parentNode, i = n(s)), v = h(this.element, { usingFilter: f }); v.nextNode();) { if (g = v.currentNode, g === e && c(e)) { a(g) || (p.offset += i); break } if (g.parentNode === e) { if (u++ === i) break } else if (!t(e, g) && u > 0) break; r(g, { strict: m }) ? (l && p.index++, p.offset = 0, l = !0) : p.offset += d(g) } return p }, e.prototype.findContainerAndOffsetFromLocation = function (t) { let e, i, s, u, l; if (t.index === 0 && t.offset === 0) { for (e = this.element, u = 0; e.firstChild;) if (e = e.firstChild, o(e)) { u = 1; break } return [e, u] } if (l = this.findNodeAndOffsetFromLocation(t), i = l[0], s = l[1], i) { if (c(i))d(i) === 0 ? (e = i.parentNode.parentNode, u = n(i.parentNode), a(i, { name: 'right' }) && u++) : (e = i, u = t.offset - s); else { if (e = i.parentNode, !r(i.previousSibling) && !o(e)) for (;i === e.lastChild && (i = e, e = e.parentNode, !o(e)););u = n(i), t.offset !== 0 && u++ } return [e, u] } }, e.prototype.findNodeAndOffsetFromLocation = function (t) { let e, n, i, o, r, s, u, l; for (u = 0, l = this.getSignificantNodesForIndex(t.index), n = 0, i = l.length; i > n; n++) { if (e = l[n], o = d(e), t.offset <= u + o) if (c(e)) { if (r = e, s = u, t.offset === s && a(r)) break } else r || (r = e, s = u); if (u += o, u > t.offset) break } return [r, s] }, e.prototype.findAttachmentElementParentForNode = function (t) { for (;t && t !== this.element;) { if (i(t)) return t; t = t.parentNode } }, e.prototype.getSignificantNodesForIndex = function (t) { let e, n, i, o, r; for (i = [], r = h(this.element, { usingFilter: p }), o = !1; r.nextNode();) if (n = r.currentNode, s(n)) { if (typeof e !== 'undefined' && e !== null ? e++ : e = 0, e === t)o = !0; else if (o) break } else o && i.push(n); return i }, d = function (t) { let e; return t.nodeType === Node.TEXT_NODE ? a(t) ? 0 : (e = t.textContent, e.length) : l(t) === 'br' || i(t) ? 1 : 0 }, p = function (t) { return g(t) === NodeFilter.FILTER_ACCEPT ? f(t) : NodeFilter.FILTER_REJECT }, g = function (t) { return u(t) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT }, f = function (t) { return i(t.parentNode) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT }, e
      }())
    }.call(this)), (function () { let t; let n; const i = [].slice; t = e.getDOMRange, n = e.setDOMRange, e.PointMapper = (function () { function e () {} return e.prototype.createDOMRangeFromPoint = function (e) { let i, o, r, s, a, u, c, l; if (c = e.x, l = e.y, document.caretPositionFromPoint) return a = document.caretPositionFromPoint(c, l), r = a.offsetNode, o = a.offset, i = document.createRange(), i.setStart(r, o), i; if (document.caretRangeFromPoint) return document.caretRangeFromPoint(c, l); if (document.body.createTextRange) { s = t(); try { u = document.body.createTextRange(), u.moveToPoint(c, l), u.select() } catch (h) {} return i = t(), n(s), i } }, e.prototype.getClientRectsForDOMRange = function (t) { let e, n, o; return n = i.call(t.getClientRects()), o = n[0], e = n[n.length - 1], [o, e] }, e }()) }.call(this)), (function () { let t; const n = function (t, e) { return function () { return t.apply(e, arguments) } }; const i = function (t, e) { function n () { this.constructor = t } for (const i in e)o.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var o = {}.hasOwnProperty; const r = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; t = e.getDOMRange, e.SelectionChangeObserver = (function (e) { function o () { this.run = n(this.run, this), this.update = n(this.update, this), this.selectionManagers = [] } let s; return i(o, e), o.prototype.start = function () { return this.started ? void 0 : (this.started = !0, 'onselectionchange' in document ? document.addEventListener('selectionchange', this.update, !0) : this.run()) }, o.prototype.stop = function () { return this.started ? (this.started = !1, document.removeEventListener('selectionchange', this.update, !0)) : void 0 }, o.prototype.registerSelectionManager = function (t) { return r.call(this.selectionManagers, t) < 0 ? (this.selectionManagers.push(t), this.start()) : void 0 }, o.prototype.unregisterSelectionManager = function (t) { let e; return this.selectionManagers = (function () { let n, i, o, r; for (o = this.selectionManagers, r = [], n = 0, i = o.length; i > n; n++)e = o[n], e !== t && r.push(e); return r }.call(this)), this.selectionManagers.length === 0 ? this.stop() : void 0 }, o.prototype.notifySelectionManagersOfSelectionChange = function () { let t, e, n, i, o; for (n = this.selectionManagers, i = [], t = 0, e = n.length; e > t; t++)o = n[t], i.push(o.selectionDidChange()); return i }, o.prototype.update = function () { let e; return e = t(), s(e, this.domRange) ? void 0 : (this.domRange = e, this.notifySelectionManagersOfSelectionChange()) }, o.prototype.reset = function () { return this.domRange = null, this.update() }, o.prototype.run = function () { return this.started ? (this.update(), requestAnimationFrame(this.run)) : void 0 }, s = function (t, e) { return (t != null ? t.startContainer : void 0) === (e != null ? e.startContainer : void 0) && (t != null ? t.startOffset : void 0) === (e != null ? e.startOffset : void 0) && (t != null ? t.endContainer : void 0) === (e != null ? e.endContainer : void 0) && (t != null ? t.endOffset : void 0) === (e != null ? e.endOffset : void 0) }, o }(e.BasicObject)), e.selectionChangeObserver == null && (e.selectionChangeObserver = new e.SelectionChangeObserver()) }.call(this)), (function () { let t; let n; let i; let o; let r; let s; let a; let u; let c; let l; const h = function (t, e) { return function () { return t.apply(e, arguments) } }; const p = function (t, e) { function n () { this.constructor = t } for (const i in e)d.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var d = {}.hasOwnProperty; i = e.getDOMSelection, n = e.getDOMRange, l = e.setDOMRange, t = e.elementContainsNode, s = e.nodeIsCursorTarget, r = e.innerElementIsActive, o = e.handleEvent, a = e.normalizeRange, u = e.rangeIsCollapsed, c = e.rangesAreEqual, e.SelectionManager = (function (d) { function f (t) { this.element = t, this.selectionDidChange = h(this.selectionDidChange, this), this.didMouseDown = h(this.didMouseDown, this), this.locationMapper = new e.LocationMapper(this.element), this.pointMapper = new e.PointMapper(), this.lockCount = 0, o('mousedown', { onElement: this.element, withCallback: this.didMouseDown }) } return p(f, d), f.prototype.getLocationRange = function (t) { let e, i; return t == null && (t = {}), e = t.strict === !1 ? this.createLocationRangeFromDOMRange(n(), { strict: !1 }) : t.ignoreLock ? this.currentLocationRange : (i = this.lockedLocationRange) != null ? i : this.currentLocationRange }, f.prototype.setLocationRange = function (t) { let e; if (!this.lockedLocationRange) return t = a(t), (e = this.createDOMRangeFromLocationRange(t)) ? (l(e), this.updateCurrentLocationRange(t)) : void 0 }, f.prototype.setLocationRangeFromPointRange = function (t) { let e, n; return t = a(t), n = this.getLocationAtPoint(t[0]), e = this.getLocationAtPoint(t[1]), this.setLocationRange([n, e]) }, f.prototype.getClientRectAtLocationRange = function (t) { let e; return (e = this.createDOMRangeFromLocationRange(t)) ? this.getClientRectsForDOMRange(e)[1] : void 0 }, f.prototype.locationIsCursorTarget = function (t) { let e, n, i; return i = this.findNodeAndOffsetFromLocation(t), e = i[0], n = i[1], s(e) }, f.prototype.lock = function () { return this.lockCount++ === 0 ? (this.updateCurrentLocationRange(), this.lockedLocationRange = this.getLocationRange()) : void 0 }, f.prototype.unlock = function () { let t; return --this.lockCount === 0 && (t = this.lockedLocationRange, this.lockedLocationRange = null, t != null) ? this.setLocationRange(t) : void 0 }, f.prototype.clearSelection = function () { let t; return (t = i()) != null ? t.removeAllRanges() : void 0 }, f.prototype.selectionIsCollapsed = function () { let t; return ((t = n()) != null ? t.collapsed : void 0) === !0 }, f.prototype.selectionIsExpanded = function () { return !this.selectionIsCollapsed() }, f.prototype.createLocationRangeFromDOMRange = function (t, e) { let n, i; if (t != null && this.domRangeWithinElement(t) && (i = this.findLocationFromContainerAndOffset(t.startContainer, t.startOffset, e))) return t.collapsed || (n = this.findLocationFromContainerAndOffset(t.endContainer, t.endOffset, e)), a([i, n]) }, f.proxyMethod('locationMapper.findLocationFromContainerAndOffset'), f.proxyMethod('locationMapper.findContainerAndOffsetFromLocation'), f.proxyMethod('locationMapper.findNodeAndOffsetFromLocation'), f.proxyMethod('pointMapper.createDOMRangeFromPoint'), f.proxyMethod('pointMapper.getClientRectsForDOMRange'), f.prototype.didMouseDown = function () { return this.pauseTemporarily() }, f.prototype.pauseTemporarily = function () { let e, n, i, r; return this.paused = !0, n = (function (e) { return function () { let n, o, s; for (e.paused = !1, clearTimeout(r), o = 0, s = i.length; s > o; o++)n = i[o], n.destroy(); return t(document, e.element) ? e.selectionDidChange() : void 0 } }(this)), r = setTimeout(n, 200), i = (function () { let t, i, r, s; for (r = ['mousemove', 'keydown'], s = [], t = 0, i = r.length; i > t; t++)e = r[t], s.push(o(e, { onElement: document, withCallback: n })); return s }()) }, f.prototype.selectionDidChange = function () { return this.paused || r(this.element) ? void 0 : this.updateCurrentLocationRange() }, f.prototype.updateCurrentLocationRange = function (t) { let e; return (t != null ? t : t = this.createLocationRangeFromDOMRange(n())) && !c(t, this.currentLocationRange) ? (this.currentLocationRange = t, (e = this.delegate) != null && typeof e.locationRangeDidChange === 'function' ? e.locationRangeDidChange(this.currentLocationRange.slice(0)) : void 0) : void 0 }, f.prototype.createDOMRangeFromLocationRange = function (t) { let e, n, i, o; return i = this.findContainerAndOffsetFromLocation(t[0]), n = u(t) ? i : (o = this.findContainerAndOffsetFromLocation(t[1])) != null ? o : i, i != null && n != null ? (e = document.createRange(), e.setStart.apply(e, i), e.setEnd.apply(e, n), e) : void 0 }, f.prototype.getLocationAtPoint = function (t) { let e, n; return (e = this.createDOMRangeFromPoint(t)) && (n = this.createLocationRangeFromDOMRange(e)) != null ? n[0] : void 0 }, f.prototype.domRangeWithinElement = function (e) { return e.collapsed ? t(this.element, e.startContainer) : t(this.element, e.startContainer) && t(this.element, e.endContainer) }, f }(e.BasicObject)) }.call(this)), (function () { let t; let n; let i; let o; const r = function (t, e) { function n () { this.constructor = t } for (const i in e)s.call(e, i) && (t[i] = e[i]); return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t }; var s = {}.hasOwnProperty; const a = [].slice; i = e.rangeIsCollapsed, o = e.rangesAreEqual, n = e.objectsAreEqual, t = e.getBlockConfig, e.EditorController = (function (s) { function u (t) { let n, i; this.editorElement = t.editorElement, n = t.document, i = t.html, this.selectionManager = new e.SelectionManager(this.editorElement), this.selectionManager.delegate = this, this.composition = new e.Composition(), this.composition.delegate = this, this.attachmentManager = new e.AttachmentManager(this.composition.getAttachments()), this.attachmentManager.delegate = this, this.inputController = new (e['Level' + e.config.input.getLevel() + 'InputController'])(this.editorElement), this.inputController.delegate = this, this.inputController.responder = this.composition, this.compositionController = new e.CompositionController(this.editorElement, this.composition), this.compositionController.delegate = this, this.toolbarController = new e.ToolbarController(this.editorElement.toolbarElement), this.toolbarController.delegate = this, this.editor = new e.Editor(this.composition, this.selectionManager, this.editorElement), n != null ? this.editor.loadDocument(n) : this.editor.loadHTML(i) } let c; return r(u, s), u.prototype.registerSelectionManager = function () { return e.selectionChangeObserver.registerSelectionManager(this.selectionManager) }, u.prototype.unregisterSelectionManager = function () { return e.selectionChangeObserver.unregisterSelectionManager(this.selectionManager) }, u.prototype.render = function () { return this.compositionController.render() }, u.prototype.reparse = function () { return this.composition.replaceHTML(this.editorElement.innerHTML) }, u.prototype.compositionDidChangeDocument = function () { return this.notifyEditorElement('document-change'), this.handlingInput ? void 0 : this.render() }, u.prototype.compositionDidChangeCurrentAttributes = function (t) { return this.currentAttributes = t, this.toolbarController.updateAttributes(this.currentAttributes), this.updateCurrentActions(), this.notifyEditorElement('attributes-change', { attributes: this.currentAttributes }) }, u.prototype.compositionDidPerformInsertionAtRange = function (t) { return this.pasting ? this.pastedRange = t : void 0 }, u.prototype.compositionShouldAcceptFile = function (t) { return this.notifyEditorElement('file-accept', { file: t }) }, u.prototype.compositionDidAddAttachment = function (t) { let e; return e = this.attachmentManager.manageAttachment(t), this.notifyEditorElement('attachment-add', { attachment: e }) }, u.prototype.compositionDidEditAttachment = function (t) { let e; return this.compositionController.rerenderViewForObject(t), e = this.attachmentManager.manageAttachment(t), this.notifyEditorElement('attachment-edit', { attachment: e }), this.notifyEditorElement('change') }, u.prototype.compositionDidChangeAttachmentPreviewURL = function (t) { return this.compositionController.invalidateViewForObject(t), this.notifyEditorElement('change') }, u.prototype.compositionDidRemoveAttachment = function (t) { let e; return e = this.attachmentManager.unmanageAttachment(t), this.notifyEditorElement('attachment-remove', { attachment: e }) }, u.prototype.compositionDidStartEditingAttachment = function (t, e) { return this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(t), this.compositionController.installAttachmentEditorForAttachment(t, e), this.selectionManager.setLocationRange(this.attachmentLocationRange) }, u.prototype.compositionDidStopEditingAttachment = function () { return this.compositionController.uninstallAttachmentEditor(), this.attachmentLocationRange = null }, u.prototype.compositionDidRequestChangingSelectionToLocationRange = function (t) { return !this.loadingSnapshot || this.isFocused() ? (this.requestedLocationRange = t, this.compositionRevisionWhenLocationRangeRequested = this.composition.revision, this.handlingInput ? void 0 : this.render()) : void 0 }, u.prototype.compositionWillLoadSnapshot = function () { return this.loadingSnapshot = !0 }, u.prototype.compositionDidLoadSnapshot = function () { return this.compositionController.refreshViewCache(), this.render(), this.loadingSnapshot = !1 }, u.prototype.getSelectionManager = function () { return this.selectionManager }, u.proxyMethod('getSelectionManager().setLocationRange'), u.proxyMethod('getSelectionManager().getLocationRange'), u.prototype.attachmentManagerDidRequestRemovalOfAttachment = function (t) { return this.removeAttachment(t) }, u.prototype.compositionControllerWillSyncDocumentView = function () { return this.inputController.editorWillSyncDocumentView(), this.selectionManager.lock(), this.selectionManager.clearSelection() }, u.prototype.compositionControllerDidSyncDocumentView = function () { return this.inputController.editorDidSyncDocumentView(), this.selectionManager.unlock(), this.updateCurrentActions(), this.notifyEditorElement('sync') }, u.prototype.compositionControllerDidRender = function () { return this.requestedLocationRange != null && (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision && this.selectionManager.setLocationRange(this.requestedLocationRange), this.requestedLocationRange = null, this.compositionRevisionWhenLocationRangeRequested = null), this.renderedCompositionRevision !== this.composition.revision && (this.runEditorFilters(), this.composition.updateCurrentAttributes(), this.notifyEditorElement('render')), this.renderedCompositionRevision = this.composition.revision }, u.prototype.compositionControllerDidFocus = function () { return this.isFocusedInvisibly() && this.setLocationRange({ index: 0, offset: 0 }), this.toolbarController.hideDialog(), this.notifyEditorElement('focus') }, u.prototype.compositionControllerDidBlur = function () { return this.notifyEditorElement('blur') }, u.prototype.compositionControllerDidSelectAttachment = function (t, e) { return this.toolbarController.hideDialog(), this.composition.editAttachment(t, e) }, u.prototype.compositionControllerDidRequestDeselectingAttachment = function (t) { let e, n; return e = (n = this.attachmentLocationRange) != null ? n : this.composition.document.getLocationRangeOfAttachment(t), this.selectionManager.setLocationRange(e[1]) }, u.prototype.compositionControllerWillUpdateAttachment = function (t) { return this.editor.recordUndoEntry('Edit Attachment', { context: t.id, consolidatable: !0 }) }, u.prototype.compositionControllerDidRequestRemovalOfAttachment = function (t) { return this.removeAttachment(t) }, u.prototype.inputControllerWillHandleInput = function () { return this.handlingInput = !0, this.requestedRender = !1 }, u.prototype.inputControllerDidRequestRender = function () { return this.requestedRender = !0 }, u.prototype.inputControllerDidHandleInput = function () { return this.handlingInput = !1, this.requestedRender ? (this.requestedRender = !1, this.render()) : void 0 }, u.prototype.inputControllerDidAllowUnhandledInput = function () { return this.notifyEditorElement('change') }, u.prototype.inputControllerDidRequestReparse = function () { return this.reparse() }, u.prototype.inputControllerWillPerformTyping = function () { return this.recordTypingUndoEntry() }, u.prototype.inputControllerWillPerformFormatting = function (t) { return this.recordFormattingUndoEntry(t) }, u.prototype.inputControllerWillCutText = function () { return this.editor.recordUndoEntry('Cut') }, u.prototype.inputControllerWillPaste = function (t) { return this.editor.recordUndoEntry('Paste'), this.pasting = !0, this.notifyEditorElement('before-paste', { paste: t }) }, u.prototype.inputControllerDidPaste = function (t) { return t.range = this.pastedRange, this.pastedRange = null, this.pasting = null, this.notifyEditorElement('paste', { paste: t }) }, u.prototype.inputControllerWillMoveText = function () { return this.editor.recordUndoEntry('Move') }, u.prototype.inputControllerWillAttachFiles = function () { return this.editor.recordUndoEntry('Drop Files') }, u.prototype.inputControllerWillPerformUndo = function () { return this.editor.undo() }, u.prototype.inputControllerWillPerformRedo = function () { return this.editor.redo() }, u.prototype.inputControllerDidReceiveKeyboardCommand = function (t) { return this.toolbarController.applyKeyboardCommand(t) }, u.prototype.inputControllerDidStartDrag = function () { return this.locationRangeBeforeDrag = this.selectionManager.getLocationRange() }, u.prototype.inputControllerDidReceiveDragOverPoint = function (t) { return this.selectionManager.setLocationRangeFromPointRange(t) }, u.prototype.inputControllerDidCancelDrag = function () { return this.selectionManager.setLocationRange(this.locationRangeBeforeDrag), this.locationRangeBeforeDrag = null }, u.prototype.locationRangeDidChange = function (t) { return this.composition.updateCurrentAttributes(), this.updateCurrentActions(), this.attachmentLocationRange && !o(this.attachmentLocationRange, t) && this.composition.stopEditingAttachment(), this.notifyEditorElement('selection-change') }, u.prototype.toolbarDidClickButton = function () { return this.getLocationRange() ? void 0 : this.setLocationRange({ index: 0, offset: 0 }) }, u.prototype.toolbarDidInvokeAction = function (t) { return this.invokeAction(t) }, u.prototype.toolbarDidToggleAttribute = function (t) { return this.recordFormattingUndoEntry(t), this.composition.toggleCurrentAttribute(t), this.render(), this.selectionFrozen ? void 0 : this.editorElement.focus() }, u.prototype.toolbarDidUpdateAttribute = function (t, e) { return this.recordFormattingUndoEntry(t), this.composition.setCurrentAttribute(t, e), this.render(), this.selectionFrozen ? void 0 : this.editorElement.focus() }, u.prototype.toolbarDidRemoveAttribute = function (t) { return this.recordFormattingUndoEntry(t), this.composition.removeCurrentAttribute(t), this.render(), this.selectionFrozen ? void 0 : this.editorElement.focus() }, u.prototype.toolbarWillShowDialog = function () { return this.composition.expandSelectionForEditing(), this.freezeSelection() }, u.prototype.toolbarDidShowDialog = function (t) { return this.notifyEditorElement('toolbar-dialog-show', { dialogName: t }) }, u.prototype.toolbarDidHideDialog = function (t) { return this.thawSelection(), this.editorElement.focus(), this.notifyEditorElement('toolbar-dialog-hide', { dialogName: t }) }, u.prototype.freezeSelection = function () { return this.selectionFrozen ? void 0 : (this.selectionManager.lock(), this.composition.freezeSelection(), this.selectionFrozen = !0, this.render()) }, u.prototype.thawSelection = function () { return this.selectionFrozen ? (this.composition.thawSelection(), this.selectionManager.unlock(), this.selectionFrozen = !1, this.render()) : void 0 }, u.prototype.actions = { undo: { test: function () { return this.editor.canUndo() }, perform: function () { return this.editor.undo() } }, redo: { test: function () { return this.editor.canRedo() }, perform: function () { return this.editor.redo() } }, link: { test: function () { return this.editor.canActivateAttribute('href') } }, increaseNestingLevel: { test: function () { return this.editor.canIncreaseNestingLevel() }, perform: function () { return this.editor.increaseNestingLevel() && this.render() } }, decreaseNestingLevel: { test: function () { return this.editor.canDecreaseNestingLevel() }, perform: function () { return this.editor.decreaseNestingLevel() && this.render() } }, attachFiles: { test: function () { return !0 }, perform: function () { return e.config.input.pickFiles(this.editor.insertFiles) } } }, u.prototype.canInvokeAction = function (t) { let e, n; return this.actionIsExternal(t) ? !0 : !!((e = this.actions[t]) != null && (n = e.test) != null ? n.call(this) : void 0) }, u.prototype.invokeAction = function (t) { let e, n; return this.actionIsExternal(t) ? this.notifyEditorElement('action-invoke', { actionName: t }) : (e = this.actions[t]) != null && (n = e.perform) != null ? n.call(this) : void 0 }, u.prototype.actionIsExternal = function (t) { return /^x-./.test(t) }, u.prototype.getCurrentActions = function () { let t, e; e = {}; for (t in this.actions)e[t] = this.canInvokeAction(t); return e }, u.prototype.updateCurrentActions = function () { let t; return t = this.getCurrentActions(), n(t, this.currentActions) ? void 0 : (this.currentActions = t, this.toolbarController.updateActions(this.currentActions), this.notifyEditorElement('actions-change', { actions: this.currentActions })) }, u.prototype.runEditorFilters = function () { let t, e, n, i, o, r, s, a; for (a = this.composition.getSnapshot(), o = this.editor.filters, n = 0, i = o.length; i > n; n++)e = o[n], t = a.document, s = a.selectedRange, a = (r = e.call(this.editor, a)) != null ? r : {}, a.document == null && (a.document = t), a.selectedRange == null && (a.selectedRange = s); return c(a, this.composition.getSnapshot()) ? void 0 : this.composition.loadSnapshot(a) }, c = function (t, e) { return o(t.selectedRange, e.selectedRange) && t.document.isEqualTo(e.document) }, u.prototype.updateInputElement = function () { let t, n; return t = this.compositionController.getSerializableElement(), n = e.serializeToContentType(t, 'text/html'), this.editorElement.setInputElementValue(n) }, u.prototype.notifyEditorElement = function (t, e) { switch (t) { case 'document-change':this.documentChangedSinceLastRender = !0; break; case 'render':this.documentChangedSinceLastRender && (this.documentChangedSinceLastRender = !1, this.notifyEditorElement('change')); break; case 'change':case 'attachment-add':case 'attachment-edit':case 'attachment-remove':this.updateInputElement() } return this.editorElement.notify(t, e) }, u.prototype.removeAttachment = function (t) { return this.editor.recordUndoEntry('Delete Attachment'), this.composition.removeAttachment(t), this.render() }, u.prototype.recordFormattingUndoEntry = function (e) { let n, o; return n = t(e), o = this.selectionManager.getLocationRange(), n || !i(o) ? this.editor.recordUndoEntry('Formatting', { context: this.getUndoContext(), consolidatable: !0 }) : void 0 }, u.prototype.recordTypingUndoEntry = function () { return this.editor.recordUndoEntry('Typing', { context: this.getUndoContext(this.currentAttributes), consolidatable: !0 }) }, u.prototype.getUndoContext = function () { let t; return t = arguments.length >= 1 ? a.call(arguments, 0) : [], [this.getLocationContext(), this.getTimeContext()].concat(a.call(t)) }, u.prototype.getLocationContext = function () { let t; return t = this.selectionManager.getLocationRange(), i(t) ? t[0].index : t }, u.prototype.getTimeContext = function () { return e.config.undoInterval > 0 ? Math.floor((new Date()).getTime() / e.config.undoInterval) : 0 }, u.prototype.isFocused = function () { let t; return this.editorElement === ((t = this.editorElement.ownerDocument) != null ? t.activeElement : void 0) }, u.prototype.isFocusedInvisibly = function () { return this.isFocused() && !this.getLocationRange() }, u }(e.Controller)) }.call(this)), (function () { let t; let n; let i; let o; let r; let s; let a; const u = [].indexOf || function (t) { for (let e = 0, n = this.length; n > e; e++) if (e in this && this[e] === t) return e; return -1 }; n = e.browser, s = e.makeElement, a = e.triggerEvent, o = e.handleEvent, r = e.handleEventOnce, i = e.findClosestElementFromNode, t = e.AttachmentView.attachmentSelector, e.registerElement('trix-editor', (function () { let c, l, h, p, d, f, g, m, v; return g = 0, l = function (t) { return !document.querySelector(':focus') && t.hasAttribute('autofocus') && document.querySelector('[autofocus]') === t ? t.focus() : void 0 }, m = function (t) { return t.hasAttribute('contenteditable') ? void 0 : (t.setAttribute('contenteditable', ''), r('focus', { onElement: t, withCallback: function () { return h(t) } })) }, h = function (t) { return d(t), v(t) }, d = function (t) { return (typeof document.queryCommandSupported === 'function' ? document.queryCommandSupported('enableObjectResizing') : void 0) ? (document.execCommand('enableObjectResizing', !1, !1), o('mscontrolselect', { onElement: t, preventDefault: !0 })) : void 0 }, v = function () { let t; return (typeof document.queryCommandSupported === 'function' ? document.queryCommandSupported('DefaultParagraphSeparator') : void 0) && (t = e.config.blockAttributes.default.tagName, t === 'div' || t === 'p') ? document.execCommand('DefaultParagraphSeparator', !1, t) : void 0 }, c = function (t) { return t.hasAttribute('role') ? void 0 : t.setAttribute('role', 'textbox') }, f = function (t) { let e; if (!t.hasAttribute('aria-label') && !t.hasAttribute('aria-labelledby')) return (e = function () { let e, n, i; return i = (function () { let n, i, o, r; for (o = t.labels, r = [], n = 0, i = o.length; i > n; n++)e = o[n], e.contains(t) || r.push(e.textContent); return r }()), (n = i.join(' ')) ? t.setAttribute('aria-label', n) : t.removeAttribute('aria-label') })(), o('focus', { onElement: t, withCallback: e }) }, p = (function () { return n.forcesObjectResizing ? { display: 'inline', width: 'auto' } : { display: 'inline-block', width: '1px' } }()), { defaultCSS: '%t {\n  display: block;\n}\n\n%t:empty:not(:focus)::before {\n  content: attr(placeholder);\n  color: graytext;\n  cursor: text;\n}\n\n%t a[contenteditable=false] {\n  cursor: text;\n}\n\n%t img {\n  max-width: 100%;\n  height: auto;\n}\n\n%t ' + t + ' figcaption textarea {\n  resize: none;\n}\n\n%t ' + t + ' figcaption textarea.trix-autoresize-clone {\n  position: absolute;\n  left: -9999px;\n  max-height: 0px;\n}\n\n%t ' + t + ' figcaption[data-trix-placeholder]:empty::before {\n  content: attr(data-trix-placeholder);\n  color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n  display: ' + p.display + ' !important;\n  width: ' + p.width + ' !important;\n  padding: 0 !important;\n  margin: 0 !important;\n  border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n  vertical-align: top !important;\n  margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n  vertical-align: bottom !important;\n  margin-right: -1px !important;\n}', trixId: { get: function () { return this.hasAttribute('trix-id') ? this.getAttribute('trix-id') : (this.setAttribute('trix-id', ++g), this.trixId) } }, labels: { get: function () { let t, e, n; return e = [], this.id && this.ownerDocument && e.push.apply(e, this.ownerDocument.querySelectorAll("label[for='" + this.id + "']")), (t = i(this, { matchingSelector: 'label' })) && ((n = t.control) === this || n === null) && e.push(t), e } }, toolbarElement: { get: function () { let t, e, n; return this.hasAttribute('toolbar') ? (e = this.ownerDocument) != null ? e.getElementById(this.getAttribute('toolbar')) : void 0 : this.parentNode ? (n = 'trix-toolbar-' + this.trixId, this.setAttribute('toolbar', n), t = s('trix-toolbar', { id: n }), this.parentNode.insertBefore(t, this), t) : void 0 } }, inputElement: { get: function () { let t, e, n; return this.hasAttribute('input') ? (n = this.ownerDocument) != null ? n.getElementById(this.getAttribute('input')) : void 0 : this.parentNode ? (e = 'trix-input-' + this.trixId, this.setAttribute('input', e), t = s('input', { type: 'hidden', id: e }), this.parentNode.insertBefore(t, this.nextElementSibling), t) : void 0 } }, editor: { get: function () { let t; return (t = this.editorController) != null ? t.editor : void 0 } }, name: { get: function () { let t; return (t = this.inputElement) != null ? t.name : void 0 } }, value: { get: function () { let t; return (t = this.inputElement) != null ? t.value : void 0 }, set: function (t) { let e; return this.defaultValue = t, (e = this.editor) != null ? e.loadHTML(this.defaultValue) : void 0 } }, notify: function (t, e) { return this.editorController ? a('trix-' + t, { onElement: this, attributes: e }) : void 0 }, setInputElementValue: function (t) { let e; return (e = this.inputElement) != null ? e.value = t : void 0 }, initialize: function () { return this.hasAttribute('data-trix-internal') ? void 0 : (m(this), c(this), f(this)) }, connect: function () { return this.hasAttribute('data-trix-internal') ? void 0 : (this.editorController || (a('trix-before-initialize', { onElement: this }), this.editorController = new e.EditorController({ editorElement: this, html: this.defaultValue = this.value }), requestAnimationFrame(function (t) { return function () { return a('trix-initialize', { onElement: t }) } }(this))), this.editorController.registerSelectionManager(), this.registerResetListener(), this.registerClickListener(), l(this)) }, disconnect: function () { let t; return (t = this.editorController) != null && t.unregisterSelectionManager(), this.unregisterResetListener(), this.unregisterClickListener() }, registerResetListener: function () { return this.resetListener = this.resetBubbled.bind(this), window.addEventListener('reset', this.resetListener, !1) }, unregisterResetListener: function () { return window.removeEventListener('reset', this.resetListener, !1) }, registerClickListener: function () { return this.clickListener = this.clickBubbled.bind(this), window.addEventListener('click', this.clickListener, !1) }, unregisterClickListener: function () { return window.removeEventListener('click', this.clickListener, !1) }, resetBubbled: function (t) { let e; if (!t.defaultPrevented && t.target === ((e = this.inputElement) != null ? e.form : void 0)) return this.reset() }, clickBubbled: function (t) { let e; if (!(t.defaultPrevented || this.contains(t.target) || !(e = i(t.target, { matchingSelector: 'label' })) || u.call(this.labels, e) < 0)) return this.focus() }, reset: function () { return this.value = this.defaultValue } } }())) }.call(this)), (function () {}.call(this))
  }).call(this), typeof module === 'object' && module.exports ? module.exports = e : typeof define === 'function' && define.amd && define(e)
}.call(this))
